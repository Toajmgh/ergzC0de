{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/201912101319.png","path":"images/201912101319.png","modified":0,"renderable":0},{"_id":"source/images/git_201912101316.png","path":"images/git_201912101316.png","modified":0,"renderable":0},{"_id":"source/images/git_201912101318.png","path":"images/git_201912101318.png","modified":0,"renderable":0},{"_id":"source/images/git_201912101326.png","path":"images/git_201912101326.png","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/images/banner_backup.jpg","path":"css/images/banner_backup.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/clipboard-use.js","path":"js/clipboard-use.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":0,"renderable":1},{"_id":"source/images/201912121526.png","path":"images/201912121526.png","modified":0,"renderable":0},{"_id":"source/images/201912121529.png","path":"images/201912121529.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121523.png","path":"images/sql_201912121523.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121528.png","path":"images/sql_201912121528.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121531.png","path":"images/sql_201912121531.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121532.png","path":"images/sql_201912121532.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121533.png","path":"images/sql_201912121533.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121534.png","path":"images/sql_201912121534.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121542.png","path":"images/sql_201912121542.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121544.png","path":"images/sql_201912121544.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121520.png","path":"images/sql_201912121520.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121552.png","path":"images/sql_201912121552.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121553.png","path":"images/sql_201912121553.png","modified":0,"renderable":0},{"_id":"source/images/sql_201912121558.png","path":"images/sql_201912121558.png","modified":0,"renderable":0},{"_id":"source/images/tomcat_201912182233.png","path":"images/tomcat_201912182233.png","modified":0,"renderable":0},{"_id":"source/images/tomcat_201912182226.png","path":"images/tomcat_201912182226.png","modified":0,"renderable":0},{"_id":"source/images/mysql_201912182306.png","path":"images/mysql_201912182306.png","modified":0,"renderable":0},{"_id":"source/images/mysql_201912182311.png","path":"images/mysql_201912182311.png","modified":0,"renderable":0},{"_id":"source/images/mysql_201912182301.png","path":"images/mysql_201912182301.png","modified":0,"renderable":0},{"_id":"source/images/mysql_201912182321.png","path":"images/mysql_201912182321.png","modified":0,"renderable":0},{"_id":"source/images/mysql_201912182322.png","path":"images/mysql_201912182322.png","modified":0,"renderable":0},{"_id":"source/images/markdown_201912251552.png","path":"images/markdown_201912251552.png","modified":0,"renderable":0},{"_id":"source/images/markdown_201912251554.png","path":"images/markdown_201912251554.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1574850050862},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1574850050862},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1574850050862},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1574850050862},{"_id":"themes/landscape/_config.yml","hash":"4e13f0bda4fd0951234bc0aa5e7e38929b04173c","modified":1576210703141},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1574850050866},{"_id":"source/_posts/Test-Hexo-Writing-Title.md","hash":"cabc3f2e2c833a12ae57b0bdb690c42fcbaa251c","modified":1575764341000},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1574850050862},{"_id":"source/_posts/how-to-go-to-school.md","hash":"8145d507a9b98008edccbb676ce247816cc1382d","modified":1575780436787},{"_id":"source/about/me.md","hash":"185eb329036f47724d32eb901a21f1e02e63c4ea","modified":1577259869658},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1574850050862},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1574850050862},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1574850050862},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1574850050862},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1574850050862},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1574850050862},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1574850050862},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1574850050862},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1574850050862},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1574850050862},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1574850050862},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1574850050862},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1574850050866},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1574850050866},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1574850050866},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1574850050866},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1574850050866},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1574850050866},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1574850050866},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"153a115c7d6e088d259908a6baf4cbc8c688e7a5","modified":1576210703141},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"0282897b8bca83e1703dbc630d94036b7515cb80","modified":1576204329064},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"885df51ee7a7a3411b4cda4ce55bfb01071ba9c0","modified":1576140773606},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"a5a0f0c87be83607b1bd096c41ddc1ae6e2c44b7","modified":1576133225042},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"0a1729199ce0c53d465347fd1ffb305ff74d9ee4","modified":1575945577832},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"1761300e1f4160d30b1814141862a8792d5f9a8e","modified":1576012099207},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1574850050866},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"8f77f0d09b92f89fcc1fd18470b90aa0971f9fc5","modified":1576009637211},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1574850050866},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"bb4b99b49fb0b647f6c9d8ebb06fc94bbca6b7f7","modified":1576402002012},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1574850050866},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1574850050866},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1574850050866},{"_id":"themes/landscape/source/css/_variables.styl","hash":"f2e7b286dfbddbd128cdf413d50843e2bc8d0938","modified":1576011548059},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1574850050878},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1574850050878},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1574850050866},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"025a3d083f727af83162ce7c60c2b0d849aa7313","modified":1575963778000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"8a268bac246df1e2dc19e1a641acb36fa132339c","modified":1576130838278},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"b257c5b7eb6d8f4111b8fb8f2dc843098aaeab0a","modified":1576011721223},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1574850050866},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1574850050866},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1574850050866},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1574850050866},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1574850050866},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1574850050870},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1574850050878},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1574850050878},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1574850050878},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1574850050870},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"2991197b04c13f512f734a76d4ac422d89dbe229","modified":1575961985000},{"_id":"public/content.json","hash":"44790ecb8e3e9227ff3321970e0689aa9d7ea03e","modified":1577371526333},{"_id":"public/search.xml","hash":"3d69a1887f07ebe0b6211ea043890ca8763e4580","modified":1577371526333},{"_id":"public/about/me.html","hash":"58fbc85e5941c2edacf7ffbc5201133da14ce693","modified":1577371361875},{"_id":"public/2019/12/08/Test-Hexo-Writing-Title.html","hash":"a52db50e3ab5b9af669d14eee76ddc16329b53d9","modified":1575779300134},{"_id":"public/2019/11/27/hello-world.html","hash":"3bb36b940aa6a47cc1e2d4cedb18ef25b57787d0","modified":1575944180903},{"_id":"public/2019/11/26/how-to-go-to-school.html","hash":"afa0b76330d7b1b38016adef4c6c6889049c9038","modified":1575950356261},{"_id":"public/archives/index.html","hash":"f31a873406326c6a7a5adb528923e5788fcba9c7","modified":1577371361875},{"_id":"public/archives/2019/index.html","hash":"49319176b515692b14c2823dc1ed66708e85a35e","modified":1577371361875},{"_id":"public/archives/2019/11/index.html","hash":"c793365228a5ee20ec7b54b7acbfcd372162bb35","modified":1577371361875},{"_id":"public/archives/2019/12/index.html","hash":"0777756f484b94e53c6045373a3d5ca8c54b119c","modified":1577371361875},{"_id":"public/index.html","hash":"31ad50de7cd4c81434e9c3802e7cf1aa605769de","modified":1577371526333},{"_id":"public/tags/java/index.html","hash":"bec44be3c6a7a630976331040a3941e394cf915e","modified":1575951386504},{"_id":"public/tags/python/index.html","hash":"4272b931f6d64216713b71f46e900140dcf82523","modified":1575951386504},{"_id":"source/_posts/test-hexo-writing-title.md","hash":"79a30f4f7c043c9fcbec5d3001d6b3e72938f665","modified":1575780859120},{"_id":"public/2019/12/08/test-hexo-writing-title.html","hash":"69a6b217fbcd3dcf44a446ed97683bffadf03916","modified":1575780871122},{"_id":"source/_posts/pm2-watch-hexo-process.md","hash":"d9e9d04c82cb4ad65afa3788a7b0eaed0394cbc2","modified":1577371489661},{"_id":"public/2019/12/08/pm2-watch-hexo-process.html","hash":"9b16f7780ac94caeb2cfc359e03d077620bbce48","modified":1577371526333},{"_id":"public/categories/shell/index.html","hash":"d7755c7b877ad13d20660833db9936050f7d5b5f","modified":1577371361875},{"_id":"public/tags/pm2/index.html","hash":"f8c5bccdfe30e1d118f0c967d0cd4ad7a32377e3","modified":1577371361875},{"_id":"public/tags/hexo/index.html","hash":"0ce0a597309d9a25f95b0d7c56c4e7a06f67f699","modified":1577371361875},{"_id":"source/_posts/pm2-common-command-introduction.md","hash":"1c62fa3ac49ff041177c7c2bd3498f8692fbc05c","modified":1575950241695},{"_id":"source/images/pasted-0.png","hash":"0373b3917904dd1e57c313e21ff8f7cb271592f5","modified":1575949857995},{"_id":"public/2019/12/10/pm2-common-command-introduction.html","hash":"b528d44df9df7e8a78f736a5a097644df175532f","modified":1575950356261},{"_id":"public/images/pasted-0.png","hash":"0373b3917904dd1e57c313e21ff8f7cb271592f5","modified":1576137756969},{"_id":"source/_posts/git-common-commands-using.md","hash":"05220758dee975a01fb58cfb8dee7131000ef59e","modified":1576678112342},{"_id":"source/_posts/pm2-common-commands-introduction.md","hash":"81c6bb767078a1834cb337028631ed8d73885a3c","modified":1577371470513},{"_id":"public/2019/12/10/pm2-common-commands-introduction.html","hash":"6f6adf08c727bf29789fc82fc393ce3619b8db74","modified":1577371526333},{"_id":"public/2019/11/26/git-common-commands-using.html","hash":"ae7205fcdf8cb67d35352604ce3dfb39e1aa6ac0","modified":1577371361875},{"_id":"public/categories/linux/index.html","hash":"403da9006d56ee2217497fbfbbbaef455ce0f905","modified":1577371361875},{"_id":"source/images/201912101319.png","hash":"0742138fd3003f4cdda1c718db37c0d48d883b89","modified":1575955201332},{"_id":"source/images/git_201912101316.png","hash":"ef0c2b4a33c998c0712069f99f48ffeebe170ec2","modified":1575954980328},{"_id":"source/images/git_201912101318.png","hash":"c144b63e8ee57e55e4285a5e786379ffbe96604c","modified":1575955124244},{"_id":"source/images/git_201912101326.png","hash":"0b1ade71a0f9e024e999f350a22c0ad23d88dd49","modified":1575955571816},{"_id":"public/categories/git/index.html","hash":"65084fb493c31f948d4652cddaad287c01945841","modified":1577371361875},{"_id":"public/tags/git/index.html","hash":"d60024609509af66765918c06301fe205262d1e9","modified":1577371361875},{"_id":"public/images/201912101319.png","hash":"0742138fd3003f4cdda1c718db37c0d48d883b89","modified":1575956032662},{"_id":"public/images/git_201912101316.png","hash":"ef0c2b4a33c998c0712069f99f48ffeebe170ec2","modified":1575956032662},{"_id":"public/images/git_201912101318.png","hash":"c144b63e8ee57e55e4285a5e786379ffbe96604c","modified":1575956032662},{"_id":"public/images/git_201912101326.png","hash":"0b1ade71a0f9e024e999f350a22c0ad23d88dd49","modified":1575956032662},{"_id":"themes/landscape/layout/_partial/.footer.ejs.swp","hash":"206bc4095b8f691bd5ef536c98312b373e149184","modified":1575957898336},{"_id":"themes/landscape/source/css/images/banner_backup.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1574850050878},{"_id":"themes/landscape/source/css/1","hash":"0a330fbc093c9e66838dc0c400430a1823d1ad0a","modified":1576011338379},{"_id":"source/_posts/some-common-and-free-apis-for-developing.md","hash":"5a6a4a7b32e6abee2d17951bfed6077e9d802c46","modified":1576683740840},{"_id":"public/categories/工具/index.html","hash":"eda63807b5e01a3aefed349e8f38eca913ae1967","modified":1577371361875},{"_id":"public/tags/API/index.html","hash":"f64a459ca2421406d088678c01f891f5e0b539c8","modified":1577371361875},{"_id":"public/2019/12/11/some-common-and-free-apis-for-developing.html","hash":"fff7da7b3f4e29ad91a458f47ebb50af1e7de24d","modified":1577371361875},{"_id":"public/css/images/banner_backup.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1576065107033},{"_id":"themes/landscape/layout/_partial/baidu_tongji.ejs","hash":"e948883533875ce28fef8b0e2db7f44b85b3069e","modified":1576134128000},{"_id":"themes/landscape/source/js/clipboard-use.js","hash":"64bbc6c15ad3aecb743c21b8ba665673aa26ac3b","modified":1576131626378},{"_id":"themes/landscape/source/js/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1576131836000},{"_id":"public/js/clipboard-use.js","hash":"64bbc6c15ad3aecb743c21b8ba665673aa26ac3b","modified":1576132812081},{"_id":"public/js/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1576132812081},{"_id":"themes/landscape/layout/_partial/.head.ejs.swp","hash":"402d7e1fdcb471b462e09a39dd056dc000198ee1","modified":1576133259958},{"_id":"source/_posts/图解SQL的各种join用法.md","hash":"be2fc75205195fb22ff7a2c0108451f8581e9eed","modified":1576136005114},{"_id":"source/images/201912121526.png","hash":"9c09d9dde3c46125f12b08f3633ecccf981a2455","modified":1576135574438},{"_id":"source/images/201912121529.png","hash":"65baa878e3d51adeb2260e016ba6dae93ed3a239","modified":1576135733438},{"_id":"source/images/sql_201912121523.png","hash":"08ebb5dee28bc23135eaec35f91bb44a826022f4","modified":1576135433846},{"_id":"source/images/sql_201912121528.png","hash":"1b3f23dfcfa3cefc0c116074d2bfd64c5199d03f","modified":1576135701250},{"_id":"source/images/sql_201912121531.png","hash":"c7e3ff790f9227800d47177511ea301bfe3da933","modified":1576135901894},{"_id":"source/images/sql_201912121532.png","hash":"65baa878e3d51adeb2260e016ba6dae93ed3a239","modified":1576135954418},{"_id":"source/images/sql_201912121533.png","hash":"8bf8c0dd61197f4d856419f731ba255179b2a572","modified":1576136028730},{"_id":"source/images/sql_201912121534.png","hash":"eb294e6bcf67de3c367e5fea2128f9f8e046d1fb","modified":1576136086570},{"_id":"source/images/sql_201912121542.png","hash":"8bf8c0dd61197f4d856419f731ba255179b2a572","modified":1576136598786},{"_id":"source/images/sql_201912121544.png","hash":"eb294e6bcf67de3c367e5fea2128f9f8e046d1fb","modified":1576136653746},{"_id":"source/images/sql_201912121520.png","hash":"fb8b461c5f14f327364489fd929c2cd6795b322b","modified":1576135216562},{"_id":"public/images/sql_201912121531.png","hash":"c7e3ff790f9227800d47177511ea301bfe3da933","modified":1576136719540},{"_id":"public/images/sql_201912121532.png","hash":"65baa878e3d51adeb2260e016ba6dae93ed3a239","modified":1576136719540},{"_id":"public/images/sql_201912121533.png","hash":"8bf8c0dd61197f4d856419f731ba255179b2a572","modified":1576137756969},{"_id":"public/images/sql_201912121534.png","hash":"eb294e6bcf67de3c367e5fea2128f9f8e046d1fb","modified":1576137756969},{"_id":"public/images/sql_201912121542.png","hash":"8bf8c0dd61197f4d856419f731ba255179b2a572","modified":1576137756969},{"_id":"public/images/sql_201912121544.png","hash":"eb294e6bcf67de3c367e5fea2128f9f8e046d1fb","modified":1576137756969},{"_id":"public/images/201912121526.png","hash":"9c09d9dde3c46125f12b08f3633ecccf981a2455","modified":1576137756969},{"_id":"public/images/201912121529.png","hash":"65baa878e3d51adeb2260e016ba6dae93ed3a239","modified":1576137756969},{"_id":"public/images/sql_201912121523.png","hash":"08ebb5dee28bc23135eaec35f91bb44a826022f4","modified":1576136719540},{"_id":"public/images/sql_201912121528.png","hash":"1b3f23dfcfa3cefc0c116074d2bfd64c5199d03f","modified":1576136719540},{"_id":"public/images/sql_201912121520.png","hash":"fb8b461c5f14f327364489fd929c2cd6795b322b","modified":1576136719540},{"_id":"source/_posts/diagrams-for-various-join-uses-of-sql.md","hash":"30c78d5847775560d611655912036a055ecea930","modified":1576683784408},{"_id":"source/images/sql_201912121552.png","hash":"8bf8c0dd61197f4d856419f731ba255179b2a572","modified":1576137151394},{"_id":"source/images/sql_201912121553.png","hash":"eb294e6bcf67de3c367e5fea2128f9f8e046d1fb","modified":1576137198546},{"_id":"source/images/sql_201912121558.png","hash":"9c09d9dde3c46125f12b08f3633ecccf981a2455","modified":1576137498486},{"_id":"public/2019/12/11/diagrams-for-various-join-uses-of-sql.html","hash":"036f82fd95feef45920883eb2ae502245b20c6c6","modified":1576137756969},{"_id":"public/categories/SQL/index.html","hash":"5f29276eba660f89fd65a1c74fb09489f67992ca","modified":1576683157101},{"_id":"public/tags/sql/index.html","hash":"febce9eb7fc3d5f86f3a315c234505006abc6270","modified":1577371361875},{"_id":"public/images/sql_201912121552.png","hash":"8bf8c0dd61197f4d856419f731ba255179b2a572","modified":1576137756969},{"_id":"public/images/sql_201912121553.png","hash":"eb294e6bcf67de3c367e5fea2128f9f8e046d1fb","modified":1576137756969},{"_id":"public/images/sql_201912121558.png","hash":"9c09d9dde3c46125f12b08f3633ecccf981a2455","modified":1576137756969},{"_id":"public/2019/11/09/diagrams-for-various-join-uses-of-sql.html","hash":"82c81c751d9c0cd39e5249dd6cbd376f30bbe9e9","modified":1577371361875},{"_id":"themes/landscape/source/js/src/Valine.min.js","hash":"e23b1d09fdc5e879b8d8fb9075d1bf47cadbec03","modified":1576202723000},{"_id":"source/_posts/nginx-build-http-file-system.md","hash":"5a24891e9435c7cbb0cc4e6e0761fa45a67a52f3","modified":1576678204506},{"_id":"public/2019/11/14/nginx-build-http-file-system.html","hash":"0b694faa7747cbcc8315e50862c81ec347b604b6","modified":1577371361875},{"_id":"public/tags/Nginx/index.html","hash":"47aa062a3b91a65c3fe629cec0606694f93ed7d8","modified":1577371361875},{"_id":"source/_posts/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.md","hash":"76e1b80f0397aaf2712130829817ea9b61f82f71","modified":1576677837775},{"_id":"public/2019/12/14/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.html","hash":"d4928b17eb3ccdde7478c828330a38be768fbcaa","modified":1577371361875},{"_id":"source/_posts/resources-collection-top.md","hash":"7de1067896b1035105003dd3da6cdff000c239fe","modified":1576485621772},{"_id":"public/2019/12/14/resources-collection-top.html","hash":"a28362637599e48a96eca9d9b99aacda1cecba5a","modified":1576485881794},{"_id":"source/_discarded/Untitled-1.md","hash":"3497075af5aeccf306a74f4a7e5cee51675ef6ba","modified":1576328433738},{"_id":"source/_discarded/Untitled.md","hash":"bf11c188e9fd8f4702278b89ad32c25009a0936a","modified":1576328451950},{"_id":"public/page/2/index.html","hash":"9fc6920a6bacad5a31501d158809391547a76b2a","modified":1577371526333},{"_id":"source/_drafts/resources-collection-top.md","hash":"7de1067896b1035105003dd3da6cdff000c239fe","modified":1576677499323},{"_id":"source/_posts/tomcat-modifying-memory-configuration-for-optimization.md","hash":"5a359c3238e5369e11b59b958d7eba9f7e1cc942","modified":1576683834028},{"_id":"source/images/tomcat_201912182233.png","hash":"f861f54e035e83b6c6482e13f9f5534bddc2f0ab","modified":1576679605374},{"_id":"source/images/tomcat_201912182226.png","hash":"ed40c532bafe1f229b8e9edd2aa8abefdeb9a20d","modified":1576679209214},{"_id":"public/archives/2017/index.html","hash":"bb63abbbe98a93ff3acd1b3f7441c30d74fff411","modified":1576683157101},{"_id":"public/archives/2017/11/index.html","hash":"5cc5b8374b7db21dcbfd0ed77fd0749f5a8b09dd","modified":1576680845537},{"_id":"public/tags/tomcat/index.html","hash":"888a435ddd743b384d412722c4b31fae714d01ac","modified":1577371361875},{"_id":"public/2017/11/18/tomcat-modifying-memory-configuration-for-optimization.html","hash":"0d7d94e49ae970f19426904e0697a6e3eccdc257","modified":1576680845537},{"_id":"public/images/tomcat_201912182233.png","hash":"f861f54e035e83b6c6482e13f9f5534bddc2f0ab","modified":1576680845537},{"_id":"public/images/tomcat_201912182226.png","hash":"ed40c532bafe1f229b8e9edd2aa8abefdeb9a20d","modified":1576680845537},{"_id":"public/archives/2017/10/index.html","hash":"1a6da64f2fc60b2c8c4040a7025be8f6e4a41d43","modified":1576683157101},{"_id":"public/categories/web服务器/index.html","hash":"6a698f60b593b35787728782624de63efcfccb87","modified":1577371361875},{"_id":"public/2017/10/18/tomcat-modifying-memory-configuration-for-optimization.html","hash":"1dfc277fed2e3d6167b8facbdf940b64d9ba1063","modified":1576683157101},{"_id":"source/images/mysql_201912182306.png","hash":"6bd60508da805dae5d9987deb4f7e269a03e598f","modified":1576681572941},{"_id":"source/images/mysql_201912182311.png","hash":"b5fc0df55f8d7769499dfd2cdc3aa4d7efd17640","modified":1576681912033},{"_id":"source/_posts/mysql-database-optimization-this-article-is-enough.md","hash":"79197d998c28f8be54072572598f775de5101f4c","modified":1576819646199},{"_id":"source/images/mysql_201912182301.png","hash":"51c184604e0d129924c659d95c5ebca1effbe75b","modified":1576681309577},{"_id":"source/images/mysql_201912182321.png","hash":"25694e4356115d0ba04136a5f8f806da1d9b1353","modified":1576682474365},{"_id":"source/images/mysql_201912182322.png","hash":"bce2c2973569248dba5c670aae4d7793866dbe95","modified":1576682514721},{"_id":"public/archives/2018/index.html","hash":"a01c179c0ccc8dfcb0d9c58def367b05a0430d19","modified":1577371361875},{"_id":"public/archives/2018/10/index.html","hash":"3203d3c9a454e0909874e6efc7e0ef20b762545a","modified":1577371361875},{"_id":"public/categories/数据库/index.html","hash":"9770a274a391604b90e3d784b3bd031345ce09be","modified":1577371361875},{"_id":"public/tags/Mysql/index.html","hash":"81fc7e127779a419fdf8bf27476a3ae1fb2003b1","modified":1577371361875},{"_id":"public/2018/10/18/mysql-database-optimization-this-article-is-enough.html","hash":"9d5147fded791016d15cfff43ea8a1ff591c6f3e","modified":1577371361875},{"_id":"public/images/mysql_201912182306.png","hash":"6bd60508da805dae5d9987deb4f7e269a03e598f","modified":1576683157101},{"_id":"public/images/mysql_201912182311.png","hash":"b5fc0df55f8d7769499dfd2cdc3aa4d7efd17640","modified":1576683157101},{"_id":"public/images/mysql_201912182321.png","hash":"25694e4356115d0ba04136a5f8f806da1d9b1353","modified":1576683157101},{"_id":"public/images/mysql_201912182322.png","hash":"bce2c2973569248dba5c670aae4d7793866dbe95","modified":1576683157101},{"_id":"public/images/mysql_201912182301.png","hash":"51c184604e0d129924c659d95c5ebca1effbe75b","modified":1576683157101},{"_id":"public/2018/10/18/tomcat-modifying-memory-configuration-for-optimization.html","hash":"18efde54190c603590362a4b99affcd6a3f765ff","modified":1577371361875},{"_id":"source/_discarded/resources-collection-top.md","hash":"7de1067896b1035105003dd3da6cdff000c239fe","modified":1576894373885},{"_id":"source/_posts/arkdownpad2.5-license-key.md","hash":"f7c4d56b8987d76db312438c5152eadc06bec4d1","modified":1577260599989},{"_id":"public/2016/05/15/arkdownpad2.5-license-key.html","hash":"2347f0a7a5ee7d24b5794e4acd9c6091f41bcb92","modified":1577260614626},{"_id":"public/archives/2016/index.html","hash":"c53f7459cf7a2bef777d7a0ef4b8116a97fc68bf","modified":1577371361875},{"_id":"public/archives/2016/05/index.html","hash":"9221d27f5434b47b4c58c7738877110fc15308cd","modified":1577371361875},{"_id":"public/tags/markdown/index.html","hash":"a5ecc0296d3fae22765c1a651391d01904499017","modified":1577371361875},{"_id":"source/images/markdown_201912251552.png","hash":"2d9623218c0429d6c4fb36fdee3cfa949774cffe","modified":1577259178000},{"_id":"source/images/markdown_201912251554.png","hash":"733ae5375eced8833b6d18391d18a9908cc71567","modified":1577258935000},{"_id":"public/images/markdown_201912251552.png","hash":"2d9623218c0429d6c4fb36fdee3cfa949774cffe","modified":1577260614626},{"_id":"public/images/markdown_201912251554.png","hash":"733ae5375eced8833b6d18391d18a9908cc71567","modified":1577260614626},{"_id":"source/_posts/markdownpad2.5-license-key.md","hash":"fa3fc75cf2b991765411072021c255652b210711","modified":1577273194821},{"_id":"public/2016/05/15/markdownpad2.5-license-key.html","hash":"94afb26b1f1e3ad9d22cad18f90415d469d1834c","modified":1577371361875},{"_id":"source/_posts/java-interview-0001.md","hash":"98a93cfa25e55abdce1ef2e1ef0609b955e3e26f","modified":1577371357705},{"_id":"public/archives/page/2/index.html","hash":"55424d6280f450a0b78884a4983432bbc9eed494","modified":1577371361875},{"_id":"public/archives/2019/01/index.html","hash":"f5c87186b07112c74540b204606b89e23f290f4c","modified":1577371361875},{"_id":"public/categories/搞定Java面试题/index.html","hash":"826adf1ce3306e95f77eb5ee069c137dd2bdcc94","modified":1577371361875},{"_id":"public/page/3/index.html","hash":"83345a1a7e32bcfe69e083fe4f9d0bf3b31a79cf","modified":1577371361875},{"_id":"public/tags/Java/index.html","hash":"ad025e76464ef5db5c892256d59ee29052ba9a6d","modified":1577371361875},{"_id":"public/2019/01/25/java-interview-0001.html","hash":"27bfa48e14c6e9168bb06a6fb055a1455998b743","modified":1577329515489},{"_id":"public/tags/面试题/index.html","hash":"4b0b2643536a1368c7df6b15612645c838e08537","modified":1577371361875},{"_id":"source/_posts/idea-latest-active.md","hash":"c0704d2ae60ad7cdc0aa5d4b51bea05ffa5bb2ee","modified":1577324299186},{"_id":"public/2019/12/25/idea-latest-active.html","hash":"37d8cd58af33f1d29d9eddb46b35aeef7a8a4d7c","modified":1577371361875},{"_id":"public/tags/IDEA/index.html","hash":"557ef9405a92f1880517b56ecea6ec95a006631a","modified":1577371361875},{"_id":"source/_posts/java-interview-0002.md","hash":"12c7cc8fc01ebe081f666743805c69e8ccee45e8","modified":1577371519409},{"_id":"public/2019/01/26/java-interview-0002.html","hash":"1b111ff70e7525494d87fe76f9f106b80ea104c6","modified":1577370547916},{"_id":"public/2019/01/26/java-interview-0001.html","hash":"444df78964c2ce8c6d0883c6fdfc732380bca463","modified":1577370439975},{"_id":"source/_posts/java-interview-0003.md","hash":"b65e287efd6db9aca0e038c4ab177f2bdc171826","modified":1577370749581},{"_id":"public/2019/12/26/java-interview-0003.html","hash":"81925bd72d056df78e6d3b16ea780a2f3ececb23","modified":1577370487465},{"_id":"public/2019/01/26/java-interview-0003.html","hash":"edebc87034636a372dcc6535665a381d5676e5dc","modified":1577371361875},{"_id":"public/2019/01/25/java-interview-0002.html","hash":"1f3cfb0b8a948196db1fc41f9abee80d24c2a49c","modified":1577371526333},{"_id":"source/_posts/http:/www.ergzcode.com/2019/01/25/java-interview-0001.md","hash":"acd84f39d175e419f3c67e5d5ef45592edc371bc","modified":1577371059401},{"_id":"public/archives/2019/page/2/index.html","hash":"b76b8acf96eac5405c3b6b28dd5ea21b594792b2","modified":1577371361875},{"_id":"public/2019/12/26/http:/www.ergzcode.com/2019/01/25/java-interview-0001.html","hash":"87f216f3d40c6aab788730dbd0c28678026ddced","modified":1577370993725},{"_id":"public/2019/01/25/http:/www.ergzcode.com/2019/01/25/java-interview-0001.html","hash":"4d60daaf7bb5847b194787827a1a9f35c650606a","modified":1577371067437},{"_id":"source/_discarded/http:/www.ergzcode.com/2019/01/25/java-interview-0001.md","hash":"2d53548f9c6890ac469cca57e198dbf76c20e97a","modified":1577371142333},{"_id":"public/2019/01/24/java-interview-0001.html","hash":"3186f12576b4055d5603401242f7ceca89361b02","modified":1577371361875}],"Category":[{"name":"shell","_id":"ck3z8h59f00012hd25tvveij3"},{"name":"linux","_id":"ck3zcrkwh0003p0d26n7o9ua8"},{"name":"git","_id":"ck3zfj5ts0000p7d2f8nvcarp"},{"name":"工具","_id":"ck418h06s0001hnd2ee5egxj1"},{"name":"SQL","_id":"ck42fq5m80001m9d2hpgzd3e1"},{"name":"web服务器","_id":"ck4bf5na40000m3d2bnk52pjt"},{"name":"数据库","_id":"ck4bgfyk2000104d2d7814jcj"},{"name":"搞定Java面试题","_id":"ck4l7gzwi0001qod2cx438i62"}],"Data":[],"Page":[{"title":"本站声明","date":"2019-12-25T07:44:11.000Z","_content":"**本站仅提供了一个技术交流的平台，没有任何商业盈利的行为。除了原创文章外，从网络上转载的文章或搜集的一些资源在文末都有出处说明，若您认为本站资源侵犯了您的版权，请联系站长删除。**\n\n邮箱：**itoajm@163.com**\n扣扣：**921936477**(备注说明来意)\n微信：**wxw0220**(备注说明来意)","source":"about/me.md","raw":"title: 本站声明\ndate: 2019-12-25 15:44:11\n---\n**本站仅提供了一个技术交流的平台，没有任何商业盈利的行为。除了原创文章外，从网络上转载的文章或搜集的一些资源在文末都有出处说明，若您认为本站资源侵犯了您的版权，请联系站长删除。**\n\n邮箱：**itoajm@163.com**\n扣扣：**921936477**(备注说明来意)\n微信：**wxw0220**(备注说明来意)","updated":"2019-12-25T07:44:29.658Z","path":"about/me.html","_id":"ck3wh0tfa00016kd28qk3bhne","comments":1,"layout":"page","content":"<p><strong>本站仅提供了一个技术交流的平台，没有任何商业盈利的行为。除了原创文章外，从网络上转载的文章或搜集的一些资源在文末都有出处说明，若您认为本站资源侵犯了您的版权，请联系站长删除。</strong></p>\n<p>邮箱：<strong><a href=\"mailto:itoajm@163.com\" target=\"_blank\" rel=\"noopener\">itoajm@163.com</a></strong><br>扣扣：<strong>921936477</strong>(备注说明来意)<br>微信：<strong>wxw0220</strong>(备注说明来意)</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>本站仅提供了一个技术交流的平台，没有任何商业盈利的行为。除了原创文章外，从网络上转载的文章或搜集的一些资源在文末都有出处说明，若您认为本站资源侵犯了您的版权，请联系站长删除。</strong></p>\n<p>邮箱：<strong><a href=\"mailto:itoajm@163.com\" target=\"_blank\" rel=\"noopener\">itoajm@163.com</a></strong><br>扣扣：<strong>921936477</strong>(备注说明来意)<br>微信：<strong>wxw0220</strong>(备注说明来意)</p>\n"}],"Post":[{"title":"PM2守护hexo的进程","s":"Test Hexo Writing Title","author":"ergz","date":"2019-12-08T00:01:00.000Z","_content":"在服务器上安装好了hexo，执行hexo sever来启动它的服务，会发现过了一段时间hexo的进程总是莫名其妙的挂掉，然后导致网站无法访问。从网上搜索了一些解决方案，发现能使用PM2来接管hexo的后台进程，从而让hexo进程一直常驻后台。\n\n操作步骤如下：\n##### 1.首先安装pm2\n``` bash\nnpm install -g pm2\n```\n<!-- more -->\n##### 2.写一个shell hexo_daemon.js\n``` bash\n//run\nconst { exec } = require('child_process')\nexec('hexo server -p 80 & ',(error, stdout, stderr) => {\n        if(error){\n                console.log('exec error: ${error}')\n                return\n        }\n        console.log('stdout: ${stdout}');\n        console.log('stderr: ${stderr}');\n})\n\n```\n##### 3.在根目录下执行shell\n\n``` bash\npm2 start hexo_daemon.js\n```\n**本文链接：[PM2守护hexo的进程](http://www.ergzcode.com/2019/12/08/pm2-watch-hexo-process.html)\n欢迎转载，请注明出处！\n参考:[PM2使用](https://www.jianshu.com/p/4a3d4d144ab2)**","source":"_posts/pm2-watch-hexo-process.md","raw":"title: PM2守护hexo的进程\ns: Test Hexo Writing Title\ntags:\n  - pm2\n  - hexo\ncategories:\n  - shell\nauthor: ergz\ndate: 2019-12-08 08:01:00\n---\n在服务器上安装好了hexo，执行hexo sever来启动它的服务，会发现过了一段时间hexo的进程总是莫名其妙的挂掉，然后导致网站无法访问。从网上搜索了一些解决方案，发现能使用PM2来接管hexo的后台进程，从而让hexo进程一直常驻后台。\n\n操作步骤如下：\n##### 1.首先安装pm2\n``` bash\nnpm install -g pm2\n```\n<!-- more -->\n##### 2.写一个shell hexo_daemon.js\n``` bash\n//run\nconst { exec } = require('child_process')\nexec('hexo server -p 80 & ',(error, stdout, stderr) => {\n        if(error){\n                console.log('exec error: ${error}')\n                return\n        }\n        console.log('stdout: ${stdout}');\n        console.log('stderr: ${stderr}');\n})\n\n```\n##### 3.在根目录下执行shell\n\n``` bash\npm2 start hexo_daemon.js\n```\n**本文链接：[PM2守护hexo的进程](http://www.ergzcode.com/2019/12/08/pm2-watch-hexo-process.html)\n欢迎转载，请注明出处！\n参考:[PM2使用](https://www.jianshu.com/p/4a3d4d144ab2)**","slug":"pm2-watch-hexo-process","published":1,"updated":"2019-12-26T14:44:49.661Z","_id":"ck3z8h59600002hd2f2uuhb5l","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在服务器上安装好了hexo，执行hexo sever来启动它的服务，会发现过了一段时间hexo的进程总是莫名其妙的挂掉，然后导致网站无法访问。从网上搜索了一些解决方案，发现能使用PM2来接管hexo的后台进程，从而让hexo进程一直常驻后台。</p>\n<p>操作步骤如下：</p>\n<h5 id=\"1-首先安装pm2\"><a href=\"#1-首先安装pm2\" class=\"headerlink\" title=\"1.首先安装pm2\"></a>1.首先安装pm2</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g pm2</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"2-写一个shell-hexo-daemon-js\"><a href=\"#2-写一个shell-hexo-daemon-js\" class=\"headerlink\" title=\"2.写一个shell hexo_daemon.js\"></a>2.写一个shell hexo_daemon.js</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//run</span><br><span class=\"line\">const &#123; <span class=\"built_in\">exec</span> &#125; = require(<span class=\"string\">'child_process'</span>)</span><br><span class=\"line\"><span class=\"built_in\">exec</span>(<span class=\"string\">'hexo server -p 80 &amp; '</span>,(error, stdout, stderr) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(error)&#123;</span><br><span class=\"line\">                console.log(<span class=\"string\">'exec error: $&#123;error&#125;'</span>)</span><br><span class=\"line\">                <span class=\"built_in\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(<span class=\"string\">'stdout: $&#123;stdout&#125;'</span>);</span><br><span class=\"line\">        console.log(<span class=\"string\">'stderr: $&#123;stderr&#125;'</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-在根目录下执行shell\"><a href=\"#3-在根目录下执行shell\" class=\"headerlink\" title=\"3.在根目录下执行shell\"></a>3.在根目录下执行shell</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start hexo_daemon.js</span><br></pre></td></tr></table></figure>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/08/pm2-watch-hexo-process.html\">PM2守护hexo的进程</a><br>欢迎转载，请注明出处！<br>参考:<a href=\"https://www.jianshu.com/p/4a3d4d144ab2\" target=\"_blank\" rel=\"noopener\">PM2使用</a></strong></p>\n","site":{"data":{}},"excerpt":"<p>在服务器上安装好了hexo，执行hexo sever来启动它的服务，会发现过了一段时间hexo的进程总是莫名其妙的挂掉，然后导致网站无法访问。从网上搜索了一些解决方案，发现能使用PM2来接管hexo的后台进程，从而让hexo进程一直常驻后台。</p>\n<p>操作步骤如下：</p>\n<h5 id=\"1-首先安装pm2\"><a href=\"#1-首先安装pm2\" class=\"headerlink\" title=\"1.首先安装pm2\"></a>1.首先安装pm2</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g pm2</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"2-写一个shell-hexo-daemon-js\"><a href=\"#2-写一个shell-hexo-daemon-js\" class=\"headerlink\" title=\"2.写一个shell hexo_daemon.js\"></a>2.写一个shell hexo_daemon.js</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//run</span><br><span class=\"line\">const &#123; <span class=\"built_in\">exec</span> &#125; = require(<span class=\"string\">'child_process'</span>)</span><br><span class=\"line\"><span class=\"built_in\">exec</span>(<span class=\"string\">'hexo server -p 80 &amp; '</span>,(error, stdout, stderr) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(error)&#123;</span><br><span class=\"line\">                console.log(<span class=\"string\">'exec error: $&#123;error&#125;'</span>)</span><br><span class=\"line\">                <span class=\"built_in\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(<span class=\"string\">'stdout: $&#123;stdout&#125;'</span>);</span><br><span class=\"line\">        console.log(<span class=\"string\">'stderr: $&#123;stderr&#125;'</span>);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-在根目录下执行shell\"><a href=\"#3-在根目录下执行shell\" class=\"headerlink\" title=\"3.在根目录下执行shell\"></a>3.在根目录下执行shell</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start hexo_daemon.js</span><br></pre></td></tr></table></figure>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/08/pm2-watch-hexo-process.html\">PM2守护hexo的进程</a><br>欢迎转载，请注明出处！<br>参考:<a href=\"https://www.jianshu.com/p/4a3d4d144ab2\" target=\"_blank\" rel=\"noopener\">PM2使用</a></strong></p>"},{"title":"Git常用命令使用","date":"2019-11-26T11:26:00.000Z","_content":"1.查看工作区的状态：`git status`\n\n2.查看文件具体修改了什么内容：`git diff file`\n\n3.查看提交的历史记录，该命令显示从最近到最远的历史记录：`git log`，如果嫌输出信息太多，可以试试加上`--pretty=oneline`参数：`git log --graph --pretty=oneline --abbrev-commit`，命令如下：\n```bash\ngit log --graph --pretty=oneline --abbrev-commit\neede197ffb267fbda60482da9554ba654ff523e3 init hexo repo\n1f2508638115730cb301f73c51b9971fca5c7f09 Initial commit\n```\n上面输出的一大串数字其实是 commit id(版本号)，这是一个SHA1计算出来的一个非常大的数字，用十六进制表示\n<!-- more -->\n4.`git reset`该命令用来回退到某个版本，在git中用`HEAD`表示当前版本，`HEAD^`表示上个版本，`HEAD^^`表示上上版本......\n以此类推，`HEAD~100`表示往上100个版本\n现在我们用命令回退到上个版本：\n```bash\ngit reset --hard HEAD^\nHEAD is now at 1f2508\n```\n可以根据版本号`commit id`指定回退到某个版本：\n`git reset --hard eede19`\n这里的版本号没必要写全，前几位就可以了，Git会自动去找，这样我们就又回到最新的版本了。Git版本的回退速度非常快，在Git内部有个指向当前版本的指针`HEAD`，所以我们在进行版本回退或回到最新的版本的时候，Git只是帮我们将`HEAD`指针指向某个版本号。\n\n5.`git reflog`记录你的每一条命令，可以查看`commit id`,提交具体的操作和提交输入的信息，命令如下：\n```bash\nroot@instance-my0hsclo:/usr/local/ergzC0de# git reflog \neede197 HEAD@{0}: rebase finished: returning to refs/heads/master\neede197 HEAD@{1}: pull --rebase origin master: init hexo repo\n1f25086 HEAD@{2}: pull --rebase origin master: checkout 1f2508638115730cb301f73c51b9971fca5c7f09\nfe14566 HEAD@{3}: commit (initial): init hexo repo\n```\n\n6.`git checkout -- file`丢弃工作区的修改，文件修改还没有添加到暂存区，命令如下：\n```bash\ngit checkout -- readme.txt\n```\n当文件修改后已经添加到了暂存区又作了修改，现在撤销修改就回到添加到暂存区后的状态。\n\n7.`git reset HEAD file`把添加到暂存区的内容撤销，`HEAD`表示最新的版本\n```bash\nroot@instance-my0hsclo:/usr/local/learngit# git reset HEAD readme.txt\nUnstaged changes after reset:\nM\treadme.txt\n```\n8.查看分支：`git branch `\n\n9.创建分支：`git branch <name>`\n我们创建新分支dev时，Git会新建一个指针叫`dev`，指向当前分支`master`的相同的提交点（HEAD指针指向的是当前分支），再把`HEAD`指向`dev`，之后的操作就在`dev`分支上完成，如图：\n\n![upload successful](/images/git_201912101316.png)\n\n10.切换分支:`git checkout <name>`或者`git switch <name>`\n创建并切换分支`git checkout -b <name>`或者`git switch -c <name>`\n\n11.合并指定分支到当前分支上：`git merge <name>`\n当`dev`分支开发结束后，我们需要把`dev`分支合并到`master`（主分支）上，Git是如何操作的呢？Git直接把`master`指向`dev`的当前提交，就完成了合并，这些操作都是靠指针来完成，文件并没有发生变化，如图：\n\n![upload successful](/images/git_201912101318.png)\n分支合并时，Git默认使用`Fast forward`模式，使用这种模式，删除分支后，会丢掉分支的历史信息，使用`--no-ff`可以禁用`Fast forward`模式 `git merge --no-ff -m \"merge with no-ff\" dev`，这样每次合并会创建一个新的commit，加上`-m`参数，写上commit的描述。\n\n12.删除分支:`git branch -d <name>`\n合并完分支后就可以删除`dev`分支，，删除`dev`分支就是把`dev`指针给删掉，删掉后我们就剩下了一条`master`分支，如图：\n\n![upload successful](/images/201912101319.png)\n\n13.查看分支合并图:`git log --graph`\n\n团队协作的分支开发流程图：\n\n![upload successful](/images/git_201912101326.png)\n\n**本文链接：[Git常用命令使用](http://www.ergzcode.com/2019/11/26/git-common-commands-using.html)\n欢迎转载，请注明出处！\n参考：<https://www.liaoxuefeng.com/wiki/896043488029600>**","source":"_posts/git-common-commands-using.md","raw":"title: Git常用命令使用\ntags:\n  - git\ncategories:\n  - git\ndate: 2019-11-26 19:26:00\n---\n1.查看工作区的状态：`git status`\n\n2.查看文件具体修改了什么内容：`git diff file`\n\n3.查看提交的历史记录，该命令显示从最近到最远的历史记录：`git log`，如果嫌输出信息太多，可以试试加上`--pretty=oneline`参数：`git log --graph --pretty=oneline --abbrev-commit`，命令如下：\n```bash\ngit log --graph --pretty=oneline --abbrev-commit\neede197ffb267fbda60482da9554ba654ff523e3 init hexo repo\n1f2508638115730cb301f73c51b9971fca5c7f09 Initial commit\n```\n上面输出的一大串数字其实是 commit id(版本号)，这是一个SHA1计算出来的一个非常大的数字，用十六进制表示\n<!-- more -->\n4.`git reset`该命令用来回退到某个版本，在git中用`HEAD`表示当前版本，`HEAD^`表示上个版本，`HEAD^^`表示上上版本......\n以此类推，`HEAD~100`表示往上100个版本\n现在我们用命令回退到上个版本：\n```bash\ngit reset --hard HEAD^\nHEAD is now at 1f2508\n```\n可以根据版本号`commit id`指定回退到某个版本：\n`git reset --hard eede19`\n这里的版本号没必要写全，前几位就可以了，Git会自动去找，这样我们就又回到最新的版本了。Git版本的回退速度非常快，在Git内部有个指向当前版本的指针`HEAD`，所以我们在进行版本回退或回到最新的版本的时候，Git只是帮我们将`HEAD`指针指向某个版本号。\n\n5.`git reflog`记录你的每一条命令，可以查看`commit id`,提交具体的操作和提交输入的信息，命令如下：\n```bash\nroot@instance-my0hsclo:/usr/local/ergzC0de# git reflog \neede197 HEAD@{0}: rebase finished: returning to refs/heads/master\neede197 HEAD@{1}: pull --rebase origin master: init hexo repo\n1f25086 HEAD@{2}: pull --rebase origin master: checkout 1f2508638115730cb301f73c51b9971fca5c7f09\nfe14566 HEAD@{3}: commit (initial): init hexo repo\n```\n\n6.`git checkout -- file`丢弃工作区的修改，文件修改还没有添加到暂存区，命令如下：\n```bash\ngit checkout -- readme.txt\n```\n当文件修改后已经添加到了暂存区又作了修改，现在撤销修改就回到添加到暂存区后的状态。\n\n7.`git reset HEAD file`把添加到暂存区的内容撤销，`HEAD`表示最新的版本\n```bash\nroot@instance-my0hsclo:/usr/local/learngit# git reset HEAD readme.txt\nUnstaged changes after reset:\nM\treadme.txt\n```\n8.查看分支：`git branch `\n\n9.创建分支：`git branch <name>`\n我们创建新分支dev时，Git会新建一个指针叫`dev`，指向当前分支`master`的相同的提交点（HEAD指针指向的是当前分支），再把`HEAD`指向`dev`，之后的操作就在`dev`分支上完成，如图：\n\n![upload successful](/images/git_201912101316.png)\n\n10.切换分支:`git checkout <name>`或者`git switch <name>`\n创建并切换分支`git checkout -b <name>`或者`git switch -c <name>`\n\n11.合并指定分支到当前分支上：`git merge <name>`\n当`dev`分支开发结束后，我们需要把`dev`分支合并到`master`（主分支）上，Git是如何操作的呢？Git直接把`master`指向`dev`的当前提交，就完成了合并，这些操作都是靠指针来完成，文件并没有发生变化，如图：\n\n![upload successful](/images/git_201912101318.png)\n分支合并时，Git默认使用`Fast forward`模式，使用这种模式，删除分支后，会丢掉分支的历史信息，使用`--no-ff`可以禁用`Fast forward`模式 `git merge --no-ff -m \"merge with no-ff\" dev`，这样每次合并会创建一个新的commit，加上`-m`参数，写上commit的描述。\n\n12.删除分支:`git branch -d <name>`\n合并完分支后就可以删除`dev`分支，，删除`dev`分支就是把`dev`指针给删掉，删掉后我们就剩下了一条`master`分支，如图：\n\n![upload successful](/images/201912101319.png)\n\n13.查看分支合并图:`git log --graph`\n\n团队协作的分支开发流程图：\n\n![upload successful](/images/git_201912101326.png)\n\n**本文链接：[Git常用命令使用](http://www.ergzcode.com/2019/11/26/git-common-commands-using.html)\n欢迎转载，请注明出处！\n参考：<https://www.liaoxuefeng.com/wiki/896043488029600>**","slug":"git-common-commands-using","published":1,"updated":"2019-12-18T14:08:32.342Z","_id":"ck3zcrkvz0000p0d2dqf0h55r","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.查看工作区的状态：<code>git status</code></p>\n<p>2.查看文件具体修改了什么内容：<code>git diff file</code></p>\n<p>3.查看提交的历史记录，该命令显示从最近到最远的历史记录：<code>git log</code>，如果嫌输出信息太多，可以试试加上<code>--pretty=oneline</code>参数：<code>git log --graph --pretty=oneline --abbrev-commit</code>，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> --graph --pretty=oneline --abbrev-commit</span><br><span class=\"line\">eede197ffb267fbda60482da9554ba654ff523e3 init hexo repo</span><br><span class=\"line\">1f2508638115730cb301f73c51b9971fca5c7f09 Initial commit</span><br></pre></td></tr></table></figure>\n<p>上面输出的一大串数字其实是 commit id(版本号)，这是一个SHA1计算出来的一个非常大的数字，用十六进制表示</p>\n<a id=\"more\"></a>\n<p>4.<code>git reset</code>该命令用来回退到某个版本，在git中用<code>HEAD</code>表示当前版本，<code>HEAD^</code>表示上个版本，<code>HEAD^^</code>表示上上版本……<br>以此类推，<code>HEAD~100</code>表示往上100个版本<br>现在我们用命令回退到上个版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\">HEAD is now at 1f2508</span><br></pre></td></tr></table></figure>\n<p>可以根据版本号<code>commit id</code>指定回退到某个版本：<br><code>git reset --hard eede19</code><br>这里的版本号没必要写全，前几位就可以了，Git会自动去找，这样我们就又回到最新的版本了。Git版本的回退速度非常快，在Git内部有个指向当前版本的指针<code>HEAD</code>，所以我们在进行版本回退或回到最新的版本的时候，Git只是帮我们将<code>HEAD</code>指针指向某个版本号。</p>\n<p>5.<code>git reflog</code>记录你的每一条命令，可以查看<code>commit id</code>,提交具体的操作和提交输入的信息，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@instance-my0hsclo:/usr/<span class=\"built_in\">local</span>/ergzC0de<span class=\"comment\"># git reflog </span></span><br><span class=\"line\">eede197 HEAD@&#123;0&#125;: rebase finished: returning to refs/heads/master</span><br><span class=\"line\">eede197 HEAD@&#123;1&#125;: pull --rebase origin master: init hexo repo</span><br><span class=\"line\">1f25086 HEAD@&#123;2&#125;: pull --rebase origin master: checkout 1f2508638115730cb301f73c51b9971fca5c7f09</span><br><span class=\"line\">fe14566 HEAD@&#123;3&#125;: commit (initial): init hexo repo</span><br></pre></td></tr></table></figure>\n\n<p>6.<code>git checkout -- file</code>丢弃工作区的修改，文件修改还没有添加到暂存区，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- readme.txt</span><br></pre></td></tr></table></figure>\n<p>当文件修改后已经添加到了暂存区又作了修改，现在撤销修改就回到添加到暂存区后的状态。</p>\n<p>7.<code>git reset HEAD file</code>把添加到暂存区的内容撤销，<code>HEAD</code>表示最新的版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@instance-my0hsclo:/usr/<span class=\"built_in\">local</span>/learngit<span class=\"comment\"># git reset HEAD readme.txt</span></span><br><span class=\"line\">Unstaged changes after reset:</span><br><span class=\"line\">M\treadme.txt</span><br></pre></td></tr></table></figure>\n<p>8.查看分支：<code>git branch</code></p>\n<p>9.创建分支：<code>git branch &lt;name&gt;</code><br>我们创建新分支dev时，Git会新建一个指针叫<code>dev</code>，指向当前分支<code>master</code>的相同的提交点（HEAD指针指向的是当前分支），再把<code>HEAD</code>指向<code>dev</code>，之后的操作就在<code>dev</code>分支上完成，如图：</p>\n<p><img src=\"/images/git_201912101316.png\" alt=\"upload successful\"></p>\n<p>10.切换分支:<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code><br>创建并切换分支<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p>\n<p>11.合并指定分支到当前分支上：<code>git merge &lt;name&gt;</code><br>当<code>dev</code>分支开发结束后，我们需要把<code>dev</code>分支合并到<code>master</code>（主分支）上，Git是如何操作的呢？Git直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并，这些操作都是靠指针来完成，文件并没有发生变化，如图：</p>\n<p><img src=\"/images/git_201912101318.png\" alt=\"upload successful\"><br>分支合并时，Git默认使用<code>Fast forward</code>模式，使用这种模式，删除分支后，会丢掉分支的历史信息，使用<code>--no-ff</code>可以禁用<code>Fast forward</code>模式 <code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code>，这样每次合并会创建一个新的commit，加上<code>-m</code>参数，写上commit的描述。</p>\n<p>12.删除分支:<code>git branch -d &lt;name&gt;</code><br>合并完分支后就可以删除<code>dev</code>分支，，删除<code>dev</code>分支就是把<code>dev</code>指针给删掉，删掉后我们就剩下了一条<code>master</code>分支，如图：</p>\n<p><img src=\"/images/201912101319.png\" alt=\"upload successful\"></p>\n<p>13.查看分支合并图:<code>git log --graph</code></p>\n<p>团队协作的分支开发流程图：</p>\n<p><img src=\"/images/git_201912101326.png\" alt=\"upload successful\"></p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/11/26/git-common-commands-using.html\">Git常用命令使用</a><br>欢迎转载，请注明出处！<br>参考：<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/896043488029600</a></strong></p>\n","site":{"data":{}},"excerpt":"<p>1.查看工作区的状态：<code>git status</code></p>\n<p>2.查看文件具体修改了什么内容：<code>git diff file</code></p>\n<p>3.查看提交的历史记录，该命令显示从最近到最远的历史记录：<code>git log</code>，如果嫌输出信息太多，可以试试加上<code>--pretty=oneline</code>参数：<code>git log --graph --pretty=oneline --abbrev-commit</code>，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span> --graph --pretty=oneline --abbrev-commit</span><br><span class=\"line\">eede197ffb267fbda60482da9554ba654ff523e3 init hexo repo</span><br><span class=\"line\">1f2508638115730cb301f73c51b9971fca5c7f09 Initial commit</span><br></pre></td></tr></table></figure>\n<p>上面输出的一大串数字其实是 commit id(版本号)，这是一个SHA1计算出来的一个非常大的数字，用十六进制表示</p>","more":"<p>4.<code>git reset</code>该命令用来回退到某个版本，在git中用<code>HEAD</code>表示当前版本，<code>HEAD^</code>表示上个版本，<code>HEAD^^</code>表示上上版本……<br>以此类推，<code>HEAD~100</code>表示往上100个版本<br>现在我们用命令回退到上个版本：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD^</span><br><span class=\"line\">HEAD is now at 1f2508</span><br></pre></td></tr></table></figure>\n<p>可以根据版本号<code>commit id</code>指定回退到某个版本：<br><code>git reset --hard eede19</code><br>这里的版本号没必要写全，前几位就可以了，Git会自动去找，这样我们就又回到最新的版本了。Git版本的回退速度非常快，在Git内部有个指向当前版本的指针<code>HEAD</code>，所以我们在进行版本回退或回到最新的版本的时候，Git只是帮我们将<code>HEAD</code>指针指向某个版本号。</p>\n<p>5.<code>git reflog</code>记录你的每一条命令，可以查看<code>commit id</code>,提交具体的操作和提交输入的信息，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@instance-my0hsclo:/usr/<span class=\"built_in\">local</span>/ergzC0de<span class=\"comment\"># git reflog </span></span><br><span class=\"line\">eede197 HEAD@&#123;0&#125;: rebase finished: returning to refs/heads/master</span><br><span class=\"line\">eede197 HEAD@&#123;1&#125;: pull --rebase origin master: init hexo repo</span><br><span class=\"line\">1f25086 HEAD@&#123;2&#125;: pull --rebase origin master: checkout 1f2508638115730cb301f73c51b9971fca5c7f09</span><br><span class=\"line\">fe14566 HEAD@&#123;3&#125;: commit (initial): init hexo repo</span><br></pre></td></tr></table></figure>\n\n<p>6.<code>git checkout -- file</code>丢弃工作区的修改，文件修改还没有添加到暂存区，命令如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- readme.txt</span><br></pre></td></tr></table></figure>\n<p>当文件修改后已经添加到了暂存区又作了修改，现在撤销修改就回到添加到暂存区后的状态。</p>\n<p>7.<code>git reset HEAD file</code>把添加到暂存区的内容撤销，<code>HEAD</code>表示最新的版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@instance-my0hsclo:/usr/<span class=\"built_in\">local</span>/learngit<span class=\"comment\"># git reset HEAD readme.txt</span></span><br><span class=\"line\">Unstaged changes after reset:</span><br><span class=\"line\">M\treadme.txt</span><br></pre></td></tr></table></figure>\n<p>8.查看分支：<code>git branch</code></p>\n<p>9.创建分支：<code>git branch &lt;name&gt;</code><br>我们创建新分支dev时，Git会新建一个指针叫<code>dev</code>，指向当前分支<code>master</code>的相同的提交点（HEAD指针指向的是当前分支），再把<code>HEAD</code>指向<code>dev</code>，之后的操作就在<code>dev</code>分支上完成，如图：</p>\n<p><img src=\"/images/git_201912101316.png\" alt=\"upload successful\"></p>\n<p>10.切换分支:<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code><br>创建并切换分支<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></p>\n<p>11.合并指定分支到当前分支上：<code>git merge &lt;name&gt;</code><br>当<code>dev</code>分支开发结束后，我们需要把<code>dev</code>分支合并到<code>master</code>（主分支）上，Git是如何操作的呢？Git直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并，这些操作都是靠指针来完成，文件并没有发生变化，如图：</p>\n<p><img src=\"/images/git_201912101318.png\" alt=\"upload successful\"><br>分支合并时，Git默认使用<code>Fast forward</code>模式，使用这种模式，删除分支后，会丢掉分支的历史信息，使用<code>--no-ff</code>可以禁用<code>Fast forward</code>模式 <code>git merge --no-ff -m &quot;merge with no-ff&quot; dev</code>，这样每次合并会创建一个新的commit，加上<code>-m</code>参数，写上commit的描述。</p>\n<p>12.删除分支:<code>git branch -d &lt;name&gt;</code><br>合并完分支后就可以删除<code>dev</code>分支，，删除<code>dev</code>分支就是把<code>dev</code>指针给删掉，删掉后我们就剩下了一条<code>master</code>分支，如图：</p>\n<p><img src=\"/images/201912101319.png\" alt=\"upload successful\"></p>\n<p>13.查看分支合并图:<code>git log --graph</code></p>\n<p>团队协作的分支开发流程图：</p>\n<p><img src=\"/images/git_201912101326.png\" alt=\"upload successful\"></p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/11/26/git-common-commands-using.html\">Git常用命令使用</a><br>欢迎转载，请注明出处！<br>参考：<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\" target=\"_blank\" rel=\"noopener\">https://www.liaoxuefeng.com/wiki/896043488029600</a></strong></p>"},{"title":"PM2介绍","author":"ergz","date":"2019-12-10T03:22:00.000Z","_content":"pm2 是一个带有负载均衡功能的Node应用的进程管理器。当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。\n\n主要特性：\n1.内建负载均衡（使用Node cluster 集群模块）\n2.后台运行\n3.0秒停机重载，我理解大概意思是维护升级的时候不需要停机\n4.具有Ubuntu和CentOS的启动脚本\n5.停止不稳定的进程（避免无限循环）\n6.控制台检测\n7.提供 HTTP API\n8.远程控制和实时的接口API(Nodejs模块,允许和PM2进程管理器交互 )\n<!-- more -->\n##### 安装\n\n``` bash\nnpm install -g pm2 #命令行安装pm2\n```\n##### 用法\n\n``` bash\npm2 start app.js -i 4 #后台运行pm2，启动4个app.js\npm2 start app.js --name my-api  #命名进程\npm2 list  #显示所有进程状态\npm2 monit  #监视所有进程\npm2 logs  #显示所有进程日志\npm2 stop all  #停止所有进程\npm2 restart all  #重启所有进程\npm2 reload all  #0秒停机重载进程 (用于 NETWORKED 进程)\npm2 stop 0  #停止指定的进程\npm2 restart 0  #重启指定的进程\npm2 startup  #产生 init 脚本 保持进程活着\npm2 web  #运行健壮的 computer API endpoint\npm2 delete 0  #杀死指定的进程\npm2 delete all  #杀死全部进程\n\n运行进程的不同方式：\npm2 start app.js -i max  #根据有效CPU数目启动最大进程数目\npm2 start app.js -i 3  #启动3个进程\npm2 start app.js -x  #用fork模式启动 app.js 而不是使用 cluster\npm2 start app.js -x -- -a 23  #用fork模式启动 app.js 并且传递参数 (-a 23)\npm2 start app.js --name serverone #启动一个进程并把它命名为 serverone\npm2 stop serverone  #停止serverone进程\npm2 start app.json  #启动进程, 在app.json里设置选项\npm2 start app.js -i max -- -a 23  #在--之后给app.js传递参数\npm2 start app.js -i max -e err.log -o out.log  #启动 并生成一个配置文件\n你也可以执行用其他语言编写的app ( fork 模式):\npm2 start my-bash-script.sh -x --interpreter bash\npm2 start my-python-script.py -x --interpreter python\npm2 list #列出由pm2管理的所有进程信息，还会显示一个进程会被启动多少次\npm2 monit #监视每个node进程的CPU和内存的使用情况。\n```\n\n**本文链接：[PM2介绍](http://www.ergzcode.com/2019/12/10/pm2-common-commands-introduction.html)\n欢迎转载，请注明出处！**","source":"_posts/pm2-common-commands-introduction.md","raw":"title: PM2介绍\ntags:\n  - pm2\ncategories:\n  - linux\nauthor: ergz\ndate: 2019-12-10 11:22:00\n---\npm2 是一个带有负载均衡功能的Node应用的进程管理器。当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。\n\n主要特性：\n1.内建负载均衡（使用Node cluster 集群模块）\n2.后台运行\n3.0秒停机重载，我理解大概意思是维护升级的时候不需要停机\n4.具有Ubuntu和CentOS的启动脚本\n5.停止不稳定的进程（避免无限循环）\n6.控制台检测\n7.提供 HTTP API\n8.远程控制和实时的接口API(Nodejs模块,允许和PM2进程管理器交互 )\n<!-- more -->\n##### 安装\n\n``` bash\nnpm install -g pm2 #命令行安装pm2\n```\n##### 用法\n\n``` bash\npm2 start app.js -i 4 #后台运行pm2，启动4个app.js\npm2 start app.js --name my-api  #命名进程\npm2 list  #显示所有进程状态\npm2 monit  #监视所有进程\npm2 logs  #显示所有进程日志\npm2 stop all  #停止所有进程\npm2 restart all  #重启所有进程\npm2 reload all  #0秒停机重载进程 (用于 NETWORKED 进程)\npm2 stop 0  #停止指定的进程\npm2 restart 0  #重启指定的进程\npm2 startup  #产生 init 脚本 保持进程活着\npm2 web  #运行健壮的 computer API endpoint\npm2 delete 0  #杀死指定的进程\npm2 delete all  #杀死全部进程\n\n运行进程的不同方式：\npm2 start app.js -i max  #根据有效CPU数目启动最大进程数目\npm2 start app.js -i 3  #启动3个进程\npm2 start app.js -x  #用fork模式启动 app.js 而不是使用 cluster\npm2 start app.js -x -- -a 23  #用fork模式启动 app.js 并且传递参数 (-a 23)\npm2 start app.js --name serverone #启动一个进程并把它命名为 serverone\npm2 stop serverone  #停止serverone进程\npm2 start app.json  #启动进程, 在app.json里设置选项\npm2 start app.js -i max -- -a 23  #在--之后给app.js传递参数\npm2 start app.js -i max -e err.log -o out.log  #启动 并生成一个配置文件\n你也可以执行用其他语言编写的app ( fork 模式):\npm2 start my-bash-script.sh -x --interpreter bash\npm2 start my-python-script.py -x --interpreter python\npm2 list #列出由pm2管理的所有进程信息，还会显示一个进程会被启动多少次\npm2 monit #监视每个node进程的CPU和内存的使用情况。\n```\n\n**本文链接：[PM2介绍](http://www.ergzcode.com/2019/12/10/pm2-common-commands-introduction.html)\n欢迎转载，请注明出处！**","slug":"pm2-common-commands-introduction","published":1,"updated":"2019-12-26T14:44:30.513Z","_id":"ck3zcrkwb0001p0d2c0tv2hc1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>pm2 是一个带有负载均衡功能的Node应用的进程管理器。当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。</p>\n<p>主要特性：<br>1.内建负载均衡（使用Node cluster 集群模块）<br>2.后台运行<br>3.0秒停机重载，我理解大概意思是维护升级的时候不需要停机<br>4.具有Ubuntu和CentOS的启动脚本<br>5.停止不稳定的进程（避免无限循环）<br>6.控制台检测<br>7.提供 HTTP API<br>8.远程控制和实时的接口API(Nodejs模块,允许和PM2进程管理器交互 )</p>\n<a id=\"more\"></a>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g pm2 <span class=\"comment\">#命令行安装pm2</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start app.js -i 4 <span class=\"comment\">#后台运行pm2，启动4个app.js</span></span><br><span class=\"line\">pm2 start app.js --name my-api  <span class=\"comment\">#命名进程</span></span><br><span class=\"line\">pm2 list  <span class=\"comment\">#显示所有进程状态</span></span><br><span class=\"line\">pm2 monit  <span class=\"comment\">#监视所有进程</span></span><br><span class=\"line\">pm2 logs  <span class=\"comment\">#显示所有进程日志</span></span><br><span class=\"line\">pm2 stop all  <span class=\"comment\">#停止所有进程</span></span><br><span class=\"line\">pm2 restart all  <span class=\"comment\">#重启所有进程</span></span><br><span class=\"line\">pm2 reload all  <span class=\"comment\">#0秒停机重载进程 (用于 NETWORKED 进程)</span></span><br><span class=\"line\">pm2 stop 0  <span class=\"comment\">#停止指定的进程</span></span><br><span class=\"line\">pm2 restart 0  <span class=\"comment\">#重启指定的进程</span></span><br><span class=\"line\">pm2 startup  <span class=\"comment\">#产生 init 脚本 保持进程活着</span></span><br><span class=\"line\">pm2 web  <span class=\"comment\">#运行健壮的 computer API endpoint</span></span><br><span class=\"line\">pm2 delete 0  <span class=\"comment\">#杀死指定的进程</span></span><br><span class=\"line\">pm2 delete all  <span class=\"comment\">#杀死全部进程</span></span><br><span class=\"line\"></span><br><span class=\"line\">运行进程的不同方式：</span><br><span class=\"line\">pm2 start app.js -i max  <span class=\"comment\">#根据有效CPU数目启动最大进程数目</span></span><br><span class=\"line\">pm2 start app.js -i 3  <span class=\"comment\">#启动3个进程</span></span><br><span class=\"line\">pm2 start app.js -x  <span class=\"comment\">#用fork模式启动 app.js 而不是使用 cluster</span></span><br><span class=\"line\">pm2 start app.js -x -- -a 23  <span class=\"comment\">#用fork模式启动 app.js 并且传递参数 (-a 23)</span></span><br><span class=\"line\">pm2 start app.js --name serverone <span class=\"comment\">#启动一个进程并把它命名为 serverone</span></span><br><span class=\"line\">pm2 stop serverone  <span class=\"comment\">#停止serverone进程</span></span><br><span class=\"line\">pm2 start app.json  <span class=\"comment\">#启动进程, 在app.json里设置选项</span></span><br><span class=\"line\">pm2 start app.js -i max -- -a 23  <span class=\"comment\">#在--之后给app.js传递参数</span></span><br><span class=\"line\">pm2 start app.js -i max -e err.log -o out.log  <span class=\"comment\">#启动 并生成一个配置文件</span></span><br><span class=\"line\">你也可以执行用其他语言编写的app ( fork 模式):</span><br><span class=\"line\">pm2 start my-bash-script.sh -x --interpreter bash</span><br><span class=\"line\">pm2 start my-python-script.py -x --interpreter python</span><br><span class=\"line\">pm2 list <span class=\"comment\">#列出由pm2管理的所有进程信息，还会显示一个进程会被启动多少次</span></span><br><span class=\"line\">pm2 monit <span class=\"comment\">#监视每个node进程的CPU和内存的使用情况。</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/10/pm2-common-commands-introduction.html\">PM2介绍</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<p>pm2 是一个带有负载均衡功能的Node应用的进程管理器。当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。</p>\n<p>主要特性：<br>1.内建负载均衡（使用Node cluster 集群模块）<br>2.后台运行<br>3.0秒停机重载，我理解大概意思是维护升级的时候不需要停机<br>4.具有Ubuntu和CentOS的启动脚本<br>5.停止不稳定的进程（避免无限循环）<br>6.控制台检测<br>7.提供 HTTP API<br>8.远程控制和实时的接口API(Nodejs模块,允许和PM2进程管理器交互 )</p>","more":"<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g pm2 <span class=\"comment\">#命令行安装pm2</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start app.js -i 4 <span class=\"comment\">#后台运行pm2，启动4个app.js</span></span><br><span class=\"line\">pm2 start app.js --name my-api  <span class=\"comment\">#命名进程</span></span><br><span class=\"line\">pm2 list  <span class=\"comment\">#显示所有进程状态</span></span><br><span class=\"line\">pm2 monit  <span class=\"comment\">#监视所有进程</span></span><br><span class=\"line\">pm2 logs  <span class=\"comment\">#显示所有进程日志</span></span><br><span class=\"line\">pm2 stop all  <span class=\"comment\">#停止所有进程</span></span><br><span class=\"line\">pm2 restart all  <span class=\"comment\">#重启所有进程</span></span><br><span class=\"line\">pm2 reload all  <span class=\"comment\">#0秒停机重载进程 (用于 NETWORKED 进程)</span></span><br><span class=\"line\">pm2 stop 0  <span class=\"comment\">#停止指定的进程</span></span><br><span class=\"line\">pm2 restart 0  <span class=\"comment\">#重启指定的进程</span></span><br><span class=\"line\">pm2 startup  <span class=\"comment\">#产生 init 脚本 保持进程活着</span></span><br><span class=\"line\">pm2 web  <span class=\"comment\">#运行健壮的 computer API endpoint</span></span><br><span class=\"line\">pm2 delete 0  <span class=\"comment\">#杀死指定的进程</span></span><br><span class=\"line\">pm2 delete all  <span class=\"comment\">#杀死全部进程</span></span><br><span class=\"line\"></span><br><span class=\"line\">运行进程的不同方式：</span><br><span class=\"line\">pm2 start app.js -i max  <span class=\"comment\">#根据有效CPU数目启动最大进程数目</span></span><br><span class=\"line\">pm2 start app.js -i 3  <span class=\"comment\">#启动3个进程</span></span><br><span class=\"line\">pm2 start app.js -x  <span class=\"comment\">#用fork模式启动 app.js 而不是使用 cluster</span></span><br><span class=\"line\">pm2 start app.js -x -- -a 23  <span class=\"comment\">#用fork模式启动 app.js 并且传递参数 (-a 23)</span></span><br><span class=\"line\">pm2 start app.js --name serverone <span class=\"comment\">#启动一个进程并把它命名为 serverone</span></span><br><span class=\"line\">pm2 stop serverone  <span class=\"comment\">#停止serverone进程</span></span><br><span class=\"line\">pm2 start app.json  <span class=\"comment\">#启动进程, 在app.json里设置选项</span></span><br><span class=\"line\">pm2 start app.js -i max -- -a 23  <span class=\"comment\">#在--之后给app.js传递参数</span></span><br><span class=\"line\">pm2 start app.js -i max -e err.log -o out.log  <span class=\"comment\">#启动 并生成一个配置文件</span></span><br><span class=\"line\">你也可以执行用其他语言编写的app ( fork 模式):</span><br><span class=\"line\">pm2 start my-bash-script.sh -x --interpreter bash</span><br><span class=\"line\">pm2 start my-python-script.py -x --interpreter python</span><br><span class=\"line\">pm2 list <span class=\"comment\">#列出由pm2管理的所有进程信息，还会显示一个进程会被启动多少次</span></span><br><span class=\"line\">pm2 monit <span class=\"comment\">#监视每个node进程的CPU和内存的使用情况。</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/10/pm2-common-commands-introduction.html\">PM2介绍</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"开发中常用的一些免费API","author":"ergz","date":"2019-12-11T10:20:00.000Z","_content":"**为了方便广大的开发者，特此统计了网上诸多的免费API，为您收集免费的接口服务，做一个api的搬运工，以后会每月定时更新新的接口。有些接口来自第三方，在第三方注册就可以成为他们的会员，免费使用他们的部分接口。**\n\n<b>百度AccessToken</b>:针对HTTP API调用者，百度AIP开...——<a href=\"https://www.free-api.com/doc/1\" target='_blank'>接口地址</a><br><b>语音识别</b>:通过场景识别优化，为车载导航，智能家居和...——<a href=\"https://www.free-api.com/doc/2\" target='_blank'>接口地址</a><br><b>语音合成</b>:将用户输入的文字，转换成流畅自然的语音输...——<a href=\"https://www.free-api.com/doc/4\" target='_blank'>接口地址</a><br><b>出租车票识别(可在线调用)</b>:针对出租车票（现支持北京、上海、深圳）的...——<a href=\"https://www.free-api.com/doc/6\" target='_blank'>接口地址</a><br><b>火车票识别(可在线调用)</b>:支持对大陆火车票的车票号、始发站、目的站...——<a href=\"https://www.free-api.com/doc/7\" target='_blank'>接口地址</a><br><!-- more --><b>数字识别(可在线调用)</b>:对图像中的阿拉伯数字进行识别提取，适用于...——<a href=\"https://www.free-api.com/doc/8\" target='_blank'>接口地址</a><br><b>通用文字识别(可在线调用)</b>:支持多场景下的文字检测识别，多项ICDA...——<a href=\"https://www.free-api.com/doc/9\" target='_blank'>接口地址</a><br><b>网络图片文字识别(可在线调用)</b>:能够快速准确识别各种网络图片中的文字，在...——<a href=\"https://www.free-api.com/doc/10\" target='_blank'>接口地址</a><br><b>身份证识别(可在线调用)</b>:支持对二代居民身份证正反面的关键字段识别...——<a href=\"https://www.free-api.com/doc/11\" target='_blank'>接口地址</a><br><b>银行卡识别(可在线调用)</b>:支持对主流银行卡卡号识别，并返回发卡行和...——<a href=\"https://www.free-api.com/doc/12\" target='_blank'>接口地址</a><br><b>驾驶证识别(可在线调用)</b>:支持对机动车驾驶证正页的关键字段识别，包...——<a href=\"https://www.free-api.com/doc/13\" target='_blank'>接口地址</a><br><b>行驶证识别(可在线调用)</b>:支持对机动车行驶证正页的关键字段识别，包...——<a href=\"https://www.free-api.com/doc/14\" target='_blank'>接口地址</a><br><b>手写文字识别(可在线调用)</b>:能够对手写汉字和手写数字进行识别——<a href=\"https://www.free-api.com/doc/15\" target='_blank'>接口地址</a><br><b>增值税发票识别(可在线调用)</b>:识别并结构化返回增值税发票的各个字段及其...——<a href=\"https://www.free-api.com/doc/16\" target='_blank'>接口地址</a><br><b>营业执照识别(可在线调用)</b>:支持对营业执照关键字段的识别，包括单位名...——<a href=\"https://www.free-api.com/doc/17\" target='_blank'>接口地址</a><br><b>车牌识别(可在线调用)</b>:支持对中国大陆机动车车牌的识别，包括地域...——<a href=\"https://www.free-api.com/doc/18\" target='_blank'>接口地址</a><br><b>票据识别(可在线调用)</b>:支持对增值税发票、火车票、出租车票（支持...——<a href=\"https://www.free-api.com/doc/19\" target='_blank'>接口地址</a><br><b>表格文字识别</b>:自动识别表格线及表格内容，结构化输出表头...——<a href=\"https://www.free-api.com/doc/20\" target='_blank'>接口地址</a><br><b>通用物体和场景识别(可在线调用)</b>:支持超过10万类物体和场景识别，接口返回...——<a href=\"https://www.free-api.com/doc/21\" target='_blank'>接口地址</a><br><b>图像主体检测(可在线调用)</b>:检测图片中关键主体位置，接口支持检测单张...——<a href=\"https://www.free-api.com/doc/22\" target='_blank'>接口地址</a><br><b>品牌logo识别(可在线调用)</b>:实现2万类品牌logo识别，接口返回品牌...——<a href=\"https://www.free-api.com/doc/23\" target='_blank'>接口地址</a><br><b>植物识别(可在线调用)</b>:植物识别支持2万多种通用植物识别、近...——<a href=\"https://www.free-api.com/doc/24\" target='_blank'>接口地址</a><br><b>动物识别(可在线调用)</b>:支持数千种动物识别，接口返回名称——<a href=\"https://www.free-api.com/doc/25\" target='_blank'>接口地址</a><br><b>菜品识别(可在线调用)</b>:识别超过5万个菜品，接口返回菜品的名称、...——<a href=\"https://www.free-api.com/doc/26\" target='_blank'>接口地址</a><br><b>地标识别(可在线调用)</b>:支持识别约5万中外著名地标、景点，接口返...——<a href=\"https://www.free-api.com/doc/27\" target='_blank'>接口地址</a><br><b>车型识别(可在线调用)</b>:识别车辆的具体车型，以小汽车为主，输出图...——<a href=\"https://www.free-api.com/doc/28\" target='_blank'>接口地址</a><br><b>车辆检测</b>:识别图像中所有机动车辆的类型和位置，并对...——<a href=\"https://www.free-api.com/doc/29\" target='_blank'>接口地址</a><br><b>GIF色情图像识别(可在线调用)</b>:人工智能鉴黄技术，智能识别图片和视频中的...——<a href=\"https://www.free-api.com/doc/30\" target='_blank'>接口地址</a><br><b>图像审核(可在线调用)</b>:通过人脸检测、文字识别、色情识别、暴恐识...——<a href=\"https://www.free-api.com/doc/31\" target='_blank'>接口地址</a><br><b>人脸检测与属性分析(可在线调用)</b>:检测图中的人脸，并为人脸标记出边框。检测...——<a href=\"https://www.free-api.com/doc/39\" target='_blank'>接口地址</a><br><b>在线活体检测(可在线调用)</b>:提供在线方式的人脸活体检测能力，在人脸识...——<a href=\"https://www.free-api.com/doc/41\" target='_blank'>接口地址</a><br><b>人体关键点识别(可在线调用)</b>:检测人体并返回人体矩形框位置，精准定位1...——<a href=\"https://www.free-api.com/doc/44\" target='_blank'>接口地址</a><br><b>人流量统计(可在线调用)</b>:统计图像中的人体个数和流动趋势，以头肩为...——<a href=\"https://www.free-api.com/doc/45\" target='_blank'>接口地址</a><br><b>人体检测与属性识别(可在线调用)</b>:检测图像中的所有人体，识别人体的20类属...——<a href=\"https://www.free-api.com/doc/46\" target='_blank'>接口地址</a><br><b>手势识别(可在线调用)</b>:识别图片中的手部位置和手势类型，可识别2...——<a href=\"https://www.free-api.com/doc/47\" target='_blank'>接口地址</a><br><b>人像分割(可在线调用)</b>:识别图像中的人体轮廓，与背景进行分离——<a href=\"https://www.free-api.com/doc/48\" target='_blank'>接口地址</a><br><b>驾驶行为分析(可在线调用)</b>:针对车载场景，识别驾驶员使用手机、抽烟、...——<a href=\"https://www.free-api.com/doc/49\" target='_blank'>接口地址</a><br><b>词法分析(可在线调用)</b>:基于大数据和用户行为的分词、词性标注、命...——<a href=\"https://www.free-api.com/doc/50\" target='_blank'>接口地址</a><br><b>词向量表示(可在线调用)</b>:词向量计算是通过训练的方法，将语言词表中...——<a href=\"https://www.free-api.com/doc/51\" target='_blank'>接口地址</a><br><b>词义相似度(可在线调用)</b>:用于计算两个给定词语的语义相似度，基于自...——<a href=\"https://www.free-api.com/doc/52\" target='_blank'>接口地址</a><br><b>依存句法分析(可在线调用)</b>:利用句子中词与词之间的依存关系来表示词语...——<a href=\"https://www.free-api.com/doc/53\" target='_blank'>接口地址</a><br><b>DNN语言模型(可在线调用)</b>:语言模型是通过计算给定词组成的句子的概率...——<a href=\"https://www.free-api.com/doc/54\" target='_blank'>接口地址</a><br><b>短文本相似度(可在线调用)</b>:短文本相似度计算服务能够提供不同短文本之...——<a href=\"https://www.free-api.com/doc/55\" target='_blank'>接口地址</a><br><b>文本纠错(可在线调用)</b>:文本纠错支持短文本、长文本、语音识别结果...——<a href=\"https://www.free-api.com/doc/56\" target='_blank'>接口地址</a><br><b>情感倾向分析(可在线调用)</b>:针对带有主观描述的中文文本，可自动判断该...——<a href=\"https://www.free-api.com/doc/57\" target='_blank'>接口地址</a><br><b>评论观点抽取(可在线调用)</b>:自动分析评论关注点和评论观点，并输出评论...——<a href=\"https://www.free-api.com/doc/58\" target='_blank'>接口地址</a><br><b>对话情绪识别(可在线调用)</b>:针对一段对话文本，自动识别出当前会话者所...——<a href=\"https://www.free-api.com/doc/59\" target='_blank'>接口地址</a><br><b>文章标签(可在线调用)</b>:文章标签服务对文章的标题和内容进行深度分...——<a href=\"https://www.free-api.com/doc/60\" target='_blank'>接口地址</a><br><b>文章分类(可在线调用)</b>:文章分类服务对文章内容进行深度分析，输出...——<a href=\"https://www.free-api.com/doc/61\" target='_blank'>接口地址</a><br><b>新闻摘要(可在线调用)</b>:基于深度语义分析模型，自动抽取新闻文本中...——<a href=\"https://www.free-api.com/doc/62\" target='_blank'>接口地址</a><br><b>通用翻译(可在线调用)</b>:支持28种语言实时互译，覆盖中、英、日、...——<a href=\"https://www.free-api.com/doc/64\" target='_blank'>接口地址</a><br><b>实体标注(可在线调用)</b>:结合上下文，识别文本中的实体并将其关联到...——<a href=\"https://www.free-api.com/doc/65\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条，各类社会、国内、国际、体育...——<a href=\"https://www.free-api.com/doc/66\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:根据手机号码或手机号码的前7位，查询手机...——<a href=\"https://www.free-api.com/doc/67\" target='_blank'>接口地址</a><br><b>彩票开奖结果查询(可在线调用)</b>:目前支持双色球、大乐透、七乐彩、七星彩、...——<a href=\"https://www.free-api.com/doc/68\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:查询天气情况：温度、湿度、AQI、天气、...——<a href=\"https://www.free-api.com/doc/69\" target='_blank'>接口地址</a><br><b>二维码生成(可在线调用)</b>:按照设定的参数、生成二维码——<a href=\"https://www.free-api.com/doc/70\" target='_blank'>接口地址</a><br><b>汇率(可在线调用)</b>:外汇报价，货币汇率——<a href=\"https://www.free-api.com/doc/71\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:回顾历史的长河，历史是生活的一面镜子——<a href=\"https://www.free-api.com/doc/72\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:新华字典在线查字,最新最全——<a href=\"https://www.free-api.com/doc/74\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:最大最全的新华汉语词典，按拼音查、按部首...——<a href=\"https://www.free-api.com/doc/75\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信精选文章——<a href=\"https://www.free-api.com/doc/76\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:搜集网络幽默、搞笑、内涵段子，不间断更新——<a href=\"https://www.free-api.com/doc/77\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:全国免费的WIFI热点分布——<a href=\"https://www.free-api.com/doc/78\" target='_blank'>接口地址</a><br><b>货币汇率(可在线调用)</b>:支持人民币牌价、外汇汇率查询；数据仅供参...——<a href=\"https://www.free-api.com/doc/79\" target='_blank'>接口地址</a><br><b>手机固话来电显示</b>:查询手机/固话号码归属地，是否诈骗、营销...——<a href=\"https://www.free-api.com/doc/80\" target='_blank'>接口地址</a><br><b>简/繁/火星字体转换(可在线调用)</b>:实现简体、繁体、火星文之间的转换,转换字...——<a href=\"https://www.free-api.com/doc/81\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:提供全国邮政编码大全,为你快速准确查邮编——<a href=\"https://www.free-api.com/doc/82\" target='_blank'>接口地址</a><br><b>老黄历(可在线调用)</b>:提供老黄历查询,黄历每日吉凶宜忌查询——<a href=\"https://www.free-api.com/doc/83\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦,周公解梦大全,周公解梦查询，免...——<a href=\"https://www.free-api.com/doc/84\" target='_blank'>接口地址</a><br><b>净值数据(可在线调用)</b>:根据基金类型及分页参数来获取数据(开放式...——<a href=\"https://www.free-api.com/doc/85\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:十二星座每日、每月、每年运势——<a href=\"https://www.free-api.com/doc/86\" target='_blank'>接口地址</a><br><b>图书电商数据(可在线调用)</b>:于万千之中选择你所爱--好书推荐，值得你...——<a href=\"https://www.free-api.com/doc/87\" target='_blank'>接口地址</a><br><b>身份证查询(可在线调用)</b>:身份证归属地信息查询——<a href=\"https://www.free-api.com/doc/88\" target='_blank'>接口地址</a><br><b>黄金数据(可在线调用)</b>:黄金品种、最新价、开盘价、最高价等信息——<a href=\"https://www.free-api.com/doc/89\" target='_blank'>接口地址</a><br><b>IP地址(可在线调用)</b>:根据查询的IP地址或者域名，查询该IP所...——<a href=\"https://www.free-api.com/doc/90\" target='_blank'>接口地址</a><br><b>笑话大全——文字(可在线调用)</b>:每小时更新。文字笑话大全，信息搜集整理于...——<a href=\"https://www.free-api.com/doc/92\" target='_blank'>接口地址</a><br><b>笑话大全——图片(可在线调用)</b>:每小时更新。图片笑话大全，信息搜集整理于...——<a href=\"https://www.free-api.com/doc/93\" target='_blank'>接口地址</a><br><b>最新新闻</b>:新闻API接口 官方自营 会员接口...——<a href=\"https://www.free-api.com/doc/94\" target='_blank'>接口地址</a><br><b>美图大全</b>:根据几十个种类获取图片列表，每日更新。种...——<a href=\"https://www.free-api.com/doc/95\" target='_blank'>接口地址</a><br><b>手机归属地查询</b>:最全、最新的手机号段数据库。本地找不到的...——<a href=\"https://www.free-api.com/doc/96\" target='_blank'>接口地址</a><br><b>历史上的今天</b>:回顾历史的长河,历史是生活的一面镜子;历...——<a href=\"https://www.free-api.com/doc/97\" target='_blank'>接口地址</a><br><b>来福岛笑话——图片</b>:来福岛爆笑娱乐网创建于2000年，是国内...——<a href=\"https://www.free-api.com/doc/99\" target='_blank'>接口地址</a><br><b>来福岛笑话——文字</b>:来福岛爆笑娱乐网创建于2000年，是国内...——<a href=\"https://www.free-api.com/doc/100\" target='_blank'>接口地址</a><br><b>全国景点查询</b>:全国景点查询接口（来自同程网的合作数据）...——<a href=\"https://www.free-api.com/doc/101\" target='_blank'>接口地址</a><br><b>健康知识</b>:根据养生、用药、两性等频道内容获取健康知...——<a href=\"https://www.free-api.com/doc/102\" target='_blank'>接口地址</a><br><b>猜一猜</b>:随机返回谜语，有2.5万谜语，每日更新。...——<a href=\"https://www.free-api.com/doc/103\" target='_blank'>接口地址</a><br><b>身份证查询</b>:可根据身份证号，查询其签发地、生日、性别...——<a href=\"https://www.free-api.com/doc/104\" target='_blank'>接口地址</a><br><b>爱飞天气插件</b>:爱飞天气是ShowAPI官方天气接口的一...——<a href=\"https://www.free-api.com/doc/105\" target='_blank'>接口地址</a><br><b>PM2.5空气质量指数</b>:本接口每小时更新1次。空气质量指数提供实...——<a href=\"https://www.free-api.com/doc/106\" target='_blank'>接口地址</a><br><b>全球IP地址查询</b>:全球IP地址——<a href=\"https://www.free-api.com/doc/107\" target='_blank'>接口地址</a><br><b>域名查询</b>:域名查询地理位置——<a href=\"https://www.free-api.com/doc/108\" target='_blank'>接口地址</a><br><b>汉字转拼音</b>:将汉字转换为拼音和拼音首字母缩写——<a href=\"https://www.free-api.com/doc/110\" target='_blank'>接口地址</a><br><b>中文分词</b>:中文分词接口。将长段中文切词分开。使用场...——<a href=\"https://www.free-api.com/doc/111\" target='_blank'>接口地址</a><br><b>图片验证码生成</b>:图形|图片验证码生成，支持自定义高宽，文...——<a href=\"https://www.free-api.com/doc/112\" target='_blank'>接口地址</a><br><b>新闻、网页正文抽取</b>:传入一个新网或网页地址，接口将返回此ur...——<a href=\"https://www.free-api.com/doc/114\" target='_blank'>接口地址</a><br><b>实时IP代理查询</b>:代理数量并不是越多越好，可以用才是真正的...——<a href=\"https://www.free-api.com/doc/116\" target='_blank'>接口地址</a><br><b>今日油价</b>:今日油价，可查询全国31个省的油价。每天...——<a href=\"https://www.free-api.com/doc/117\" target='_blank'>接口地址</a><br><b>QQ号码测凶吉</b>:输入qq号码，得到此号码的算命情况，例如...——<a href=\"https://www.free-api.com/doc/118\" target='_blank'>接口地址</a><br><b>地址转换经纬度</b>:根据城市和名称转换为相应的经纬度——<a href=\"https://www.free-api.com/doc/120\" target='_blank'>接口地址</a><br><b>经纬度转换地址</b>:根据经纬度转换成相应地址——<a href=\"https://www.free-api.com/doc/121\" target='_blank'>接口地址</a><br><b>黄历运势</b>:根据输入日期，查看某一天的黄历运势——<a href=\"https://www.free-api.com/doc/122\" target='_blank'>接口地址</a><br><b>十大银行实时汇率</b>:包括工商银行、中国银行、农业银行、交通银...——<a href=\"https://www.free-api.com/doc/123\" target='_blank'>接口地址</a><br><b>汇率转换</b>:1分钟更新1次。当前十大银行，包括工商银...——<a href=\"https://www.free-api.com/doc/124\" target='_blank'>接口地址</a><br><b>添加图片水印</b>:传入底板图及水印图，根据位置参数，接口把...——<a href=\"https://www.free-api.com/doc/125\" target='_blank'>接口地址</a><br><b>图像裁剪</b>:裁剪原图的部份区域——<a href=\"https://www.free-api.com/doc/126\" target='_blank'>接口地址</a><br><b>生成缩略图</b>:根据传入的比率将原图生成缩略图——<a href=\"https://www.free-api.com/doc/127\" target='_blank'>接口地址</a><br><b>星座运势</b>:每天1点、7点、17点更新。包含十二星座...——<a href=\"https://www.free-api.com/doc/128\" target='_blank'>接口地址</a><br><b>PDF文件正文抽取</b>:抽取PDF文件中的文字信息——<a href=\"https://www.free-api.com/doc/129\" target='_blank'>接口地址</a><br><b>网络搜索热词排行</b>:每2小时更新一次。根据分类查询网络最热的...——<a href=\"https://www.free-api.com/doc/131\" target='_blank'>接口地址</a><br><b>二维码识别</b>:根据图片的Base64信息,识别图片中的...——<a href=\"https://www.free-api.com/doc/132\" target='_blank'>接口地址</a><br><b>二维码生成</b>:生成二维码图片 图片存放在showapi...——<a href=\"https://www.free-api.com/doc/133\" target='_blank'>接口地址</a><br><b>中文文本相似度检测</b>:通过计算向量间的夹角（余弦公式），来判断...——<a href=\"https://www.free-api.com/doc/134\" target='_blank'>接口地址</a><br><b>全国火车票查询</b>:数据来源于12306。 包括城市列表\\列...——<a href=\"https://www.free-api.com/doc/135\" target='_blank'>接口地址</a><br><b>药品查询</b>:药品信息——<a href=\"https://www.free-api.com/doc/136\" target='_blank'>接口地址</a><br><b>菜谱大全</b>:本菜谱的信息来源于网络,所以本信息仅用于...——<a href=\"https://www.free-api.com/doc/137\" target='_blank'>接口地址</a><br><b>台风最新坐标轨迹</b>:可查询当前存在威胁的台风列表，每个台风的...——<a href=\"https://www.free-api.com/doc/138\" target='_blank'>接口地址</a><br><b>网页级别查询</b>:google的pr查询——<a href=\"https://www.free-api.com/doc/139\" target='_blank'>接口地址</a><br><b>关键词抽取</b>:根据传入的大段文字，使用TextRank...——<a href=\"https://www.free-api.com/doc/140\" target='_blank'>接口地址</a><br><b>全国行政区划分</b>:最新最全的全国省、市、区县、乡镇的分级查...——<a href=\"https://www.free-api.com/doc/141\" target='_blank'>接口地址</a><br><b>微信小程序查询</b>:搜索查询已经上架的微信小程序。包括基本信...——<a href=\"https://www.free-api.com/doc/142\" target='_blank'>接口地址</a><br><b>生成文章摘要</b>:根据传入的长篇文章，系统使用智能算法抽取...——<a href=\"https://www.free-api.com/doc/143\" target='_blank'>接口地址</a><br><b>藏头诗生成</b>:藏头诗生成器。可输入人名生成藏头、藏尾、...——<a href=\"https://www.free-api.com/doc/144\" target='_blank'>接口地址</a><br><b>国际原油价格查询</b>:WTI和布伦特的油价查询——<a href=\"https://www.free-api.com/doc/145\" target='_blank'>接口地址</a><br><b>水质查询</b>:根据地点和时间查询水质——<a href=\"https://www.free-api.com/doc/146\" target='_blank'>接口地址</a><br><b>条码生成</b>:提供EAN_8、EAN_13、CODE_...——<a href=\"https://www.free-api.com/doc/147\" target='_blank'>接口地址</a><br><b>条码识别</b>:提供EAN_8、EAN_13、CODE_...——<a href=\"https://www.free-api.com/doc/148\" target='_blank'>接口地址</a><br><b>全国站点换乘线路查询</b>:提供全国站点换乘线路查询——<a href=\"https://www.free-api.com/doc/149\" target='_blank'>接口地址</a><br><b>全国公交换乘查询</b>:提供全国公交换乘查询——<a href=\"https://www.free-api.com/doc/150\" target='_blank'>接口地址</a><br><b>汽车品牌查询</b>:收录了近200个品牌/子品牌,上万辆车型...——<a href=\"https://www.free-api.com/doc/151\" target='_blank'>接口地址</a><br><b>周公解梦</b>:根据周公解梦全书提供相关信息——<a href=\"https://www.free-api.com/doc/152\" target='_blank'>接口地址</a><br><b>正能量新闻</b>:社会正能量的新闻资讯，每天更新——<a href=\"https://www.free-api.com/doc/153\" target='_blank'>接口地址</a><br><b>全国酒店查询</b>:该接口所返回的所有图片链接将在12小时内...——<a href=\"https://www.free-api.com/doc/154\" target='_blank'>接口地址</a><br><b>经典语句</b>:根据名人，查询经典名言——<a href=\"https://www.free-api.com/doc/155\" target='_blank'>接口地址</a><br><b>商品比价</b>:搜索商品，根据商品url搜索各大商城的历...——<a href=\"https://www.free-api.com/doc/156\" target='_blank'>接口地址</a><br><b>姓名打分</b>:根据姓名，返回此姓名的运势得分——<a href=\"https://www.free-api.com/doc/157\" target='_blank'>接口地址</a><br><b>公司名测吉凶</b>:根据公司名，返回此公司的运势得分——<a href=\"https://www.free-api.com/doc/158\" target='_blank'>接口地址</a><br><b>车牌号测吉凶</b>:根据车牌名，返回此车牌号的运势得分——<a href=\"https://www.free-api.com/doc/159\" target='_blank'>接口地址</a><br><b>手机号测吉凶</b>:根据手机号码，返回此号码的运势得分——<a href=\"https://www.free-api.com/doc/160\" target='_blank'>接口地址</a><br><b>图书ISBN查询</b>:通过国际图书号查询图书相关信息，目前只支...——<a href=\"https://www.free-api.com/doc/161\" target='_blank'>接口地址</a><br><b>影讯查询</b>:影讯查询——<a href=\"https://www.free-api.com/doc/162\" target='_blank'>接口地址</a><br><b>手机套餐售价</b>:全国手机流量充值，4G流量，当月有效——<a href=\"https://www.free-api.com/doc/163\" target='_blank'>接口地址</a><br><b>紫微斗数</b>:根据出生时间定紫薇斗数命盘，供命理研究，...——<a href=\"https://www.free-api.com/doc/164\" target='_blank'>接口地址</a><br><b>唐诗宋词元曲等诗词查询</b>:根据朝代Id或诗人名称查询诗人信息——<a href=\"https://www.free-api.com/doc/165\" target='_blank'>接口地址</a><br><b>脑筋急转弯</b>:查询常见的脑筋急转弯金句——<a href=\"https://www.free-api.com/doc/166\" target='_blank'>接口地址</a><br><b>虚拟数字币|比特币行情</b>:查询主流虚拟货币实时行情，例如btc(比...——<a href=\"https://www.free-api.com/doc/167\" target='_blank'>接口地址</a><br><b>全国房产信息</b>:搜索最新楼盘开盘信息、最新市场房价信息——<a href=\"https://www.free-api.com/doc/168\" target='_blank'>接口地址</a><br><b>手游排行榜</b>:手游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/169\" target='_blank'>接口地址</a><br><b>网游排行榜</b>:网游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/170\" target='_blank'>接口地址</a><br><b>黄金行情</b>:上金所黄金行情——<a href=\"https://www.free-api.com/doc/171\" target='_blank'>接口地址</a><br><b>电商淘宝平台联想词</b>:提供淘宝联想词查询——<a href=\"https://www.free-api.com/doc/172\" target='_blank'>接口地址</a><br><b>中文反义词</b>:中文反义词——<a href=\"https://www.free-api.com/doc/173\" target='_blank'>接口地址</a><br><b>中文近义词</b>:中文近义词——<a href=\"https://www.free-api.com/doc/174\" target='_blank'>接口地址</a><br><b>歇后语查询</b>:查询歇后语列表——<a href=\"https://www.free-api.com/doc/175\" target='_blank'>接口地址</a><br><b>中国互联网络信息</b>:中国互联网络信息——<a href=\"https://www.free-api.com/doc/176\" target='_blank'>接口地址</a><br><b>实时票房排行</b>:实时票房中国（包括香港）、北美、全球票房...——<a href=\"https://www.free-api.com/doc/177\" target='_blank'>接口地址</a><br><b>爱奇艺热点趋势</b>:爱奇艺视频指数——<a href=\"https://www.free-api.com/doc/178\" target='_blank'>接口地址</a><br><b>空气质量指数(可在线调用)</b>:空气质量指数提供实时空气质量情况，目前支...——<a href=\"https://www.free-api.com/doc/179\" target='_blank'>接口地址</a><br><b>IP地址查询(可在线调用)</b>:提供rest风格的IP地址查询接口，只需...——<a href=\"https://www.free-api.com/doc/180\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:全国天气预报，预报7天天气，以及当天的生...——<a href=\"https://www.free-api.com/doc/181\" target='_blank'>接口地址</a><br><b>人脸识别(可在线调用)</b>:检测图片(Image)中的人脸(Face...——<a href=\"https://www.free-api.com/doc/182\" target='_blank'>接口地址</a><br><b>指纹识别</b>:检测图片(Image)中的指纹(Fing...——<a href=\"https://www.free-api.com/doc/183\" target='_blank'>接口地址</a><br><b>医疗科室(可在线调用)</b>:医药健康接口专用的医疗科室字典项获取——<a href=\"https://www.free-api.com/doc/184\" target='_blank'>接口地址</a><br><b>健康菜谱(可在线调用)</b>:健康菜谱，让人们在宣泄的都市中体验在家常...——<a href=\"https://www.free-api.com/doc/186\" target='_blank'>接口地址</a><br><b>疾病信息(可在线调用)</b>:通过名称取得疾病详情——<a href=\"https://www.free-api.com/doc/187\" target='_blank'>接口地址</a><br><b>药品查询(可在线调用)</b>:通过药品名字直接得到药品说明书、价格、生...——<a href=\"https://www.free-api.com/doc/188\" target='_blank'>接口地址</a><br><b>食疗大全(可在线调用)</b>:通过名称取得食品详情只要是食品都有它...——<a href=\"https://www.free-api.com/doc/189\" target='_blank'>接口地址</a><br><b>手术项目(可在线调用)</b>:通过名称取得手术详情通过名称取得手术...——<a href=\"https://www.free-api.com/doc/190\" target='_blank'>接口地址</a><br><b>药房药店(可在线调用)</b>:通过名称取得药店信息通过名称取得药店...——<a href=\"https://www.free-api.com/doc/191\" target='_blank'>接口地址</a><br><b>病状信息(可在线调用)</b>:通过名称取得病状详情——<a href=\"https://www.free-api.com/doc/192\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信热门精选文章，实时更新——<a href=\"https://www.free-api.com/doc/193\" target='_blank'>接口地址</a><br><b>国内新闻(可在线调用)</b>:国内新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/194\" target='_blank'>接口地址</a><br><b>国际新闻(可在线调用)</b>:国际新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/195\" target='_blank'>接口地址</a><br><b>体育新闻(可在线调用)</b>:体育新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/196\" target='_blank'>接口地址</a><br><b>科技新闻(可在线调用)</b>:科技新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/197\" target='_blank'>接口地址</a><br><b>奇闻轶事(可在线调用)</b>:奇闻轶事数据，实时更新——<a href=\"https://www.free-api.com/doc/198\" target='_blank'>接口地址</a><br><b>旅游新闻(可在线调用)</b>:旅游热点数据，实时更新——<a href=\"https://www.free-api.com/doc/199\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:新华字典数据库，可查字的拼音、读音、偏旁...——<a href=\"https://www.free-api.com/doc/200\" target='_blank'>接口地址</a><br><b>五笔字根(可在线调用)</b>:查询汉字的五笔字根——<a href=\"https://www.free-api.com/doc/201\" target='_blank'>接口地址</a><br><b>简繁体火星文转换(可在线调用)</b>:汉字的简体、繁体、火星文转换——<a href=\"https://www.free-api.com/doc/202\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:成语查询——<a href=\"https://www.free-api.com/doc/203\" target='_blank'>接口地址</a><br><b>歇后语(可在线调用)</b>:歇后语查询，根据关键字搜索歇后语——<a href=\"https://www.free-api.com/doc/204\" target='_blank'>接口地址</a><br><b>唐诗宋词(可在线调用)</b>:根据关键字搜索唐诗宋词——<a href=\"https://www.free-api.com/doc/205\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:以史为镜，可以知兴替。借历史上的成败得失...——<a href=\"https://www.free-api.com/doc/206\" target='_blank'>接口地址</a><br><b>辞海(可在线调用)</b>:查询词语解释——<a href=\"https://www.free-api.com/doc/207\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:通过手机号码查询归属地、运营商、号码类型...——<a href=\"https://www.free-api.com/doc/208\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:海量互联网幽默、内涵段子、趣味图片，不间...——<a href=\"https://www.free-api.com/doc/209\" target='_blank'>接口地址</a><br><b>同义词</b>:通过输入的词语查询对应的同义词——<a href=\"https://www.free-api.com/doc/210\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:查询周边免费WIFI热点；全国免费WIF...——<a href=\"https://www.free-api.com/doc/211\" target='_blank'>接口地址</a><br><b>NBA赛事(可在线调用)</b>:NBA赛事赛程信息，球队赛程赛事查询——<a href=\"https://www.free-api.com/doc/212\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:通过地名查询地区邮编，精确到街道——<a href=\"https://www.free-api.com/doc/213\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦大全——<a href=\"https://www.free-api.com/doc/214\" target='_blank'>接口地址</a><br><b>名人名言(可在线调用)</b>:通过关键字查询名人名言——<a href=\"https://www.free-api.com/doc/215\" target='_blank'>接口地址</a><br><b>今日油价(可在线调用)</b>:可查询全国31个省的油价——<a href=\"https://www.free-api.com/doc/216\" target='_blank'>接口地址</a><br><b>国际白银实时价格</b>:国际交易市场白银实时价格(美元/盎司)，...——<a href=\"https://www.free-api.com/doc/217\" target='_blank'>接口地址</a><br><b>时事新闻检索(可在线调用)</b>:时事新闻，新闻检索等，实时更新——<a href=\"https://www.free-api.com/doc/218\" target='_blank'>接口地址</a><br><b>号码吉凶(可在线调用)</b>:手机号码、QQ号码、车牌号等所有数字类型...——<a href=\"https://www.free-api.com/doc/219\" target='_blank'>接口地址</a><br><b>金额小写转大写(可在线调用)</b>:人民币金额小写转大写——<a href=\"https://www.free-api.com/doc/220\" target='_blank'>接口地址</a><br><b>电影票房(可在线调用)</b>:最新票房榜，网票票房——<a href=\"https://www.free-api.com/doc/221\" target='_blank'>接口地址</a><br><b>全国长途汽车(可在线调用)</b>:全国长途汽车时刻表查询——<a href=\"https://www.free-api.com/doc/222\" target='_blank'>接口地址</a><br><b>足球联赛(可在线调用)</b>:目前支持 英超，西甲，德甲，意甲，法甲，...——<a href=\"https://www.free-api.com/doc/223\" target='_blank'>接口地址</a><br><b>影视影讯(可在线调用)</b>:影视信息播放链接检索，城市影讯检索——<a href=\"https://www.free-api.com/doc/224\" target='_blank'>接口地址</a><br><b>标准电码查询(可在线调用)</b>:提供的标准中文电码查询程序结果——<a href=\"https://www.free-api.com/doc/225\" target='_blank'>接口地址</a><br><b>火车时刻表(可在线调用)</b>:火车时刻表，站到站检索——<a href=\"https://www.free-api.com/doc/226\" target='_blank'>接口地址</a><br><b>姓氏起源(可在线调用)</b>:《百家姓》是我国汉族姓氏总集，载有四百多...——<a href=\"https://www.free-api.com/doc/227\" target='_blank'>接口地址</a><br><b>短链接生成(可在线调用)</b>:查找网提供长的网址链接缩短为新浪短网扯，...——<a href=\"https://www.free-api.com/doc/228\" target='_blank'>接口地址</a><br><b>翻译(可在线调用)</b>:翻译API提供免费开放接口，覆盖中、英、...——<a href=\"https://www.free-api.com/doc/229\" target='_blank'>接口地址</a><br><b>乌云漏洞(可在线调用)</b>:查看乌云最新的安全漏洞——<a href=\"https://www.free-api.com/doc/230\" target='_blank'>接口地址</a><br><b>微信公众号查询(可在线调用)</b>:根据关键字搜索热门微信文章、微信公众号等...——<a href=\"https://www.free-api.com/doc/231\" target='_blank'>接口地址</a><br><b>在线分词(可在线调用)</b>:基于深度学习的中文在线抽词——<a href=\"https://www.free-api.com/doc/232\" target='_blank'>接口地址</a><br><b>MD5破解(可在线调用)</b>:md5密文：16位，32位,sha1(4...——<a href=\"https://www.free-api.com/doc/233\" target='_blank'>接口地址</a><br><b>星座配对(可在线调用)</b>:星座配对测姻缘——<a href=\"https://www.free-api.com/doc/234\" target='_blank'>接口地址</a><br><b>生肖配对(可在线调用)</b>:生肖配对测姻缘——<a href=\"https://www.free-api.com/doc/235\" target='_blank'>接口地址</a><br><b>获取外网IP信息(可在线调用)</b>:取得客户端访问互联网时的外网ip及对应的...——<a href=\"https://www.free-api.com/doc/236\" target='_blank'>接口地址</a><br><b>百度权重(可在线调用)</b>:根据网址查询百度权重——<a href=\"https://www.free-api.com/doc/237\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条——<a href=\"https://www.free-api.com/doc/238\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:黄道十二星座每日、每月、每年运势、不间断...——<a href=\"https://www.free-api.com/doc/239\" target='_blank'>接口地址</a><br>\n\n----------\n\n\n2019.7.3更新接口\n\n----------\n\n\n<b>实时段子(可在线调用)</b>:实时段子,神评版本——<a href=\"https://www.free-api.com/doc/240\">接口地址</a><br><b>音乐搜索(可在线调用)</b>:根据音乐名称返回音乐详情——<a href=\"https://www.free-api.com/doc/241\">接口地址</a><br><b>小说查询(可在线调用)</b>:获取小说的详细信息——<a href=\"https://www.free-api.com/doc/242\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取最近天气情况——<a href=\"https://www.free-api.com/doc/243\">接口地址</a><br><b>音悦tai搜索</b>:音悦Tai-是以高清MV为主的娱乐视频网...——<a href=\"https://www.free-api.com/doc/244\">接口地址</a><br><b>识别身份证文字(可在线调用)</b>:AI人工智能识别身份证图像文字 URL图...——<a href=\"https://www.free-api.com/doc/245\">接口地址</a><br><b>编码解码</b>:常见的编码和解码——<a href=\"https://www.free-api.com/doc/246\">接口地址</a><br><b>网站备案查询</b>:网站备案信息查询接口——<a href=\"https://www.free-api.com/doc/247\">接口地址</a><br><b>身份证信息查询(可在线调用)</b>:身份证信息查询(不支持查询百岁老人)——<a href=\"https://www.free-api.com/doc/248\">接口地址</a><br><b>图片PS</b>:在线图片加文字,返回为字符串,需要处理下——<a href=\"https://www.free-api.com/doc/249\">接口地址</a><br><b>一言</b>:随机返回一句话——<a href=\"https://www.free-api.com/doc/250\">接口地址</a><br><b>短链接生成与还原</b>:短链接生成与还原，包括新浪、腾讯、百度——<a href=\"https://www.free-api.com/doc/251\">接口地址</a><br><b>获取用户大致信息</b>:获取用户信息如网络运营商等等——<a href=\"https://www.free-api.com/doc/254\">接口地址</a><br><b>三合一收款码</b>:包括支付宝，qq，微信——<a href=\"https://www.free-api.com/doc/255\">接口地址</a><br><b>IP查询</b>:根据ip地址获取其所在省市区——<a href=\"https://www.free-api.com/doc/252\">接口地址</a><br><b>IP经纬度查询</b>:根据ip地址和经纬度获取其所在省市区——<a href=\"https://www.free-api.com/doc/253\">接口地址</a>\n\n----------\n\n\n2019.8.7更新接口\n\n----------\n\n\n<b>淘宝ip(可在线调用)</b>:来自淘宝的ip查询，可以根据ip地址查询...——<a href=\"https://www.free-api.com/doc/256\">接口地址</a><br><b>360ip(可在线调用)</b>:来自360的ip查询，可以根据ip地址查...——<a href=\"https://www.free-api.com/doc/257\">接口地址</a><br><b>地理编码(可在线调用)</b>:将详细的结构化地址转换为高德经纬度坐标。...——<a href=\"https://www.free-api.com/doc/258\">接口地址</a><br><b>逆地理编码(可在线调用)</b>:将经纬度转换为详细结构化的地址，且返回附...——<a href=\"https://www.free-api.com/doc/259\">接口地址</a><br><b>步行路径规划</b>:可以规划100KM以内的步行通勤方案，并...——<a href=\"https://www.free-api.com/doc/260\">接口地址</a><br><b>驾车路径规划(可在线调用)</b>:规划以小客车、轿车通勤出行的方案，并且返...——<a href=\"https://www.free-api.com/doc/261\">接口地址</a><br><b>公交路径规划</b>:规划综合各类公共（火车、公交、地铁）交通...——<a href=\"https://www.free-api.com/doc/262\">接口地址</a><br><b>骑行路径规划(可在线调用)</b>:用于规划骑行通勤方案，规划时不会考虑路况...——<a href=\"https://www.free-api.com/doc/263\">接口地址</a><br><b>距离测量</b>:根据经纬度测量距离——<a href=\"https://www.free-api.com/doc/264\">接口地址</a><br><b>行政区域查询(可在线调用)</b>:根据用户输入的搜索条件可以帮助用户快速的...——<a href=\"https://www.free-api.com/doc/265\">接口地址</a><br><b>矩形区域交通态势</b>:能够确定矩形交通态势情况，路况信息2分钟...——<a href=\"https://www.free-api.com/doc/266\">接口地址</a><br><b>圆形区域交通态势</b>:能够确定圆形交通态势情况，路况信息2分钟...——<a href=\"https://www.free-api.com/doc/267\">接口地址</a><br><b>指定线路交通态势</b>:能够确定指定线路交通情况，路况信息2分钟...——<a href=\"https://www.free-api.com/doc/268\">接口地址</a><br><b>输入提示(可在线调用)</b>:提供根据用户输入的关键词查询返回建议列表——<a href=\"https://www.free-api.com/doc/269\">接口地址</a><br><b>天气查询(可在线调用)</b>:查询目标区域当前/未来的天气情况——<a href=\"https://www.free-api.com/doc/270\">接口地址</a><br><b>IP定位(可在线调用)</b>:将IP信息转换为地理位置信息——<a href=\"https://www.free-api.com/doc/271\">接口地址</a><br><b>地点范围查询(可在线调用)</b>:根据经纬度查询查询其地址相关信息——<a href=\"https://www.free-api.com/doc/272\">接口地址</a>\n\n----------\n\n\n2019.9.9更新接口\n\n----------\n\n<b>行政区划区域检索(可在线调用)</b>:开发者可通过该功能，检索某一行政区划内（...——<a href=\"https://www.free-api.com/doc/273\">接口地址</a><br><b>圆形区域检索(可在线调用)</b>:开发者可设置圆心和半径，检索圆形区域内的...——<a href=\"https://www.free-api.com/doc/274\">接口地址</a><br><b>矩形区域检索(可在线调用)</b>:开发者可设置检索区域左下角和右上角坐标，...——<a href=\"https://www.free-api.com/doc/275\">接口地址</a><br><b>地点详情检索(可在线调用)</b>:地点详情检索针对指定POI，检索其相关的...——<a href=\"https://www.free-api.com/doc/276\">接口地址</a><br><b>地点输入提示(可在线调用)</b>:用户可通过该服务，匹配用户输入关键词的地...——<a href=\"https://www.free-api.com/doc/277\">接口地址</a><br><b>地理编码服务(可在线调用)</b>:用户可通过该功能，将结构化地址（省/市/...——<a href=\"https://www.free-api.com/doc/278\">接口地址</a><br><b>全球逆地理编码(可在线调用)</b>:用户可通过该功能，将位置坐标解析成对应的...——<a href=\"https://www.free-api.com/doc/279\">接口地址</a><br><b>公交路线规划(可在线调用)</b>:根据起点和终点检索符合条件的公共交通方案...——<a href=\"https://www.free-api.com/doc/280\">接口地址</a><br><b>骑行路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的骑行路线规划...——<a href=\"https://www.free-api.com/doc/281\">接口地址</a><br><b>驾车路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的驾车路线规划...——<a href=\"https://www.free-api.com/doc/282\">接口地址</a><br><b>批量算路</b>:用户可通过该服务，根据起点和终点坐标计算...——<a href=\"https://www.free-api.com/doc/283\">接口地址</a><br><b>普通IP定位(可在线调用)</b>:用户可以通过该服务，根据IP定位来获取大...——<a href=\"https://www.free-api.com/doc/284\">接口地址</a><br><b>道路实时路况查询(可在线调用)</b>:查询具体道路的实时拥堵评价和拥堵路段、拥...——<a href=\"https://www.free-api.com/doc/285\">接口地址</a><br><b>时间偏移查询(可在线调用)</b>:查询坐标所在地与协调世界时的时间偏移信息...——<a href=\"https://www.free-api.com/doc/286\">接口地址</a><br><b>周边上车点推荐(可在线调用)</b>:用户可通过该功能检索坐标点周围的上车点。...——<a href=\"https://www.free-api.com/doc/287\">接口地址</a><br><b>非百度坐标系转换(可在线调用)</b>:用户可通过该服务，实现 非百度坐标系→百...——<a href=\"https://www.free-api.com/doc/288\">接口地址</a><br><b>快递查询(可在线调用)</b>:可根据快递单号查询大部分主流快递的快递信...——<a href=\"https://www.free-api.com/doc/289\">接口地址</a><br><b>文件转换</b>:文件转换成指定格式，成功则返回成功转换的...——<a href=\"https://www.free-api.com/doc/290\">接口地址</a><br><b>获取文件转换内容</b>:根据文件转换成功所获取的id，查询转换成...——<a href=\"https://www.free-api.com/doc/291\">接口地址</a>\n\n----------\n\n\n2019.10.8更新接口\n\n----------\n\n\n<b>全球IP地理位置(可在线调用)</b>:单个IPv4 / IPv6地址或域名...——<a href=\"https://www.free-api.com/doc/292\">接口地址</a><br><b>域名备案(可在线调用)</b>:根据域名查询域名备案状态——<a href=\"https://www.free-api.com/doc/293\">接口地址</a><br><b>十五天天气预报</b>:采用城市ID来精准查询15天内的天气，接...——<a href=\"https://www.free-api.com/doc/294\">接口地址</a><br><b>农历查询(可在线调用)</b>:根据日期获取农历、黄历、禁忌、星期、生肖...——<a href=\"https://www.free-api.com/doc/295\">接口地址</a><br><b>ICP备案查询(可在线调用)</b>:根据域名查询ICP备案号——<a href=\"https://www.free-api.com/doc/296\">接口地址</a><br><b>三合一收款二维码</b>:将QQ、微信、支付宝收款集合到一起，省去...——<a href=\"https://www.free-api.com/doc/297\">接口地址</a><br><b>二维码生成</b>:将网址直接转换成二维码图片——<a href=\"https://www.free-api.com/doc/298\">接口地址</a><br><b>二维码解码(可在线调用)</b>:将二维码图片进行解码，解析处理——<a href=\"https://www.free-api.com/doc/299\">接口地址</a><br><b>短网址生成(可在线调用)</b>:将长网址进行缩短，支持百度、新浪、腾讯短...——<a href=\"https://www.free-api.com/doc/300\">接口地址</a><br><b>短网址还原(可在线调用)</b>:将缩短的短网址进行还原,支持常见的短网址——<a href=\"https://www.free-api.com/doc/301\">接口地址</a><br><b>网易云音乐随机歌曲(可在线调用)</b>:网易云音乐，随机歌曲输出——<a href=\"https://www.free-api.com/doc/302\">接口地址</a><br><b>获取访客相关信息(可在线调用)</b>:根据访客IP地址，操作系统，浏览器，访问...——<a href=\"https://www.free-api.com/doc/303\">接口地址</a><br><b>随机头像输出(可在线调用)</b>:随机头像输出——<a href=\"https://www.free-api.com/doc/304\">接口地址</a>\n\n----------\n\n\n2019.11.5更新接口\n\n----------\n\n\n<b>文章短篇</b>:根据日期获取一篇文章，有网上的，也有名家...——<a href=\"https://www.free-api.com/doc/305\">接口地址</a><br><b>必应故事</b>:随机获取来自必应的故事，可根据pid获取...——<a href=\"https://www.free-api.com/doc/306\">接口地址</a><br><b>每日一言</b>:获取来自一言、有道或金山词霸的每日一言内...——<a href=\"https://www.free-api.com/doc/307\">接口地址</a><br><b>二维码解析</b>:还原二维码的原始URL，支持支付宝，微信...——<a href=\"https://www.free-api.com/doc/308\">接口地址</a><br><b>生成海报</b>:根据提交的内容格式化生成可分享的精美海报——<a href=\"https://www.free-api.com/doc/309\">接口地址</a><br><b>历史上的今天</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/310\">接口地址</a><br><b>生成二维码</b>:可根据传入的内容，生成对应的二维码，还可...——<a href=\"https://www.free-api.com/doc/311\">接口地址</a><br><b>IP地址详情信息</b>:IP地址详情信息查询——<a href=\"https://www.free-api.com/doc/312\">接口地址</a><br><b>XLS生成</b>:生成XLS——<a href=\"https://www.free-api.com/doc/313\">接口地址</a><br><b>土味情话</b>:和妹妹说的情话，返回一句随机的内容——<a href=\"https://www.free-api.com/doc/314\">接口地址</a><br><b>随机笑话(可在线调用)</b>:随机的笑话——<a href=\"https://www.free-api.com/doc/315\">接口地址</a>\n\n----------\n\n\n2019.12.4更新接口\n\n----------\n\n\n<b>经纬度信息(可在线调用)</b>:获取当前经纬度信息——<a href=\"https://www.free-api.com/doc/316\">接口地址</a><br><b>历史上的今天(可在线调用)</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/317\">接口地址</a><br><b>Bing 壁纸获取(可在线调用)</b>:获取最近的Bing 壁纸——<a href=\"https://www.free-api.com/doc/318\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取今天和未来三天的天气情况，来源于高德——<a href=\"https://www.free-api.com/doc/319\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市名，获取今天和未来三天的天气情况...——<a href=\"https://www.free-api.com/doc/320\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市id，获取未来15天的天气情况，...——<a href=\"https://www.free-api.com/doc/321\">接口地址</a><br><b>手机归属地查询(可在线调用)</b>:根据手机号码查询手机号的归属地信息——<a href=\"https://www.free-api.com/doc/322\">接口地址</a><br><b>手机归属地查询</b>:根据手机号码查询手机号的归属地信息，来源...——<a href=\"https://www.free-api.com/doc/323\">接口地址</a><br><b>IP域名归属地查询(可在线调用)</b>:查询IP或者域名归属地——<a href=\"https://www.free-api.com/doc/324\">接口地址</a><br><b>身份证查询(可在线调用)</b>:根据身份证获取该身份证号码的籍贯，出生年...——<a href=\"https://www.free-api.com/doc/325\">接口地址</a><br><b>淘宝关键字(可在线调用)</b>:淘宝搜索关键字——<a href=\"https://www.free-api.com/doc/326\">接口地址</a><br><b>百度关键字</b>:百度搜索关键字——<a href=\"https://www.free-api.com/doc/327\">接口地址</a><br><b>Bing关键字(可在线调用)</b>:Bing搜索关键字——<a href=\"https://www.free-api.com/doc/328\">接口地址</a><br><b>获取用户设备信息(可在线调用)</b>:通过 user-agent 分析用户设备...——<a href=\"https://www.free-api.com/doc/329\">接口地址</a><br><b>百度音乐搜索(可在线调用)</b>:根据关键字获取音乐的相关信息——<a href=\"https://www.free-api.com/doc/330\">接口地址</a>\n\n----------\n\n努力添加中......\n\n**原文链接：<https://github.com/fangzesheng/free-api>\n欢迎转载，请注明出处！**","source":"_posts/some-common-and-free-apis-for-developing.md","raw":"title: 开发中常用的一些免费API\nauthor: ergz\ntags:\n  - API\ncategories:\n  - 工具\ndate: 2019-12-11 18:20:00\n---\n**为了方便广大的开发者，特此统计了网上诸多的免费API，为您收集免费的接口服务，做一个api的搬运工，以后会每月定时更新新的接口。有些接口来自第三方，在第三方注册就可以成为他们的会员，免费使用他们的部分接口。**\n\n<b>百度AccessToken</b>:针对HTTP API调用者，百度AIP开...——<a href=\"https://www.free-api.com/doc/1\" target='_blank'>接口地址</a><br><b>语音识别</b>:通过场景识别优化，为车载导航，智能家居和...——<a href=\"https://www.free-api.com/doc/2\" target='_blank'>接口地址</a><br><b>语音合成</b>:将用户输入的文字，转换成流畅自然的语音输...——<a href=\"https://www.free-api.com/doc/4\" target='_blank'>接口地址</a><br><b>出租车票识别(可在线调用)</b>:针对出租车票（现支持北京、上海、深圳）的...——<a href=\"https://www.free-api.com/doc/6\" target='_blank'>接口地址</a><br><b>火车票识别(可在线调用)</b>:支持对大陆火车票的车票号、始发站、目的站...——<a href=\"https://www.free-api.com/doc/7\" target='_blank'>接口地址</a><br><!-- more --><b>数字识别(可在线调用)</b>:对图像中的阿拉伯数字进行识别提取，适用于...——<a href=\"https://www.free-api.com/doc/8\" target='_blank'>接口地址</a><br><b>通用文字识别(可在线调用)</b>:支持多场景下的文字检测识别，多项ICDA...——<a href=\"https://www.free-api.com/doc/9\" target='_blank'>接口地址</a><br><b>网络图片文字识别(可在线调用)</b>:能够快速准确识别各种网络图片中的文字，在...——<a href=\"https://www.free-api.com/doc/10\" target='_blank'>接口地址</a><br><b>身份证识别(可在线调用)</b>:支持对二代居民身份证正反面的关键字段识别...——<a href=\"https://www.free-api.com/doc/11\" target='_blank'>接口地址</a><br><b>银行卡识别(可在线调用)</b>:支持对主流银行卡卡号识别，并返回发卡行和...——<a href=\"https://www.free-api.com/doc/12\" target='_blank'>接口地址</a><br><b>驾驶证识别(可在线调用)</b>:支持对机动车驾驶证正页的关键字段识别，包...——<a href=\"https://www.free-api.com/doc/13\" target='_blank'>接口地址</a><br><b>行驶证识别(可在线调用)</b>:支持对机动车行驶证正页的关键字段识别，包...——<a href=\"https://www.free-api.com/doc/14\" target='_blank'>接口地址</a><br><b>手写文字识别(可在线调用)</b>:能够对手写汉字和手写数字进行识别——<a href=\"https://www.free-api.com/doc/15\" target='_blank'>接口地址</a><br><b>增值税发票识别(可在线调用)</b>:识别并结构化返回增值税发票的各个字段及其...——<a href=\"https://www.free-api.com/doc/16\" target='_blank'>接口地址</a><br><b>营业执照识别(可在线调用)</b>:支持对营业执照关键字段的识别，包括单位名...——<a href=\"https://www.free-api.com/doc/17\" target='_blank'>接口地址</a><br><b>车牌识别(可在线调用)</b>:支持对中国大陆机动车车牌的识别，包括地域...——<a href=\"https://www.free-api.com/doc/18\" target='_blank'>接口地址</a><br><b>票据识别(可在线调用)</b>:支持对增值税发票、火车票、出租车票（支持...——<a href=\"https://www.free-api.com/doc/19\" target='_blank'>接口地址</a><br><b>表格文字识别</b>:自动识别表格线及表格内容，结构化输出表头...——<a href=\"https://www.free-api.com/doc/20\" target='_blank'>接口地址</a><br><b>通用物体和场景识别(可在线调用)</b>:支持超过10万类物体和场景识别，接口返回...——<a href=\"https://www.free-api.com/doc/21\" target='_blank'>接口地址</a><br><b>图像主体检测(可在线调用)</b>:检测图片中关键主体位置，接口支持检测单张...——<a href=\"https://www.free-api.com/doc/22\" target='_blank'>接口地址</a><br><b>品牌logo识别(可在线调用)</b>:实现2万类品牌logo识别，接口返回品牌...——<a href=\"https://www.free-api.com/doc/23\" target='_blank'>接口地址</a><br><b>植物识别(可在线调用)</b>:植物识别支持2万多种通用植物识别、近...——<a href=\"https://www.free-api.com/doc/24\" target='_blank'>接口地址</a><br><b>动物识别(可在线调用)</b>:支持数千种动物识别，接口返回名称——<a href=\"https://www.free-api.com/doc/25\" target='_blank'>接口地址</a><br><b>菜品识别(可在线调用)</b>:识别超过5万个菜品，接口返回菜品的名称、...——<a href=\"https://www.free-api.com/doc/26\" target='_blank'>接口地址</a><br><b>地标识别(可在线调用)</b>:支持识别约5万中外著名地标、景点，接口返...——<a href=\"https://www.free-api.com/doc/27\" target='_blank'>接口地址</a><br><b>车型识别(可在线调用)</b>:识别车辆的具体车型，以小汽车为主，输出图...——<a href=\"https://www.free-api.com/doc/28\" target='_blank'>接口地址</a><br><b>车辆检测</b>:识别图像中所有机动车辆的类型和位置，并对...——<a href=\"https://www.free-api.com/doc/29\" target='_blank'>接口地址</a><br><b>GIF色情图像识别(可在线调用)</b>:人工智能鉴黄技术，智能识别图片和视频中的...——<a href=\"https://www.free-api.com/doc/30\" target='_blank'>接口地址</a><br><b>图像审核(可在线调用)</b>:通过人脸检测、文字识别、色情识别、暴恐识...——<a href=\"https://www.free-api.com/doc/31\" target='_blank'>接口地址</a><br><b>人脸检测与属性分析(可在线调用)</b>:检测图中的人脸，并为人脸标记出边框。检测...——<a href=\"https://www.free-api.com/doc/39\" target='_blank'>接口地址</a><br><b>在线活体检测(可在线调用)</b>:提供在线方式的人脸活体检测能力，在人脸识...——<a href=\"https://www.free-api.com/doc/41\" target='_blank'>接口地址</a><br><b>人体关键点识别(可在线调用)</b>:检测人体并返回人体矩形框位置，精准定位1...——<a href=\"https://www.free-api.com/doc/44\" target='_blank'>接口地址</a><br><b>人流量统计(可在线调用)</b>:统计图像中的人体个数和流动趋势，以头肩为...——<a href=\"https://www.free-api.com/doc/45\" target='_blank'>接口地址</a><br><b>人体检测与属性识别(可在线调用)</b>:检测图像中的所有人体，识别人体的20类属...——<a href=\"https://www.free-api.com/doc/46\" target='_blank'>接口地址</a><br><b>手势识别(可在线调用)</b>:识别图片中的手部位置和手势类型，可识别2...——<a href=\"https://www.free-api.com/doc/47\" target='_blank'>接口地址</a><br><b>人像分割(可在线调用)</b>:识别图像中的人体轮廓，与背景进行分离——<a href=\"https://www.free-api.com/doc/48\" target='_blank'>接口地址</a><br><b>驾驶行为分析(可在线调用)</b>:针对车载场景，识别驾驶员使用手机、抽烟、...——<a href=\"https://www.free-api.com/doc/49\" target='_blank'>接口地址</a><br><b>词法分析(可在线调用)</b>:基于大数据和用户行为的分词、词性标注、命...——<a href=\"https://www.free-api.com/doc/50\" target='_blank'>接口地址</a><br><b>词向量表示(可在线调用)</b>:词向量计算是通过训练的方法，将语言词表中...——<a href=\"https://www.free-api.com/doc/51\" target='_blank'>接口地址</a><br><b>词义相似度(可在线调用)</b>:用于计算两个给定词语的语义相似度，基于自...——<a href=\"https://www.free-api.com/doc/52\" target='_blank'>接口地址</a><br><b>依存句法分析(可在线调用)</b>:利用句子中词与词之间的依存关系来表示词语...——<a href=\"https://www.free-api.com/doc/53\" target='_blank'>接口地址</a><br><b>DNN语言模型(可在线调用)</b>:语言模型是通过计算给定词组成的句子的概率...——<a href=\"https://www.free-api.com/doc/54\" target='_blank'>接口地址</a><br><b>短文本相似度(可在线调用)</b>:短文本相似度计算服务能够提供不同短文本之...——<a href=\"https://www.free-api.com/doc/55\" target='_blank'>接口地址</a><br><b>文本纠错(可在线调用)</b>:文本纠错支持短文本、长文本、语音识别结果...——<a href=\"https://www.free-api.com/doc/56\" target='_blank'>接口地址</a><br><b>情感倾向分析(可在线调用)</b>:针对带有主观描述的中文文本，可自动判断该...——<a href=\"https://www.free-api.com/doc/57\" target='_blank'>接口地址</a><br><b>评论观点抽取(可在线调用)</b>:自动分析评论关注点和评论观点，并输出评论...——<a href=\"https://www.free-api.com/doc/58\" target='_blank'>接口地址</a><br><b>对话情绪识别(可在线调用)</b>:针对一段对话文本，自动识别出当前会话者所...——<a href=\"https://www.free-api.com/doc/59\" target='_blank'>接口地址</a><br><b>文章标签(可在线调用)</b>:文章标签服务对文章的标题和内容进行深度分...——<a href=\"https://www.free-api.com/doc/60\" target='_blank'>接口地址</a><br><b>文章分类(可在线调用)</b>:文章分类服务对文章内容进行深度分析，输出...——<a href=\"https://www.free-api.com/doc/61\" target='_blank'>接口地址</a><br><b>新闻摘要(可在线调用)</b>:基于深度语义分析模型，自动抽取新闻文本中...——<a href=\"https://www.free-api.com/doc/62\" target='_blank'>接口地址</a><br><b>通用翻译(可在线调用)</b>:支持28种语言实时互译，覆盖中、英、日、...——<a href=\"https://www.free-api.com/doc/64\" target='_blank'>接口地址</a><br><b>实体标注(可在线调用)</b>:结合上下文，识别文本中的实体并将其关联到...——<a href=\"https://www.free-api.com/doc/65\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条，各类社会、国内、国际、体育...——<a href=\"https://www.free-api.com/doc/66\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:根据手机号码或手机号码的前7位，查询手机...——<a href=\"https://www.free-api.com/doc/67\" target='_blank'>接口地址</a><br><b>彩票开奖结果查询(可在线调用)</b>:目前支持双色球、大乐透、七乐彩、七星彩、...——<a href=\"https://www.free-api.com/doc/68\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:查询天气情况：温度、湿度、AQI、天气、...——<a href=\"https://www.free-api.com/doc/69\" target='_blank'>接口地址</a><br><b>二维码生成(可在线调用)</b>:按照设定的参数、生成二维码——<a href=\"https://www.free-api.com/doc/70\" target='_blank'>接口地址</a><br><b>汇率(可在线调用)</b>:外汇报价，货币汇率——<a href=\"https://www.free-api.com/doc/71\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:回顾历史的长河，历史是生活的一面镜子——<a href=\"https://www.free-api.com/doc/72\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:新华字典在线查字,最新最全——<a href=\"https://www.free-api.com/doc/74\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:最大最全的新华汉语词典，按拼音查、按部首...——<a href=\"https://www.free-api.com/doc/75\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信精选文章——<a href=\"https://www.free-api.com/doc/76\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:搜集网络幽默、搞笑、内涵段子，不间断更新——<a href=\"https://www.free-api.com/doc/77\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:全国免费的WIFI热点分布——<a href=\"https://www.free-api.com/doc/78\" target='_blank'>接口地址</a><br><b>货币汇率(可在线调用)</b>:支持人民币牌价、外汇汇率查询；数据仅供参...——<a href=\"https://www.free-api.com/doc/79\" target='_blank'>接口地址</a><br><b>手机固话来电显示</b>:查询手机/固话号码归属地，是否诈骗、营销...——<a href=\"https://www.free-api.com/doc/80\" target='_blank'>接口地址</a><br><b>简/繁/火星字体转换(可在线调用)</b>:实现简体、繁体、火星文之间的转换,转换字...——<a href=\"https://www.free-api.com/doc/81\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:提供全国邮政编码大全,为你快速准确查邮编——<a href=\"https://www.free-api.com/doc/82\" target='_blank'>接口地址</a><br><b>老黄历(可在线调用)</b>:提供老黄历查询,黄历每日吉凶宜忌查询——<a href=\"https://www.free-api.com/doc/83\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦,周公解梦大全,周公解梦查询，免...——<a href=\"https://www.free-api.com/doc/84\" target='_blank'>接口地址</a><br><b>净值数据(可在线调用)</b>:根据基金类型及分页参数来获取数据(开放式...——<a href=\"https://www.free-api.com/doc/85\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:十二星座每日、每月、每年运势——<a href=\"https://www.free-api.com/doc/86\" target='_blank'>接口地址</a><br><b>图书电商数据(可在线调用)</b>:于万千之中选择你所爱--好书推荐，值得你...——<a href=\"https://www.free-api.com/doc/87\" target='_blank'>接口地址</a><br><b>身份证查询(可在线调用)</b>:身份证归属地信息查询——<a href=\"https://www.free-api.com/doc/88\" target='_blank'>接口地址</a><br><b>黄金数据(可在线调用)</b>:黄金品种、最新价、开盘价、最高价等信息——<a href=\"https://www.free-api.com/doc/89\" target='_blank'>接口地址</a><br><b>IP地址(可在线调用)</b>:根据查询的IP地址或者域名，查询该IP所...——<a href=\"https://www.free-api.com/doc/90\" target='_blank'>接口地址</a><br><b>笑话大全——文字(可在线调用)</b>:每小时更新。文字笑话大全，信息搜集整理于...——<a href=\"https://www.free-api.com/doc/92\" target='_blank'>接口地址</a><br><b>笑话大全——图片(可在线调用)</b>:每小时更新。图片笑话大全，信息搜集整理于...——<a href=\"https://www.free-api.com/doc/93\" target='_blank'>接口地址</a><br><b>最新新闻</b>:新闻API接口 官方自营 会员接口...——<a href=\"https://www.free-api.com/doc/94\" target='_blank'>接口地址</a><br><b>美图大全</b>:根据几十个种类获取图片列表，每日更新。种...——<a href=\"https://www.free-api.com/doc/95\" target='_blank'>接口地址</a><br><b>手机归属地查询</b>:最全、最新的手机号段数据库。本地找不到的...——<a href=\"https://www.free-api.com/doc/96\" target='_blank'>接口地址</a><br><b>历史上的今天</b>:回顾历史的长河,历史是生活的一面镜子;历...——<a href=\"https://www.free-api.com/doc/97\" target='_blank'>接口地址</a><br><b>来福岛笑话——图片</b>:来福岛爆笑娱乐网创建于2000年，是国内...——<a href=\"https://www.free-api.com/doc/99\" target='_blank'>接口地址</a><br><b>来福岛笑话——文字</b>:来福岛爆笑娱乐网创建于2000年，是国内...——<a href=\"https://www.free-api.com/doc/100\" target='_blank'>接口地址</a><br><b>全国景点查询</b>:全国景点查询接口（来自同程网的合作数据）...——<a href=\"https://www.free-api.com/doc/101\" target='_blank'>接口地址</a><br><b>健康知识</b>:根据养生、用药、两性等频道内容获取健康知...——<a href=\"https://www.free-api.com/doc/102\" target='_blank'>接口地址</a><br><b>猜一猜</b>:随机返回谜语，有2.5万谜语，每日更新。...——<a href=\"https://www.free-api.com/doc/103\" target='_blank'>接口地址</a><br><b>身份证查询</b>:可根据身份证号，查询其签发地、生日、性别...——<a href=\"https://www.free-api.com/doc/104\" target='_blank'>接口地址</a><br><b>爱飞天气插件</b>:爱飞天气是ShowAPI官方天气接口的一...——<a href=\"https://www.free-api.com/doc/105\" target='_blank'>接口地址</a><br><b>PM2.5空气质量指数</b>:本接口每小时更新1次。空气质量指数提供实...——<a href=\"https://www.free-api.com/doc/106\" target='_blank'>接口地址</a><br><b>全球IP地址查询</b>:全球IP地址——<a href=\"https://www.free-api.com/doc/107\" target='_blank'>接口地址</a><br><b>域名查询</b>:域名查询地理位置——<a href=\"https://www.free-api.com/doc/108\" target='_blank'>接口地址</a><br><b>汉字转拼音</b>:将汉字转换为拼音和拼音首字母缩写——<a href=\"https://www.free-api.com/doc/110\" target='_blank'>接口地址</a><br><b>中文分词</b>:中文分词接口。将长段中文切词分开。使用场...——<a href=\"https://www.free-api.com/doc/111\" target='_blank'>接口地址</a><br><b>图片验证码生成</b>:图形|图片验证码生成，支持自定义高宽，文...——<a href=\"https://www.free-api.com/doc/112\" target='_blank'>接口地址</a><br><b>新闻、网页正文抽取</b>:传入一个新网或网页地址，接口将返回此ur...——<a href=\"https://www.free-api.com/doc/114\" target='_blank'>接口地址</a><br><b>实时IP代理查询</b>:代理数量并不是越多越好，可以用才是真正的...——<a href=\"https://www.free-api.com/doc/116\" target='_blank'>接口地址</a><br><b>今日油价</b>:今日油价，可查询全国31个省的油价。每天...——<a href=\"https://www.free-api.com/doc/117\" target='_blank'>接口地址</a><br><b>QQ号码测凶吉</b>:输入qq号码，得到此号码的算命情况，例如...——<a href=\"https://www.free-api.com/doc/118\" target='_blank'>接口地址</a><br><b>地址转换经纬度</b>:根据城市和名称转换为相应的经纬度——<a href=\"https://www.free-api.com/doc/120\" target='_blank'>接口地址</a><br><b>经纬度转换地址</b>:根据经纬度转换成相应地址——<a href=\"https://www.free-api.com/doc/121\" target='_blank'>接口地址</a><br><b>黄历运势</b>:根据输入日期，查看某一天的黄历运势——<a href=\"https://www.free-api.com/doc/122\" target='_blank'>接口地址</a><br><b>十大银行实时汇率</b>:包括工商银行、中国银行、农业银行、交通银...——<a href=\"https://www.free-api.com/doc/123\" target='_blank'>接口地址</a><br><b>汇率转换</b>:1分钟更新1次。当前十大银行，包括工商银...——<a href=\"https://www.free-api.com/doc/124\" target='_blank'>接口地址</a><br><b>添加图片水印</b>:传入底板图及水印图，根据位置参数，接口把...——<a href=\"https://www.free-api.com/doc/125\" target='_blank'>接口地址</a><br><b>图像裁剪</b>:裁剪原图的部份区域——<a href=\"https://www.free-api.com/doc/126\" target='_blank'>接口地址</a><br><b>生成缩略图</b>:根据传入的比率将原图生成缩略图——<a href=\"https://www.free-api.com/doc/127\" target='_blank'>接口地址</a><br><b>星座运势</b>:每天1点、7点、17点更新。包含十二星座...——<a href=\"https://www.free-api.com/doc/128\" target='_blank'>接口地址</a><br><b>PDF文件正文抽取</b>:抽取PDF文件中的文字信息——<a href=\"https://www.free-api.com/doc/129\" target='_blank'>接口地址</a><br><b>网络搜索热词排行</b>:每2小时更新一次。根据分类查询网络最热的...——<a href=\"https://www.free-api.com/doc/131\" target='_blank'>接口地址</a><br><b>二维码识别</b>:根据图片的Base64信息,识别图片中的...——<a href=\"https://www.free-api.com/doc/132\" target='_blank'>接口地址</a><br><b>二维码生成</b>:生成二维码图片 图片存放在showapi...——<a href=\"https://www.free-api.com/doc/133\" target='_blank'>接口地址</a><br><b>中文文本相似度检测</b>:通过计算向量间的夹角（余弦公式），来判断...——<a href=\"https://www.free-api.com/doc/134\" target='_blank'>接口地址</a><br><b>全国火车票查询</b>:数据来源于12306。 包括城市列表\\列...——<a href=\"https://www.free-api.com/doc/135\" target='_blank'>接口地址</a><br><b>药品查询</b>:药品信息——<a href=\"https://www.free-api.com/doc/136\" target='_blank'>接口地址</a><br><b>菜谱大全</b>:本菜谱的信息来源于网络,所以本信息仅用于...——<a href=\"https://www.free-api.com/doc/137\" target='_blank'>接口地址</a><br><b>台风最新坐标轨迹</b>:可查询当前存在威胁的台风列表，每个台风的...——<a href=\"https://www.free-api.com/doc/138\" target='_blank'>接口地址</a><br><b>网页级别查询</b>:google的pr查询——<a href=\"https://www.free-api.com/doc/139\" target='_blank'>接口地址</a><br><b>关键词抽取</b>:根据传入的大段文字，使用TextRank...——<a href=\"https://www.free-api.com/doc/140\" target='_blank'>接口地址</a><br><b>全国行政区划分</b>:最新最全的全国省、市、区县、乡镇的分级查...——<a href=\"https://www.free-api.com/doc/141\" target='_blank'>接口地址</a><br><b>微信小程序查询</b>:搜索查询已经上架的微信小程序。包括基本信...——<a href=\"https://www.free-api.com/doc/142\" target='_blank'>接口地址</a><br><b>生成文章摘要</b>:根据传入的长篇文章，系统使用智能算法抽取...——<a href=\"https://www.free-api.com/doc/143\" target='_blank'>接口地址</a><br><b>藏头诗生成</b>:藏头诗生成器。可输入人名生成藏头、藏尾、...——<a href=\"https://www.free-api.com/doc/144\" target='_blank'>接口地址</a><br><b>国际原油价格查询</b>:WTI和布伦特的油价查询——<a href=\"https://www.free-api.com/doc/145\" target='_blank'>接口地址</a><br><b>水质查询</b>:根据地点和时间查询水质——<a href=\"https://www.free-api.com/doc/146\" target='_blank'>接口地址</a><br><b>条码生成</b>:提供EAN_8、EAN_13、CODE_...——<a href=\"https://www.free-api.com/doc/147\" target='_blank'>接口地址</a><br><b>条码识别</b>:提供EAN_8、EAN_13、CODE_...——<a href=\"https://www.free-api.com/doc/148\" target='_blank'>接口地址</a><br><b>全国站点换乘线路查询</b>:提供全国站点换乘线路查询——<a href=\"https://www.free-api.com/doc/149\" target='_blank'>接口地址</a><br><b>全国公交换乘查询</b>:提供全国公交换乘查询——<a href=\"https://www.free-api.com/doc/150\" target='_blank'>接口地址</a><br><b>汽车品牌查询</b>:收录了近200个品牌/子品牌,上万辆车型...——<a href=\"https://www.free-api.com/doc/151\" target='_blank'>接口地址</a><br><b>周公解梦</b>:根据周公解梦全书提供相关信息——<a href=\"https://www.free-api.com/doc/152\" target='_blank'>接口地址</a><br><b>正能量新闻</b>:社会正能量的新闻资讯，每天更新——<a href=\"https://www.free-api.com/doc/153\" target='_blank'>接口地址</a><br><b>全国酒店查询</b>:该接口所返回的所有图片链接将在12小时内...——<a href=\"https://www.free-api.com/doc/154\" target='_blank'>接口地址</a><br><b>经典语句</b>:根据名人，查询经典名言——<a href=\"https://www.free-api.com/doc/155\" target='_blank'>接口地址</a><br><b>商品比价</b>:搜索商品，根据商品url搜索各大商城的历...——<a href=\"https://www.free-api.com/doc/156\" target='_blank'>接口地址</a><br><b>姓名打分</b>:根据姓名，返回此姓名的运势得分——<a href=\"https://www.free-api.com/doc/157\" target='_blank'>接口地址</a><br><b>公司名测吉凶</b>:根据公司名，返回此公司的运势得分——<a href=\"https://www.free-api.com/doc/158\" target='_blank'>接口地址</a><br><b>车牌号测吉凶</b>:根据车牌名，返回此车牌号的运势得分——<a href=\"https://www.free-api.com/doc/159\" target='_blank'>接口地址</a><br><b>手机号测吉凶</b>:根据手机号码，返回此号码的运势得分——<a href=\"https://www.free-api.com/doc/160\" target='_blank'>接口地址</a><br><b>图书ISBN查询</b>:通过国际图书号查询图书相关信息，目前只支...——<a href=\"https://www.free-api.com/doc/161\" target='_blank'>接口地址</a><br><b>影讯查询</b>:影讯查询——<a href=\"https://www.free-api.com/doc/162\" target='_blank'>接口地址</a><br><b>手机套餐售价</b>:全国手机流量充值，4G流量，当月有效——<a href=\"https://www.free-api.com/doc/163\" target='_blank'>接口地址</a><br><b>紫微斗数</b>:根据出生时间定紫薇斗数命盘，供命理研究，...——<a href=\"https://www.free-api.com/doc/164\" target='_blank'>接口地址</a><br><b>唐诗宋词元曲等诗词查询</b>:根据朝代Id或诗人名称查询诗人信息——<a href=\"https://www.free-api.com/doc/165\" target='_blank'>接口地址</a><br><b>脑筋急转弯</b>:查询常见的脑筋急转弯金句——<a href=\"https://www.free-api.com/doc/166\" target='_blank'>接口地址</a><br><b>虚拟数字币|比特币行情</b>:查询主流虚拟货币实时行情，例如btc(比...——<a href=\"https://www.free-api.com/doc/167\" target='_blank'>接口地址</a><br><b>全国房产信息</b>:搜索最新楼盘开盘信息、最新市场房价信息——<a href=\"https://www.free-api.com/doc/168\" target='_blank'>接口地址</a><br><b>手游排行榜</b>:手游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/169\" target='_blank'>接口地址</a><br><b>网游排行榜</b>:网游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/170\" target='_blank'>接口地址</a><br><b>黄金行情</b>:上金所黄金行情——<a href=\"https://www.free-api.com/doc/171\" target='_blank'>接口地址</a><br><b>电商淘宝平台联想词</b>:提供淘宝联想词查询——<a href=\"https://www.free-api.com/doc/172\" target='_blank'>接口地址</a><br><b>中文反义词</b>:中文反义词——<a href=\"https://www.free-api.com/doc/173\" target='_blank'>接口地址</a><br><b>中文近义词</b>:中文近义词——<a href=\"https://www.free-api.com/doc/174\" target='_blank'>接口地址</a><br><b>歇后语查询</b>:查询歇后语列表——<a href=\"https://www.free-api.com/doc/175\" target='_blank'>接口地址</a><br><b>中国互联网络信息</b>:中国互联网络信息——<a href=\"https://www.free-api.com/doc/176\" target='_blank'>接口地址</a><br><b>实时票房排行</b>:实时票房中国（包括香港）、北美、全球票房...——<a href=\"https://www.free-api.com/doc/177\" target='_blank'>接口地址</a><br><b>爱奇艺热点趋势</b>:爱奇艺视频指数——<a href=\"https://www.free-api.com/doc/178\" target='_blank'>接口地址</a><br><b>空气质量指数(可在线调用)</b>:空气质量指数提供实时空气质量情况，目前支...——<a href=\"https://www.free-api.com/doc/179\" target='_blank'>接口地址</a><br><b>IP地址查询(可在线调用)</b>:提供rest风格的IP地址查询接口，只需...——<a href=\"https://www.free-api.com/doc/180\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:全国天气预报，预报7天天气，以及当天的生...——<a href=\"https://www.free-api.com/doc/181\" target='_blank'>接口地址</a><br><b>人脸识别(可在线调用)</b>:检测图片(Image)中的人脸(Face...——<a href=\"https://www.free-api.com/doc/182\" target='_blank'>接口地址</a><br><b>指纹识别</b>:检测图片(Image)中的指纹(Fing...——<a href=\"https://www.free-api.com/doc/183\" target='_blank'>接口地址</a><br><b>医疗科室(可在线调用)</b>:医药健康接口专用的医疗科室字典项获取——<a href=\"https://www.free-api.com/doc/184\" target='_blank'>接口地址</a><br><b>健康菜谱(可在线调用)</b>:健康菜谱，让人们在宣泄的都市中体验在家常...——<a href=\"https://www.free-api.com/doc/186\" target='_blank'>接口地址</a><br><b>疾病信息(可在线调用)</b>:通过名称取得疾病详情——<a href=\"https://www.free-api.com/doc/187\" target='_blank'>接口地址</a><br><b>药品查询(可在线调用)</b>:通过药品名字直接得到药品说明书、价格、生...——<a href=\"https://www.free-api.com/doc/188\" target='_blank'>接口地址</a><br><b>食疗大全(可在线调用)</b>:通过名称取得食品详情只要是食品都有它...——<a href=\"https://www.free-api.com/doc/189\" target='_blank'>接口地址</a><br><b>手术项目(可在线调用)</b>:通过名称取得手术详情通过名称取得手术...——<a href=\"https://www.free-api.com/doc/190\" target='_blank'>接口地址</a><br><b>药房药店(可在线调用)</b>:通过名称取得药店信息通过名称取得药店...——<a href=\"https://www.free-api.com/doc/191\" target='_blank'>接口地址</a><br><b>病状信息(可在线调用)</b>:通过名称取得病状详情——<a href=\"https://www.free-api.com/doc/192\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信热门精选文章，实时更新——<a href=\"https://www.free-api.com/doc/193\" target='_blank'>接口地址</a><br><b>国内新闻(可在线调用)</b>:国内新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/194\" target='_blank'>接口地址</a><br><b>国际新闻(可在线调用)</b>:国际新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/195\" target='_blank'>接口地址</a><br><b>体育新闻(可在线调用)</b>:体育新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/196\" target='_blank'>接口地址</a><br><b>科技新闻(可在线调用)</b>:科技新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/197\" target='_blank'>接口地址</a><br><b>奇闻轶事(可在线调用)</b>:奇闻轶事数据，实时更新——<a href=\"https://www.free-api.com/doc/198\" target='_blank'>接口地址</a><br><b>旅游新闻(可在线调用)</b>:旅游热点数据，实时更新——<a href=\"https://www.free-api.com/doc/199\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:新华字典数据库，可查字的拼音、读音、偏旁...——<a href=\"https://www.free-api.com/doc/200\" target='_blank'>接口地址</a><br><b>五笔字根(可在线调用)</b>:查询汉字的五笔字根——<a href=\"https://www.free-api.com/doc/201\" target='_blank'>接口地址</a><br><b>简繁体火星文转换(可在线调用)</b>:汉字的简体、繁体、火星文转换——<a href=\"https://www.free-api.com/doc/202\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:成语查询——<a href=\"https://www.free-api.com/doc/203\" target='_blank'>接口地址</a><br><b>歇后语(可在线调用)</b>:歇后语查询，根据关键字搜索歇后语——<a href=\"https://www.free-api.com/doc/204\" target='_blank'>接口地址</a><br><b>唐诗宋词(可在线调用)</b>:根据关键字搜索唐诗宋词——<a href=\"https://www.free-api.com/doc/205\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:以史为镜，可以知兴替。借历史上的成败得失...——<a href=\"https://www.free-api.com/doc/206\" target='_blank'>接口地址</a><br><b>辞海(可在线调用)</b>:查询词语解释——<a href=\"https://www.free-api.com/doc/207\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:通过手机号码查询归属地、运营商、号码类型...——<a href=\"https://www.free-api.com/doc/208\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:海量互联网幽默、内涵段子、趣味图片，不间...——<a href=\"https://www.free-api.com/doc/209\" target='_blank'>接口地址</a><br><b>同义词</b>:通过输入的词语查询对应的同义词——<a href=\"https://www.free-api.com/doc/210\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:查询周边免费WIFI热点；全国免费WIF...——<a href=\"https://www.free-api.com/doc/211\" target='_blank'>接口地址</a><br><b>NBA赛事(可在线调用)</b>:NBA赛事赛程信息，球队赛程赛事查询——<a href=\"https://www.free-api.com/doc/212\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:通过地名查询地区邮编，精确到街道——<a href=\"https://www.free-api.com/doc/213\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦大全——<a href=\"https://www.free-api.com/doc/214\" target='_blank'>接口地址</a><br><b>名人名言(可在线调用)</b>:通过关键字查询名人名言——<a href=\"https://www.free-api.com/doc/215\" target='_blank'>接口地址</a><br><b>今日油价(可在线调用)</b>:可查询全国31个省的油价——<a href=\"https://www.free-api.com/doc/216\" target='_blank'>接口地址</a><br><b>国际白银实时价格</b>:国际交易市场白银实时价格(美元/盎司)，...——<a href=\"https://www.free-api.com/doc/217\" target='_blank'>接口地址</a><br><b>时事新闻检索(可在线调用)</b>:时事新闻，新闻检索等，实时更新——<a href=\"https://www.free-api.com/doc/218\" target='_blank'>接口地址</a><br><b>号码吉凶(可在线调用)</b>:手机号码、QQ号码、车牌号等所有数字类型...——<a href=\"https://www.free-api.com/doc/219\" target='_blank'>接口地址</a><br><b>金额小写转大写(可在线调用)</b>:人民币金额小写转大写——<a href=\"https://www.free-api.com/doc/220\" target='_blank'>接口地址</a><br><b>电影票房(可在线调用)</b>:最新票房榜，网票票房——<a href=\"https://www.free-api.com/doc/221\" target='_blank'>接口地址</a><br><b>全国长途汽车(可在线调用)</b>:全国长途汽车时刻表查询——<a href=\"https://www.free-api.com/doc/222\" target='_blank'>接口地址</a><br><b>足球联赛(可在线调用)</b>:目前支持 英超，西甲，德甲，意甲，法甲，...——<a href=\"https://www.free-api.com/doc/223\" target='_blank'>接口地址</a><br><b>影视影讯(可在线调用)</b>:影视信息播放链接检索，城市影讯检索——<a href=\"https://www.free-api.com/doc/224\" target='_blank'>接口地址</a><br><b>标准电码查询(可在线调用)</b>:提供的标准中文电码查询程序结果——<a href=\"https://www.free-api.com/doc/225\" target='_blank'>接口地址</a><br><b>火车时刻表(可在线调用)</b>:火车时刻表，站到站检索——<a href=\"https://www.free-api.com/doc/226\" target='_blank'>接口地址</a><br><b>姓氏起源(可在线调用)</b>:《百家姓》是我国汉族姓氏总集，载有四百多...——<a href=\"https://www.free-api.com/doc/227\" target='_blank'>接口地址</a><br><b>短链接生成(可在线调用)</b>:查找网提供长的网址链接缩短为新浪短网扯，...——<a href=\"https://www.free-api.com/doc/228\" target='_blank'>接口地址</a><br><b>翻译(可在线调用)</b>:翻译API提供免费开放接口，覆盖中、英、...——<a href=\"https://www.free-api.com/doc/229\" target='_blank'>接口地址</a><br><b>乌云漏洞(可在线调用)</b>:查看乌云最新的安全漏洞——<a href=\"https://www.free-api.com/doc/230\" target='_blank'>接口地址</a><br><b>微信公众号查询(可在线调用)</b>:根据关键字搜索热门微信文章、微信公众号等...——<a href=\"https://www.free-api.com/doc/231\" target='_blank'>接口地址</a><br><b>在线分词(可在线调用)</b>:基于深度学习的中文在线抽词——<a href=\"https://www.free-api.com/doc/232\" target='_blank'>接口地址</a><br><b>MD5破解(可在线调用)</b>:md5密文：16位，32位,sha1(4...——<a href=\"https://www.free-api.com/doc/233\" target='_blank'>接口地址</a><br><b>星座配对(可在线调用)</b>:星座配对测姻缘——<a href=\"https://www.free-api.com/doc/234\" target='_blank'>接口地址</a><br><b>生肖配对(可在线调用)</b>:生肖配对测姻缘——<a href=\"https://www.free-api.com/doc/235\" target='_blank'>接口地址</a><br><b>获取外网IP信息(可在线调用)</b>:取得客户端访问互联网时的外网ip及对应的...——<a href=\"https://www.free-api.com/doc/236\" target='_blank'>接口地址</a><br><b>百度权重(可在线调用)</b>:根据网址查询百度权重——<a href=\"https://www.free-api.com/doc/237\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条——<a href=\"https://www.free-api.com/doc/238\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:黄道十二星座每日、每月、每年运势、不间断...——<a href=\"https://www.free-api.com/doc/239\" target='_blank'>接口地址</a><br>\n\n----------\n\n\n2019.7.3更新接口\n\n----------\n\n\n<b>实时段子(可在线调用)</b>:实时段子,神评版本——<a href=\"https://www.free-api.com/doc/240\">接口地址</a><br><b>音乐搜索(可在线调用)</b>:根据音乐名称返回音乐详情——<a href=\"https://www.free-api.com/doc/241\">接口地址</a><br><b>小说查询(可在线调用)</b>:获取小说的详细信息——<a href=\"https://www.free-api.com/doc/242\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取最近天气情况——<a href=\"https://www.free-api.com/doc/243\">接口地址</a><br><b>音悦tai搜索</b>:音悦Tai-是以高清MV为主的娱乐视频网...——<a href=\"https://www.free-api.com/doc/244\">接口地址</a><br><b>识别身份证文字(可在线调用)</b>:AI人工智能识别身份证图像文字 URL图...——<a href=\"https://www.free-api.com/doc/245\">接口地址</a><br><b>编码解码</b>:常见的编码和解码——<a href=\"https://www.free-api.com/doc/246\">接口地址</a><br><b>网站备案查询</b>:网站备案信息查询接口——<a href=\"https://www.free-api.com/doc/247\">接口地址</a><br><b>身份证信息查询(可在线调用)</b>:身份证信息查询(不支持查询百岁老人)——<a href=\"https://www.free-api.com/doc/248\">接口地址</a><br><b>图片PS</b>:在线图片加文字,返回为字符串,需要处理下——<a href=\"https://www.free-api.com/doc/249\">接口地址</a><br><b>一言</b>:随机返回一句话——<a href=\"https://www.free-api.com/doc/250\">接口地址</a><br><b>短链接生成与还原</b>:短链接生成与还原，包括新浪、腾讯、百度——<a href=\"https://www.free-api.com/doc/251\">接口地址</a><br><b>获取用户大致信息</b>:获取用户信息如网络运营商等等——<a href=\"https://www.free-api.com/doc/254\">接口地址</a><br><b>三合一收款码</b>:包括支付宝，qq，微信——<a href=\"https://www.free-api.com/doc/255\">接口地址</a><br><b>IP查询</b>:根据ip地址获取其所在省市区——<a href=\"https://www.free-api.com/doc/252\">接口地址</a><br><b>IP经纬度查询</b>:根据ip地址和经纬度获取其所在省市区——<a href=\"https://www.free-api.com/doc/253\">接口地址</a>\n\n----------\n\n\n2019.8.7更新接口\n\n----------\n\n\n<b>淘宝ip(可在线调用)</b>:来自淘宝的ip查询，可以根据ip地址查询...——<a href=\"https://www.free-api.com/doc/256\">接口地址</a><br><b>360ip(可在线调用)</b>:来自360的ip查询，可以根据ip地址查...——<a href=\"https://www.free-api.com/doc/257\">接口地址</a><br><b>地理编码(可在线调用)</b>:将详细的结构化地址转换为高德经纬度坐标。...——<a href=\"https://www.free-api.com/doc/258\">接口地址</a><br><b>逆地理编码(可在线调用)</b>:将经纬度转换为详细结构化的地址，且返回附...——<a href=\"https://www.free-api.com/doc/259\">接口地址</a><br><b>步行路径规划</b>:可以规划100KM以内的步行通勤方案，并...——<a href=\"https://www.free-api.com/doc/260\">接口地址</a><br><b>驾车路径规划(可在线调用)</b>:规划以小客车、轿车通勤出行的方案，并且返...——<a href=\"https://www.free-api.com/doc/261\">接口地址</a><br><b>公交路径规划</b>:规划综合各类公共（火车、公交、地铁）交通...——<a href=\"https://www.free-api.com/doc/262\">接口地址</a><br><b>骑行路径规划(可在线调用)</b>:用于规划骑行通勤方案，规划时不会考虑路况...——<a href=\"https://www.free-api.com/doc/263\">接口地址</a><br><b>距离测量</b>:根据经纬度测量距离——<a href=\"https://www.free-api.com/doc/264\">接口地址</a><br><b>行政区域查询(可在线调用)</b>:根据用户输入的搜索条件可以帮助用户快速的...——<a href=\"https://www.free-api.com/doc/265\">接口地址</a><br><b>矩形区域交通态势</b>:能够确定矩形交通态势情况，路况信息2分钟...——<a href=\"https://www.free-api.com/doc/266\">接口地址</a><br><b>圆形区域交通态势</b>:能够确定圆形交通态势情况，路况信息2分钟...——<a href=\"https://www.free-api.com/doc/267\">接口地址</a><br><b>指定线路交通态势</b>:能够确定指定线路交通情况，路况信息2分钟...——<a href=\"https://www.free-api.com/doc/268\">接口地址</a><br><b>输入提示(可在线调用)</b>:提供根据用户输入的关键词查询返回建议列表——<a href=\"https://www.free-api.com/doc/269\">接口地址</a><br><b>天气查询(可在线调用)</b>:查询目标区域当前/未来的天气情况——<a href=\"https://www.free-api.com/doc/270\">接口地址</a><br><b>IP定位(可在线调用)</b>:将IP信息转换为地理位置信息——<a href=\"https://www.free-api.com/doc/271\">接口地址</a><br><b>地点范围查询(可在线调用)</b>:根据经纬度查询查询其地址相关信息——<a href=\"https://www.free-api.com/doc/272\">接口地址</a>\n\n----------\n\n\n2019.9.9更新接口\n\n----------\n\n<b>行政区划区域检索(可在线调用)</b>:开发者可通过该功能，检索某一行政区划内（...——<a href=\"https://www.free-api.com/doc/273\">接口地址</a><br><b>圆形区域检索(可在线调用)</b>:开发者可设置圆心和半径，检索圆形区域内的...——<a href=\"https://www.free-api.com/doc/274\">接口地址</a><br><b>矩形区域检索(可在线调用)</b>:开发者可设置检索区域左下角和右上角坐标，...——<a href=\"https://www.free-api.com/doc/275\">接口地址</a><br><b>地点详情检索(可在线调用)</b>:地点详情检索针对指定POI，检索其相关的...——<a href=\"https://www.free-api.com/doc/276\">接口地址</a><br><b>地点输入提示(可在线调用)</b>:用户可通过该服务，匹配用户输入关键词的地...——<a href=\"https://www.free-api.com/doc/277\">接口地址</a><br><b>地理编码服务(可在线调用)</b>:用户可通过该功能，将结构化地址（省/市/...——<a href=\"https://www.free-api.com/doc/278\">接口地址</a><br><b>全球逆地理编码(可在线调用)</b>:用户可通过该功能，将位置坐标解析成对应的...——<a href=\"https://www.free-api.com/doc/279\">接口地址</a><br><b>公交路线规划(可在线调用)</b>:根据起点和终点检索符合条件的公共交通方案...——<a href=\"https://www.free-api.com/doc/280\">接口地址</a><br><b>骑行路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的骑行路线规划...——<a href=\"https://www.free-api.com/doc/281\">接口地址</a><br><b>驾车路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的驾车路线规划...——<a href=\"https://www.free-api.com/doc/282\">接口地址</a><br><b>批量算路</b>:用户可通过该服务，根据起点和终点坐标计算...——<a href=\"https://www.free-api.com/doc/283\">接口地址</a><br><b>普通IP定位(可在线调用)</b>:用户可以通过该服务，根据IP定位来获取大...——<a href=\"https://www.free-api.com/doc/284\">接口地址</a><br><b>道路实时路况查询(可在线调用)</b>:查询具体道路的实时拥堵评价和拥堵路段、拥...——<a href=\"https://www.free-api.com/doc/285\">接口地址</a><br><b>时间偏移查询(可在线调用)</b>:查询坐标所在地与协调世界时的时间偏移信息...——<a href=\"https://www.free-api.com/doc/286\">接口地址</a><br><b>周边上车点推荐(可在线调用)</b>:用户可通过该功能检索坐标点周围的上车点。...——<a href=\"https://www.free-api.com/doc/287\">接口地址</a><br><b>非百度坐标系转换(可在线调用)</b>:用户可通过该服务，实现 非百度坐标系→百...——<a href=\"https://www.free-api.com/doc/288\">接口地址</a><br><b>快递查询(可在线调用)</b>:可根据快递单号查询大部分主流快递的快递信...——<a href=\"https://www.free-api.com/doc/289\">接口地址</a><br><b>文件转换</b>:文件转换成指定格式，成功则返回成功转换的...——<a href=\"https://www.free-api.com/doc/290\">接口地址</a><br><b>获取文件转换内容</b>:根据文件转换成功所获取的id，查询转换成...——<a href=\"https://www.free-api.com/doc/291\">接口地址</a>\n\n----------\n\n\n2019.10.8更新接口\n\n----------\n\n\n<b>全球IP地理位置(可在线调用)</b>:单个IPv4 / IPv6地址或域名...——<a href=\"https://www.free-api.com/doc/292\">接口地址</a><br><b>域名备案(可在线调用)</b>:根据域名查询域名备案状态——<a href=\"https://www.free-api.com/doc/293\">接口地址</a><br><b>十五天天气预报</b>:采用城市ID来精准查询15天内的天气，接...——<a href=\"https://www.free-api.com/doc/294\">接口地址</a><br><b>农历查询(可在线调用)</b>:根据日期获取农历、黄历、禁忌、星期、生肖...——<a href=\"https://www.free-api.com/doc/295\">接口地址</a><br><b>ICP备案查询(可在线调用)</b>:根据域名查询ICP备案号——<a href=\"https://www.free-api.com/doc/296\">接口地址</a><br><b>三合一收款二维码</b>:将QQ、微信、支付宝收款集合到一起，省去...——<a href=\"https://www.free-api.com/doc/297\">接口地址</a><br><b>二维码生成</b>:将网址直接转换成二维码图片——<a href=\"https://www.free-api.com/doc/298\">接口地址</a><br><b>二维码解码(可在线调用)</b>:将二维码图片进行解码，解析处理——<a href=\"https://www.free-api.com/doc/299\">接口地址</a><br><b>短网址生成(可在线调用)</b>:将长网址进行缩短，支持百度、新浪、腾讯短...——<a href=\"https://www.free-api.com/doc/300\">接口地址</a><br><b>短网址还原(可在线调用)</b>:将缩短的短网址进行还原,支持常见的短网址——<a href=\"https://www.free-api.com/doc/301\">接口地址</a><br><b>网易云音乐随机歌曲(可在线调用)</b>:网易云音乐，随机歌曲输出——<a href=\"https://www.free-api.com/doc/302\">接口地址</a><br><b>获取访客相关信息(可在线调用)</b>:根据访客IP地址，操作系统，浏览器，访问...——<a href=\"https://www.free-api.com/doc/303\">接口地址</a><br><b>随机头像输出(可在线调用)</b>:随机头像输出——<a href=\"https://www.free-api.com/doc/304\">接口地址</a>\n\n----------\n\n\n2019.11.5更新接口\n\n----------\n\n\n<b>文章短篇</b>:根据日期获取一篇文章，有网上的，也有名家...——<a href=\"https://www.free-api.com/doc/305\">接口地址</a><br><b>必应故事</b>:随机获取来自必应的故事，可根据pid获取...——<a href=\"https://www.free-api.com/doc/306\">接口地址</a><br><b>每日一言</b>:获取来自一言、有道或金山词霸的每日一言内...——<a href=\"https://www.free-api.com/doc/307\">接口地址</a><br><b>二维码解析</b>:还原二维码的原始URL，支持支付宝，微信...——<a href=\"https://www.free-api.com/doc/308\">接口地址</a><br><b>生成海报</b>:根据提交的内容格式化生成可分享的精美海报——<a href=\"https://www.free-api.com/doc/309\">接口地址</a><br><b>历史上的今天</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/310\">接口地址</a><br><b>生成二维码</b>:可根据传入的内容，生成对应的二维码，还可...——<a href=\"https://www.free-api.com/doc/311\">接口地址</a><br><b>IP地址详情信息</b>:IP地址详情信息查询——<a href=\"https://www.free-api.com/doc/312\">接口地址</a><br><b>XLS生成</b>:生成XLS——<a href=\"https://www.free-api.com/doc/313\">接口地址</a><br><b>土味情话</b>:和妹妹说的情话，返回一句随机的内容——<a href=\"https://www.free-api.com/doc/314\">接口地址</a><br><b>随机笑话(可在线调用)</b>:随机的笑话——<a href=\"https://www.free-api.com/doc/315\">接口地址</a>\n\n----------\n\n\n2019.12.4更新接口\n\n----------\n\n\n<b>经纬度信息(可在线调用)</b>:获取当前经纬度信息——<a href=\"https://www.free-api.com/doc/316\">接口地址</a><br><b>历史上的今天(可在线调用)</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/317\">接口地址</a><br><b>Bing 壁纸获取(可在线调用)</b>:获取最近的Bing 壁纸——<a href=\"https://www.free-api.com/doc/318\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取今天和未来三天的天气情况，来源于高德——<a href=\"https://www.free-api.com/doc/319\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市名，获取今天和未来三天的天气情况...——<a href=\"https://www.free-api.com/doc/320\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市id，获取未来15天的天气情况，...——<a href=\"https://www.free-api.com/doc/321\">接口地址</a><br><b>手机归属地查询(可在线调用)</b>:根据手机号码查询手机号的归属地信息——<a href=\"https://www.free-api.com/doc/322\">接口地址</a><br><b>手机归属地查询</b>:根据手机号码查询手机号的归属地信息，来源...——<a href=\"https://www.free-api.com/doc/323\">接口地址</a><br><b>IP域名归属地查询(可在线调用)</b>:查询IP或者域名归属地——<a href=\"https://www.free-api.com/doc/324\">接口地址</a><br><b>身份证查询(可在线调用)</b>:根据身份证获取该身份证号码的籍贯，出生年...——<a href=\"https://www.free-api.com/doc/325\">接口地址</a><br><b>淘宝关键字(可在线调用)</b>:淘宝搜索关键字——<a href=\"https://www.free-api.com/doc/326\">接口地址</a><br><b>百度关键字</b>:百度搜索关键字——<a href=\"https://www.free-api.com/doc/327\">接口地址</a><br><b>Bing关键字(可在线调用)</b>:Bing搜索关键字——<a href=\"https://www.free-api.com/doc/328\">接口地址</a><br><b>获取用户设备信息(可在线调用)</b>:通过 user-agent 分析用户设备...——<a href=\"https://www.free-api.com/doc/329\">接口地址</a><br><b>百度音乐搜索(可在线调用)</b>:根据关键字获取音乐的相关信息——<a href=\"https://www.free-api.com/doc/330\">接口地址</a>\n\n----------\n\n努力添加中......\n\n**原文链接：<https://github.com/fangzesheng/free-api>\n欢迎转载，请注明出处！**","slug":"some-common-and-free-apis-for-developing","published":1,"updated":"2019-12-18T15:42:20.840Z","_id":"ck418h06i0000hnd21bdgdch7","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>为了方便广大的开发者，特此统计了网上诸多的免费API，为您收集免费的接口服务，做一个api的搬运工，以后会每月定时更新新的接口。有些接口来自第三方，在第三方注册就可以成为他们的会员，免费使用他们的部分接口。</strong></p>\n<p><b>百度AccessToken</b>:针对HTTP API调用者，百度AIP开…——<a href=\"https://www.free-api.com/doc/1\" target='_blank'>接口地址</a><br><b>语音识别</b>:通过场景识别优化，为车载导航，智能家居和…——<a href=\"https://www.free-api.com/doc/2\" target='_blank'>接口地址</a><br><b>语音合成</b>:将用户输入的文字，转换成流畅自然的语音输…——<a href=\"https://www.free-api.com/doc/4\" target='_blank'>接口地址</a><br><b>出租车票识别(可在线调用)</b>:针对出租车票（现支持北京、上海、深圳）的…——<a href=\"https://www.free-api.com/doc/6\" target='_blank'>接口地址</a><br><b>火车票识别(可在线调用)</b>:支持对大陆火车票的车票号、始发站、目的站…——<a href=\"https://www.free-api.com/doc/7\" target='_blank'>接口地址</a><br><a id=\"more\"></a><b>数字识别(可在线调用)</b>:对图像中的阿拉伯数字进行识别提取，适用于…——<a href=\"https://www.free-api.com/doc/8\" target='_blank'>接口地址</a><br><b>通用文字识别(可在线调用)</b>:支持多场景下的文字检测识别，多项ICDA…——<a href=\"https://www.free-api.com/doc/9\" target='_blank'>接口地址</a><br><b>网络图片文字识别(可在线调用)</b>:能够快速准确识别各种网络图片中的文字，在…——<a href=\"https://www.free-api.com/doc/10\" target='_blank'>接口地址</a><br><b>身份证识别(可在线调用)</b>:支持对二代居民身份证正反面的关键字段识别…——<a href=\"https://www.free-api.com/doc/11\" target='_blank'>接口地址</a><br><b>银行卡识别(可在线调用)</b>:支持对主流银行卡卡号识别，并返回发卡行和…——<a href=\"https://www.free-api.com/doc/12\" target='_blank'>接口地址</a><br><b>驾驶证识别(可在线调用)</b>:支持对机动车驾驶证正页的关键字段识别，包…——<a href=\"https://www.free-api.com/doc/13\" target='_blank'>接口地址</a><br><b>行驶证识别(可在线调用)</b>:支持对机动车行驶证正页的关键字段识别，包…——<a href=\"https://www.free-api.com/doc/14\" target='_blank'>接口地址</a><br><b>手写文字识别(可在线调用)</b>:能够对手写汉字和手写数字进行识别——<a href=\"https://www.free-api.com/doc/15\" target='_blank'>接口地址</a><br><b>增值税发票识别(可在线调用)</b>:识别并结构化返回增值税发票的各个字段及其…——<a href=\"https://www.free-api.com/doc/16\" target='_blank'>接口地址</a><br><b>营业执照识别(可在线调用)</b>:支持对营业执照关键字段的识别，包括单位名…——<a href=\"https://www.free-api.com/doc/17\" target='_blank'>接口地址</a><br><b>车牌识别(可在线调用)</b>:支持对中国大陆机动车车牌的识别，包括地域…——<a href=\"https://www.free-api.com/doc/18\" target='_blank'>接口地址</a><br><b>票据识别(可在线调用)</b>:支持对增值税发票、火车票、出租车票（支持…——<a href=\"https://www.free-api.com/doc/19\" target='_blank'>接口地址</a><br><b>表格文字识别</b>:自动识别表格线及表格内容，结构化输出表头…——<a href=\"https://www.free-api.com/doc/20\" target='_blank'>接口地址</a><br><b>通用物体和场景识别(可在线调用)</b>:支持超过10万类物体和场景识别，接口返回…——<a href=\"https://www.free-api.com/doc/21\" target='_blank'>接口地址</a><br><b>图像主体检测(可在线调用)</b>:检测图片中关键主体位置，接口支持检测单张…——<a href=\"https://www.free-api.com/doc/22\" target='_blank'>接口地址</a><br><b>品牌logo识别(可在线调用)</b>:实现2万类品牌logo识别，接口返回品牌…——<a href=\"https://www.free-api.com/doc/23\" target='_blank'>接口地址</a><br><b>植物识别(可在线调用)</b>:植物识别支持2万多种通用植物识别、近…——<a href=\"https://www.free-api.com/doc/24\" target='_blank'>接口地址</a><br><b>动物识别(可在线调用)</b>:支持数千种动物识别，接口返回名称——<a href=\"https://www.free-api.com/doc/25\" target='_blank'>接口地址</a><br><b>菜品识别(可在线调用)</b>:识别超过5万个菜品，接口返回菜品的名称、…——<a href=\"https://www.free-api.com/doc/26\" target='_blank'>接口地址</a><br><b>地标识别(可在线调用)</b>:支持识别约5万中外著名地标、景点，接口返…——<a href=\"https://www.free-api.com/doc/27\" target='_blank'>接口地址</a><br><b>车型识别(可在线调用)</b>:识别车辆的具体车型，以小汽车为主，输出图…——<a href=\"https://www.free-api.com/doc/28\" target='_blank'>接口地址</a><br><b>车辆检测</b>:识别图像中所有机动车辆的类型和位置，并对…——<a href=\"https://www.free-api.com/doc/29\" target='_blank'>接口地址</a><br><b>GIF色情图像识别(可在线调用)</b>:人工智能鉴黄技术，智能识别图片和视频中的…——<a href=\"https://www.free-api.com/doc/30\" target='_blank'>接口地址</a><br><b>图像审核(可在线调用)</b>:通过人脸检测、文字识别、色情识别、暴恐识…——<a href=\"https://www.free-api.com/doc/31\" target='_blank'>接口地址</a><br><b>人脸检测与属性分析(可在线调用)</b>:检测图中的人脸，并为人脸标记出边框。检测…——<a href=\"https://www.free-api.com/doc/39\" target='_blank'>接口地址</a><br><b>在线活体检测(可在线调用)</b>:提供在线方式的人脸活体检测能力，在人脸识…——<a href=\"https://www.free-api.com/doc/41\" target='_blank'>接口地址</a><br><b>人体关键点识别(可在线调用)</b>:检测人体并返回人体矩形框位置，精准定位1…——<a href=\"https://www.free-api.com/doc/44\" target='_blank'>接口地址</a><br><b>人流量统计(可在线调用)</b>:统计图像中的人体个数和流动趋势，以头肩为…——<a href=\"https://www.free-api.com/doc/45\" target='_blank'>接口地址</a><br><b>人体检测与属性识别(可在线调用)</b>:检测图像中的所有人体，识别人体的20类属…——<a href=\"https://www.free-api.com/doc/46\" target='_blank'>接口地址</a><br><b>手势识别(可在线调用)</b>:识别图片中的手部位置和手势类型，可识别2…——<a href=\"https://www.free-api.com/doc/47\" target='_blank'>接口地址</a><br><b>人像分割(可在线调用)</b>:识别图像中的人体轮廓，与背景进行分离——<a href=\"https://www.free-api.com/doc/48\" target='_blank'>接口地址</a><br><b>驾驶行为分析(可在线调用)</b>:针对车载场景，识别驾驶员使用手机、抽烟、…——<a href=\"https://www.free-api.com/doc/49\" target='_blank'>接口地址</a><br><b>词法分析(可在线调用)</b>:基于大数据和用户行为的分词、词性标注、命…——<a href=\"https://www.free-api.com/doc/50\" target='_blank'>接口地址</a><br><b>词向量表示(可在线调用)</b>:词向量计算是通过训练的方法，将语言词表中…——<a href=\"https://www.free-api.com/doc/51\" target='_blank'>接口地址</a><br><b>词义相似度(可在线调用)</b>:用于计算两个给定词语的语义相似度，基于自…——<a href=\"https://www.free-api.com/doc/52\" target='_blank'>接口地址</a><br><b>依存句法分析(可在线调用)</b>:利用句子中词与词之间的依存关系来表示词语…——<a href=\"https://www.free-api.com/doc/53\" target='_blank'>接口地址</a><br><b>DNN语言模型(可在线调用)</b>:语言模型是通过计算给定词组成的句子的概率…——<a href=\"https://www.free-api.com/doc/54\" target='_blank'>接口地址</a><br><b>短文本相似度(可在线调用)</b>:短文本相似度计算服务能够提供不同短文本之…——<a href=\"https://www.free-api.com/doc/55\" target='_blank'>接口地址</a><br><b>文本纠错(可在线调用)</b>:文本纠错支持短文本、长文本、语音识别结果…——<a href=\"https://www.free-api.com/doc/56\" target='_blank'>接口地址</a><br><b>情感倾向分析(可在线调用)</b>:针对带有主观描述的中文文本，可自动判断该…——<a href=\"https://www.free-api.com/doc/57\" target='_blank'>接口地址</a><br><b>评论观点抽取(可在线调用)</b>:自动分析评论关注点和评论观点，并输出评论…——<a href=\"https://www.free-api.com/doc/58\" target='_blank'>接口地址</a><br><b>对话情绪识别(可在线调用)</b>:针对一段对话文本，自动识别出当前会话者所…——<a href=\"https://www.free-api.com/doc/59\" target='_blank'>接口地址</a><br><b>文章标签(可在线调用)</b>:文章标签服务对文章的标题和内容进行深度分…——<a href=\"https://www.free-api.com/doc/60\" target='_blank'>接口地址</a><br><b>文章分类(可在线调用)</b>:文章分类服务对文章内容进行深度分析，输出…——<a href=\"https://www.free-api.com/doc/61\" target='_blank'>接口地址</a><br><b>新闻摘要(可在线调用)</b>:基于深度语义分析模型，自动抽取新闻文本中…——<a href=\"https://www.free-api.com/doc/62\" target='_blank'>接口地址</a><br><b>通用翻译(可在线调用)</b>:支持28种语言实时互译，覆盖中、英、日、…——<a href=\"https://www.free-api.com/doc/64\" target='_blank'>接口地址</a><br><b>实体标注(可在线调用)</b>:结合上下文，识别文本中的实体并将其关联到…——<a href=\"https://www.free-api.com/doc/65\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条，各类社会、国内、国际、体育…——<a href=\"https://www.free-api.com/doc/66\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:根据手机号码或手机号码的前7位，查询手机…——<a href=\"https://www.free-api.com/doc/67\" target='_blank'>接口地址</a><br><b>彩票开奖结果查询(可在线调用)</b>:目前支持双色球、大乐透、七乐彩、七星彩、…——<a href=\"https://www.free-api.com/doc/68\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:查询天气情况：温度、湿度、AQI、天气、…——<a href=\"https://www.free-api.com/doc/69\" target='_blank'>接口地址</a><br><b>二维码生成(可在线调用)</b>:按照设定的参数、生成二维码——<a href=\"https://www.free-api.com/doc/70\" target='_blank'>接口地址</a><br><b>汇率(可在线调用)</b>:外汇报价，货币汇率——<a href=\"https://www.free-api.com/doc/71\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:回顾历史的长河，历史是生活的一面镜子——<a href=\"https://www.free-api.com/doc/72\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:新华字典在线查字,最新最全——<a href=\"https://www.free-api.com/doc/74\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:最大最全的新华汉语词典，按拼音查、按部首…——<a href=\"https://www.free-api.com/doc/75\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信精选文章——<a href=\"https://www.free-api.com/doc/76\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:搜集网络幽默、搞笑、内涵段子，不间断更新——<a href=\"https://www.free-api.com/doc/77\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:全国免费的WIFI热点分布——<a href=\"https://www.free-api.com/doc/78\" target='_blank'>接口地址</a><br><b>货币汇率(可在线调用)</b>:支持人民币牌价、外汇汇率查询；数据仅供参…——<a href=\"https://www.free-api.com/doc/79\" target='_blank'>接口地址</a><br><b>手机固话来电显示</b>:查询手机/固话号码归属地，是否诈骗、营销…——<a href=\"https://www.free-api.com/doc/80\" target='_blank'>接口地址</a><br><b>简/繁/火星字体转换(可在线调用)</b>:实现简体、繁体、火星文之间的转换,转换字…——<a href=\"https://www.free-api.com/doc/81\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:提供全国邮政编码大全,为你快速准确查邮编——<a href=\"https://www.free-api.com/doc/82\" target='_blank'>接口地址</a><br><b>老黄历(可在线调用)</b>:提供老黄历查询,黄历每日吉凶宜忌查询——<a href=\"https://www.free-api.com/doc/83\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦,周公解梦大全,周公解梦查询，免…——<a href=\"https://www.free-api.com/doc/84\" target='_blank'>接口地址</a><br><b>净值数据(可在线调用)</b>:根据基金类型及分页参数来获取数据(开放式…——<a href=\"https://www.free-api.com/doc/85\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:十二星座每日、每月、每年运势——<a href=\"https://www.free-api.com/doc/86\" target='_blank'>接口地址</a><br><b>图书电商数据(可在线调用)</b>:于万千之中选择你所爱–好书推荐，值得你…——<a href=\"https://www.free-api.com/doc/87\" target='_blank'>接口地址</a><br><b>身份证查询(可在线调用)</b>:身份证归属地信息查询——<a href=\"https://www.free-api.com/doc/88\" target='_blank'>接口地址</a><br><b>黄金数据(可在线调用)</b>:黄金品种、最新价、开盘价、最高价等信息——<a href=\"https://www.free-api.com/doc/89\" target='_blank'>接口地址</a><br><b>IP地址(可在线调用)</b>:根据查询的IP地址或者域名，查询该IP所…——<a href=\"https://www.free-api.com/doc/90\" target='_blank'>接口地址</a><br><b>笑话大全——文字(可在线调用)</b>:每小时更新。文字笑话大全，信息搜集整理于…——<a href=\"https://www.free-api.com/doc/92\" target='_blank'>接口地址</a><br><b>笑话大全——图片(可在线调用)</b>:每小时更新。图片笑话大全，信息搜集整理于…——<a href=\"https://www.free-api.com/doc/93\" target='_blank'>接口地址</a><br><b>最新新闻</b>:新闻API接口 官方自营 会员接口…——<a href=\"https://www.free-api.com/doc/94\" target='_blank'>接口地址</a><br><b>美图大全</b>:根据几十个种类获取图片列表，每日更新。种…——<a href=\"https://www.free-api.com/doc/95\" target='_blank'>接口地址</a><br><b>手机归属地查询</b>:最全、最新的手机号段数据库。本地找不到的…——<a href=\"https://www.free-api.com/doc/96\" target='_blank'>接口地址</a><br><b>历史上的今天</b>:回顾历史的长河,历史是生活的一面镜子;历…——<a href=\"https://www.free-api.com/doc/97\" target='_blank'>接口地址</a><br><b>来福岛笑话——图片</b>:来福岛爆笑娱乐网创建于2000年，是国内…——<a href=\"https://www.free-api.com/doc/99\" target='_blank'>接口地址</a><br><b>来福岛笑话——文字</b>:来福岛爆笑娱乐网创建于2000年，是国内…——<a href=\"https://www.free-api.com/doc/100\" target='_blank'>接口地址</a><br><b>全国景点查询</b>:全国景点查询接口（来自同程网的合作数据）…——<a href=\"https://www.free-api.com/doc/101\" target='_blank'>接口地址</a><br><b>健康知识</b>:根据养生、用药、两性等频道内容获取健康知…——<a href=\"https://www.free-api.com/doc/102\" target='_blank'>接口地址</a><br><b>猜一猜</b>:随机返回谜语，有2.5万谜语，每日更新。…——<a href=\"https://www.free-api.com/doc/103\" target='_blank'>接口地址</a><br><b>身份证查询</b>:可根据身份证号，查询其签发地、生日、性别…——<a href=\"https://www.free-api.com/doc/104\" target='_blank'>接口地址</a><br><b>爱飞天气插件</b>:爱飞天气是ShowAPI官方天气接口的一…——<a href=\"https://www.free-api.com/doc/105\" target='_blank'>接口地址</a><br><b>PM2.5空气质量指数</b>:本接口每小时更新1次。空气质量指数提供实…——<a href=\"https://www.free-api.com/doc/106\" target='_blank'>接口地址</a><br><b>全球IP地址查询</b>:全球IP地址——<a href=\"https://www.free-api.com/doc/107\" target='_blank'>接口地址</a><br><b>域名查询</b>:域名查询地理位置——<a href=\"https://www.free-api.com/doc/108\" target='_blank'>接口地址</a><br><b>汉字转拼音</b>:将汉字转换为拼音和拼音首字母缩写——<a href=\"https://www.free-api.com/doc/110\" target='_blank'>接口地址</a><br><b>中文分词</b>:中文分词接口。将长段中文切词分开。使用场…——<a href=\"https://www.free-api.com/doc/111\" target='_blank'>接口地址</a><br><b>图片验证码生成</b>:图形|图片验证码生成，支持自定义高宽，文…——<a href=\"https://www.free-api.com/doc/112\" target='_blank'>接口地址</a><br><b>新闻、网页正文抽取</b>:传入一个新网或网页地址，接口将返回此ur…——<a href=\"https://www.free-api.com/doc/114\" target='_blank'>接口地址</a><br><b>实时IP代理查询</b>:代理数量并不是越多越好，可以用才是真正的…——<a href=\"https://www.free-api.com/doc/116\" target='_blank'>接口地址</a><br><b>今日油价</b>:今日油价，可查询全国31个省的油价。每天…——<a href=\"https://www.free-api.com/doc/117\" target='_blank'>接口地址</a><br><b>QQ号码测凶吉</b>:输入qq号码，得到此号码的算命情况，例如…——<a href=\"https://www.free-api.com/doc/118\" target='_blank'>接口地址</a><br><b>地址转换经纬度</b>:根据城市和名称转换为相应的经纬度——<a href=\"https://www.free-api.com/doc/120\" target='_blank'>接口地址</a><br><b>经纬度转换地址</b>:根据经纬度转换成相应地址——<a href=\"https://www.free-api.com/doc/121\" target='_blank'>接口地址</a><br><b>黄历运势</b>:根据输入日期，查看某一天的黄历运势——<a href=\"https://www.free-api.com/doc/122\" target='_blank'>接口地址</a><br><b>十大银行实时汇率</b>:包括工商银行、中国银行、农业银行、交通银…——<a href=\"https://www.free-api.com/doc/123\" target='_blank'>接口地址</a><br><b>汇率转换</b>:1分钟更新1次。当前十大银行，包括工商银…——<a href=\"https://www.free-api.com/doc/124\" target='_blank'>接口地址</a><br><b>添加图片水印</b>:传入底板图及水印图，根据位置参数，接口把…——<a href=\"https://www.free-api.com/doc/125\" target='_blank'>接口地址</a><br><b>图像裁剪</b>:裁剪原图的部份区域——<a href=\"https://www.free-api.com/doc/126\" target='_blank'>接口地址</a><br><b>生成缩略图</b>:根据传入的比率将原图生成缩略图——<a href=\"https://www.free-api.com/doc/127\" target='_blank'>接口地址</a><br><b>星座运势</b>:每天1点、7点、17点更新。包含十二星座…——<a href=\"https://www.free-api.com/doc/128\" target='_blank'>接口地址</a><br><b>PDF文件正文抽取</b>:抽取PDF文件中的文字信息——<a href=\"https://www.free-api.com/doc/129\" target='_blank'>接口地址</a><br><b>网络搜索热词排行</b>:每2小时更新一次。根据分类查询网络最热的…——<a href=\"https://www.free-api.com/doc/131\" target='_blank'>接口地址</a><br><b>二维码识别</b>:根据图片的Base64信息,识别图片中的…——<a href=\"https://www.free-api.com/doc/132\" target='_blank'>接口地址</a><br><b>二维码生成</b>:生成二维码图片 图片存放在showapi…——<a href=\"https://www.free-api.com/doc/133\" target='_blank'>接口地址</a><br><b>中文文本相似度检测</b>:通过计算向量间的夹角（余弦公式），来判断…——<a href=\"https://www.free-api.com/doc/134\" target='_blank'>接口地址</a><br><b>全国火车票查询</b>:数据来源于12306。 包括城市列表\\列…——<a href=\"https://www.free-api.com/doc/135\" target='_blank'>接口地址</a><br><b>药品查询</b>:药品信息——<a href=\"https://www.free-api.com/doc/136\" target='_blank'>接口地址</a><br><b>菜谱大全</b>:本菜谱的信息来源于网络,所以本信息仅用于…——<a href=\"https://www.free-api.com/doc/137\" target='_blank'>接口地址</a><br><b>台风最新坐标轨迹</b>:可查询当前存在威胁的台风列表，每个台风的…——<a href=\"https://www.free-api.com/doc/138\" target='_blank'>接口地址</a><br><b>网页级别查询</b>:google的pr查询——<a href=\"https://www.free-api.com/doc/139\" target='_blank'>接口地址</a><br><b>关键词抽取</b>:根据传入的大段文字，使用TextRank…——<a href=\"https://www.free-api.com/doc/140\" target='_blank'>接口地址</a><br><b>全国行政区划分</b>:最新最全的全国省、市、区县、乡镇的分级查…——<a href=\"https://www.free-api.com/doc/141\" target='_blank'>接口地址</a><br><b>微信小程序查询</b>:搜索查询已经上架的微信小程序。包括基本信…——<a href=\"https://www.free-api.com/doc/142\" target='_blank'>接口地址</a><br><b>生成文章摘要</b>:根据传入的长篇文章，系统使用智能算法抽取…——<a href=\"https://www.free-api.com/doc/143\" target='_blank'>接口地址</a><br><b>藏头诗生成</b>:藏头诗生成器。可输入人名生成藏头、藏尾、…——<a href=\"https://www.free-api.com/doc/144\" target='_blank'>接口地址</a><br><b>国际原油价格查询</b>:WTI和布伦特的油价查询——<a href=\"https://www.free-api.com/doc/145\" target='_blank'>接口地址</a><br><b>水质查询</b>:根据地点和时间查询水质——<a href=\"https://www.free-api.com/doc/146\" target='_blank'>接口地址</a><br><b>条码生成</b>:提供EAN_8、EAN_13、CODE_…——<a href=\"https://www.free-api.com/doc/147\" target='_blank'>接口地址</a><br><b>条码识别</b>:提供EAN_8、EAN_13、CODE_…——<a href=\"https://www.free-api.com/doc/148\" target='_blank'>接口地址</a><br><b>全国站点换乘线路查询</b>:提供全国站点换乘线路查询——<a href=\"https://www.free-api.com/doc/149\" target='_blank'>接口地址</a><br><b>全国公交换乘查询</b>:提供全国公交换乘查询——<a href=\"https://www.free-api.com/doc/150\" target='_blank'>接口地址</a><br><b>汽车品牌查询</b>:收录了近200个品牌/子品牌,上万辆车型…——<a href=\"https://www.free-api.com/doc/151\" target='_blank'>接口地址</a><br><b>周公解梦</b>:根据周公解梦全书提供相关信息——<a href=\"https://www.free-api.com/doc/152\" target='_blank'>接口地址</a><br><b>正能量新闻</b>:社会正能量的新闻资讯，每天更新——<a href=\"https://www.free-api.com/doc/153\" target='_blank'>接口地址</a><br><b>全国酒店查询</b>:该接口所返回的所有图片链接将在12小时内…——<a href=\"https://www.free-api.com/doc/154\" target='_blank'>接口地址</a><br><b>经典语句</b>:根据名人，查询经典名言——<a href=\"https://www.free-api.com/doc/155\" target='_blank'>接口地址</a><br><b>商品比价</b>:搜索商品，根据商品url搜索各大商城的历…——<a href=\"https://www.free-api.com/doc/156\" target='_blank'>接口地址</a><br><b>姓名打分</b>:根据姓名，返回此姓名的运势得分——<a href=\"https://www.free-api.com/doc/157\" target='_blank'>接口地址</a><br><b>公司名测吉凶</b>:根据公司名，返回此公司的运势得分——<a href=\"https://www.free-api.com/doc/158\" target='_blank'>接口地址</a><br><b>车牌号测吉凶</b>:根据车牌名，返回此车牌号的运势得分——<a href=\"https://www.free-api.com/doc/159\" target='_blank'>接口地址</a><br><b>手机号测吉凶</b>:根据手机号码，返回此号码的运势得分——<a href=\"https://www.free-api.com/doc/160\" target='_blank'>接口地址</a><br><b>图书ISBN查询</b>:通过国际图书号查询图书相关信息，目前只支…——<a href=\"https://www.free-api.com/doc/161\" target='_blank'>接口地址</a><br><b>影讯查询</b>:影讯查询——<a href=\"https://www.free-api.com/doc/162\" target='_blank'>接口地址</a><br><b>手机套餐售价</b>:全国手机流量充值，4G流量，当月有效——<a href=\"https://www.free-api.com/doc/163\" target='_blank'>接口地址</a><br><b>紫微斗数</b>:根据出生时间定紫薇斗数命盘，供命理研究，…——<a href=\"https://www.free-api.com/doc/164\" target='_blank'>接口地址</a><br><b>唐诗宋词元曲等诗词查询</b>:根据朝代Id或诗人名称查询诗人信息——<a href=\"https://www.free-api.com/doc/165\" target='_blank'>接口地址</a><br><b>脑筋急转弯</b>:查询常见的脑筋急转弯金句——<a href=\"https://www.free-api.com/doc/166\" target='_blank'>接口地址</a><br><b>虚拟数字币|比特币行情</b>:查询主流虚拟货币实时行情，例如btc(比…——<a href=\"https://www.free-api.com/doc/167\" target='_blank'>接口地址</a><br><b>全国房产信息</b>:搜索最新楼盘开盘信息、最新市场房价信息——<a href=\"https://www.free-api.com/doc/168\" target='_blank'>接口地址</a><br><b>手游排行榜</b>:手游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/169\" target='_blank'>接口地址</a><br><b>网游排行榜</b>:网游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/170\" target='_blank'>接口地址</a><br><b>黄金行情</b>:上金所黄金行情——<a href=\"https://www.free-api.com/doc/171\" target='_blank'>接口地址</a><br><b>电商淘宝平台联想词</b>:提供淘宝联想词查询——<a href=\"https://www.free-api.com/doc/172\" target='_blank'>接口地址</a><br><b>中文反义词</b>:中文反义词——<a href=\"https://www.free-api.com/doc/173\" target='_blank'>接口地址</a><br><b>中文近义词</b>:中文近义词——<a href=\"https://www.free-api.com/doc/174\" target='_blank'>接口地址</a><br><b>歇后语查询</b>:查询歇后语列表——<a href=\"https://www.free-api.com/doc/175\" target='_blank'>接口地址</a><br><b>中国互联网络信息</b>:中国互联网络信息——<a href=\"https://www.free-api.com/doc/176\" target='_blank'>接口地址</a><br><b>实时票房排行</b>:实时票房中国（包括香港）、北美、全球票房…——<a href=\"https://www.free-api.com/doc/177\" target='_blank'>接口地址</a><br><b>爱奇艺热点趋势</b>:爱奇艺视频指数——<a href=\"https://www.free-api.com/doc/178\" target='_blank'>接口地址</a><br><b>空气质量指数(可在线调用)</b>:空气质量指数提供实时空气质量情况，目前支…——<a href=\"https://www.free-api.com/doc/179\" target='_blank'>接口地址</a><br><b>IP地址查询(可在线调用)</b>:提供rest风格的IP地址查询接口，只需…——<a href=\"https://www.free-api.com/doc/180\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:全国天气预报，预报7天天气，以及当天的生…——<a href=\"https://www.free-api.com/doc/181\" target='_blank'>接口地址</a><br><b>人脸识别(可在线调用)</b>:检测图片(Image)中的人脸(Face…——<a href=\"https://www.free-api.com/doc/182\" target='_blank'>接口地址</a><br><b>指纹识别</b>:检测图片(Image)中的指纹(Fing…——<a href=\"https://www.free-api.com/doc/183\" target='_blank'>接口地址</a><br><b>医疗科室(可在线调用)</b>:医药健康接口专用的医疗科室字典项获取——<a href=\"https://www.free-api.com/doc/184\" target='_blank'>接口地址</a><br><b>健康菜谱(可在线调用)</b>:健康菜谱，让人们在宣泄的都市中体验在家常…——<a href=\"https://www.free-api.com/doc/186\" target='_blank'>接口地址</a><br><b>疾病信息(可在线调用)</b>:通过名称取得疾病详情——<a href=\"https://www.free-api.com/doc/187\" target='_blank'>接口地址</a><br><b>药品查询(可在线调用)</b>:通过药品名字直接得到药品说明书、价格、生…——<a href=\"https://www.free-api.com/doc/188\" target='_blank'>接口地址</a><br><b>食疗大全(可在线调用)</b>:通过名称取得食品详情只要是食品都有它…——<a href=\"https://www.free-api.com/doc/189\" target='_blank'>接口地址</a><br><b>手术项目(可在线调用)</b>:通过名称取得手术详情通过名称取得手术…——<a href=\"https://www.free-api.com/doc/190\" target='_blank'>接口地址</a><br><b>药房药店(可在线调用)</b>:通过名称取得药店信息通过名称取得药店…——<a href=\"https://www.free-api.com/doc/191\" target='_blank'>接口地址</a><br><b>病状信息(可在线调用)</b>:通过名称取得病状详情——<a href=\"https://www.free-api.com/doc/192\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信热门精选文章，实时更新——<a href=\"https://www.free-api.com/doc/193\" target='_blank'>接口地址</a><br><b>国内新闻(可在线调用)</b>:国内新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/194\" target='_blank'>接口地址</a><br><b>国际新闻(可在线调用)</b>:国际新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/195\" target='_blank'>接口地址</a><br><b>体育新闻(可在线调用)</b>:体育新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/196\" target='_blank'>接口地址</a><br><b>科技新闻(可在线调用)</b>:科技新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/197\" target='_blank'>接口地址</a><br><b>奇闻轶事(可在线调用)</b>:奇闻轶事数据，实时更新——<a href=\"https://www.free-api.com/doc/198\" target='_blank'>接口地址</a><br><b>旅游新闻(可在线调用)</b>:旅游热点数据，实时更新——<a href=\"https://www.free-api.com/doc/199\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:新华字典数据库，可查字的拼音、读音、偏旁…——<a href=\"https://www.free-api.com/doc/200\" target='_blank'>接口地址</a><br><b>五笔字根(可在线调用)</b>:查询汉字的五笔字根——<a href=\"https://www.free-api.com/doc/201\" target='_blank'>接口地址</a><br><b>简繁体火星文转换(可在线调用)</b>:汉字的简体、繁体、火星文转换——<a href=\"https://www.free-api.com/doc/202\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:成语查询——<a href=\"https://www.free-api.com/doc/203\" target='_blank'>接口地址</a><br><b>歇后语(可在线调用)</b>:歇后语查询，根据关键字搜索歇后语——<a href=\"https://www.free-api.com/doc/204\" target='_blank'>接口地址</a><br><b>唐诗宋词(可在线调用)</b>:根据关键字搜索唐诗宋词——<a href=\"https://www.free-api.com/doc/205\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:以史为镜，可以知兴替。借历史上的成败得失…——<a href=\"https://www.free-api.com/doc/206\" target='_blank'>接口地址</a><br><b>辞海(可在线调用)</b>:查询词语解释——<a href=\"https://www.free-api.com/doc/207\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:通过手机号码查询归属地、运营商、号码类型…——<a href=\"https://www.free-api.com/doc/208\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:海量互联网幽默、内涵段子、趣味图片，不间…——<a href=\"https://www.free-api.com/doc/209\" target='_blank'>接口地址</a><br><b>同义词</b>:通过输入的词语查询对应的同义词——<a href=\"https://www.free-api.com/doc/210\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:查询周边免费WIFI热点；全国免费WIF…——<a href=\"https://www.free-api.com/doc/211\" target='_blank'>接口地址</a><br><b>NBA赛事(可在线调用)</b>:NBA赛事赛程信息，球队赛程赛事查询——<a href=\"https://www.free-api.com/doc/212\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:通过地名查询地区邮编，精确到街道——<a href=\"https://www.free-api.com/doc/213\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦大全——<a href=\"https://www.free-api.com/doc/214\" target='_blank'>接口地址</a><br><b>名人名言(可在线调用)</b>:通过关键字查询名人名言——<a href=\"https://www.free-api.com/doc/215\" target='_blank'>接口地址</a><br><b>今日油价(可在线调用)</b>:可查询全国31个省的油价——<a href=\"https://www.free-api.com/doc/216\" target='_blank'>接口地址</a><br><b>国际白银实时价格</b>:国际交易市场白银实时价格(美元/盎司)，…——<a href=\"https://www.free-api.com/doc/217\" target='_blank'>接口地址</a><br><b>时事新闻检索(可在线调用)</b>:时事新闻，新闻检索等，实时更新——<a href=\"https://www.free-api.com/doc/218\" target='_blank'>接口地址</a><br><b>号码吉凶(可在线调用)</b>:手机号码、QQ号码、车牌号等所有数字类型…——<a href=\"https://www.free-api.com/doc/219\" target='_blank'>接口地址</a><br><b>金额小写转大写(可在线调用)</b>:人民币金额小写转大写——<a href=\"https://www.free-api.com/doc/220\" target='_blank'>接口地址</a><br><b>电影票房(可在线调用)</b>:最新票房榜，网票票房——<a href=\"https://www.free-api.com/doc/221\" target='_blank'>接口地址</a><br><b>全国长途汽车(可在线调用)</b>:全国长途汽车时刻表查询——<a href=\"https://www.free-api.com/doc/222\" target='_blank'>接口地址</a><br><b>足球联赛(可在线调用)</b>:目前支持 英超，西甲，德甲，意甲，法甲，…——<a href=\"https://www.free-api.com/doc/223\" target='_blank'>接口地址</a><br><b>影视影讯(可在线调用)</b>:影视信息播放链接检索，城市影讯检索——<a href=\"https://www.free-api.com/doc/224\" target='_blank'>接口地址</a><br><b>标准电码查询(可在线调用)</b>:提供的标准中文电码查询程序结果——<a href=\"https://www.free-api.com/doc/225\" target='_blank'>接口地址</a><br><b>火车时刻表(可在线调用)</b>:火车时刻表，站到站检索——<a href=\"https://www.free-api.com/doc/226\" target='_blank'>接口地址</a><br><b>姓氏起源(可在线调用)</b>:《百家姓》是我国汉族姓氏总集，载有四百多…——<a href=\"https://www.free-api.com/doc/227\" target='_blank'>接口地址</a><br><b>短链接生成(可在线调用)</b>:查找网提供长的网址链接缩短为新浪短网扯，…——<a href=\"https://www.free-api.com/doc/228\" target='_blank'>接口地址</a><br><b>翻译(可在线调用)</b>:翻译API提供免费开放接口，覆盖中、英、…——<a href=\"https://www.free-api.com/doc/229\" target='_blank'>接口地址</a><br><b>乌云漏洞(可在线调用)</b>:查看乌云最新的安全漏洞——<a href=\"https://www.free-api.com/doc/230\" target='_blank'>接口地址</a><br><b>微信公众号查询(可在线调用)</b>:根据关键字搜索热门微信文章、微信公众号等…——<a href=\"https://www.free-api.com/doc/231\" target='_blank'>接口地址</a><br><b>在线分词(可在线调用)</b>:基于深度学习的中文在线抽词——<a href=\"https://www.free-api.com/doc/232\" target='_blank'>接口地址</a><br><b>MD5破解(可在线调用)</b>:md5密文：16位，32位,sha1(4…——<a href=\"https://www.free-api.com/doc/233\" target='_blank'>接口地址</a><br><b>星座配对(可在线调用)</b>:星座配对测姻缘——<a href=\"https://www.free-api.com/doc/234\" target='_blank'>接口地址</a><br><b>生肖配对(可在线调用)</b>:生肖配对测姻缘——<a href=\"https://www.free-api.com/doc/235\" target='_blank'>接口地址</a><br><b>获取外网IP信息(可在线调用)</b>:取得客户端访问互联网时的外网ip及对应的…——<a href=\"https://www.free-api.com/doc/236\" target='_blank'>接口地址</a><br><b>百度权重(可在线调用)</b>:根据网址查询百度权重——<a href=\"https://www.free-api.com/doc/237\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条——<a href=\"https://www.free-api.com/doc/238\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:黄道十二星座每日、每月、每年运势、不间断…——<a href=\"https://www.free-api.com/doc/239\" target='_blank'>接口地址</a><br></p>\n<hr>\n<p>2019.7.3更新接口</p>\n<hr>\n<p><b>实时段子(可在线调用)</b>:实时段子,神评版本——<a href=\"https://www.free-api.com/doc/240\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>音乐搜索(可在线调用)</b>:根据音乐名称返回音乐详情——<a href=\"https://www.free-api.com/doc/241\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>小说查询(可在线调用)</b>:获取小说的详细信息——<a href=\"https://www.free-api.com/doc/242\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取最近天气情况——<a href=\"https://www.free-api.com/doc/243\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>音悦tai搜索</b>:音悦Tai-是以高清MV为主的娱乐视频网…——<a href=\"https://www.free-api.com/doc/244\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>识别身份证文字(可在线调用)</b>:AI人工智能识别身份证图像文字 URL图…——<a href=\"https://www.free-api.com/doc/245\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>编码解码</b>:常见的编码和解码——<a href=\"https://www.free-api.com/doc/246\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>网站备案查询</b>:网站备案信息查询接口——<a href=\"https://www.free-api.com/doc/247\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>身份证信息查询(可在线调用)</b>:身份证信息查询(不支持查询百岁老人)——<a href=\"https://www.free-api.com/doc/248\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>图片PS</b>:在线图片加文字,返回为字符串,需要处理下——<a href=\"https://www.free-api.com/doc/249\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>一言</b>:随机返回一句话——<a href=\"https://www.free-api.com/doc/250\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>短链接生成与还原</b>:短链接生成与还原，包括新浪、腾讯、百度——<a href=\"https://www.free-api.com/doc/251\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取用户大致信息</b>:获取用户信息如网络运营商等等——<a href=\"https://www.free-api.com/doc/254\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>三合一收款码</b>:包括支付宝，qq，微信——<a href=\"https://www.free-api.com/doc/255\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP查询</b>:根据ip地址获取其所在省市区——<a href=\"https://www.free-api.com/doc/252\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP经纬度查询</b>:根据ip地址和经纬度获取其所在省市区——<a href=\"https://www.free-api.com/doc/253\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.8.7更新接口</p>\n<hr>\n<p><b>淘宝ip(可在线调用)</b>:来自淘宝的ip查询，可以根据ip地址查询…——<a href=\"https://www.free-api.com/doc/256\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>360ip(可在线调用)</b>:来自360的ip查询，可以根据ip地址查…——<a href=\"https://www.free-api.com/doc/257\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地理编码(可在线调用)</b>:将详细的结构化地址转换为高德经纬度坐标。…——<a href=\"https://www.free-api.com/doc/258\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>逆地理编码(可在线调用)</b>:将经纬度转换为详细结构化的地址，且返回附…——<a href=\"https://www.free-api.com/doc/259\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>步行路径规划</b>:可以规划100KM以内的步行通勤方案，并…——<a href=\"https://www.free-api.com/doc/260\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>驾车路径规划(可在线调用)</b>:规划以小客车、轿车通勤出行的方案，并且返…——<a href=\"https://www.free-api.com/doc/261\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>公交路径规划</b>:规划综合各类公共（火车、公交、地铁）交通…——<a href=\"https://www.free-api.com/doc/262\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>骑行路径规划(可在线调用)</b>:用于规划骑行通勤方案，规划时不会考虑路况…——<a href=\"https://www.free-api.com/doc/263\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>距离测量</b>:根据经纬度测量距离——<a href=\"https://www.free-api.com/doc/264\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>行政区域查询(可在线调用)</b>:根据用户输入的搜索条件可以帮助用户快速的…——<a href=\"https://www.free-api.com/doc/265\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>矩形区域交通态势</b>:能够确定矩形交通态势情况，路况信息2分钟…——<a href=\"https://www.free-api.com/doc/266\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>圆形区域交通态势</b>:能够确定圆形交通态势情况，路况信息2分钟…——<a href=\"https://www.free-api.com/doc/267\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>指定线路交通态势</b>:能够确定指定线路交通情况，路况信息2分钟…——<a href=\"https://www.free-api.com/doc/268\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>输入提示(可在线调用)</b>:提供根据用户输入的关键词查询返回建议列表——<a href=\"https://www.free-api.com/doc/269\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:查询目标区域当前/未来的天气情况——<a href=\"https://www.free-api.com/doc/270\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP定位(可在线调用)</b>:将IP信息转换为地理位置信息——<a href=\"https://www.free-api.com/doc/271\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地点范围查询(可在线调用)</b>:根据经纬度查询查询其地址相关信息——<a href=\"https://www.free-api.com/doc/272\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.9.9更新接口</p>\n<hr>\n<p><b>行政区划区域检索(可在线调用)</b>:开发者可通过该功能，检索某一行政区划内（…——<a href=\"https://www.free-api.com/doc/273\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>圆形区域检索(可在线调用)</b>:开发者可设置圆心和半径，检索圆形区域内的…——<a href=\"https://www.free-api.com/doc/274\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>矩形区域检索(可在线调用)</b>:开发者可设置检索区域左下角和右上角坐标，…——<a href=\"https://www.free-api.com/doc/275\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地点详情检索(可在线调用)</b>:地点详情检索针对指定POI，检索其相关的…——<a href=\"https://www.free-api.com/doc/276\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地点输入提示(可在线调用)</b>:用户可通过该服务，匹配用户输入关键词的地…——<a href=\"https://www.free-api.com/doc/277\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地理编码服务(可在线调用)</b>:用户可通过该功能，将结构化地址（省/市/…——<a href=\"https://www.free-api.com/doc/278\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>全球逆地理编码(可在线调用)</b>:用户可通过该功能，将位置坐标解析成对应的…——<a href=\"https://www.free-api.com/doc/279\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>公交路线规划(可在线调用)</b>:根据起点和终点检索符合条件的公共交通方案…——<a href=\"https://www.free-api.com/doc/280\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>骑行路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的骑行路线规划…——<a href=\"https://www.free-api.com/doc/281\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>驾车路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的驾车路线规划…——<a href=\"https://www.free-api.com/doc/282\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>批量算路</b>:用户可通过该服务，根据起点和终点坐标计算…——<a href=\"https://www.free-api.com/doc/283\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>普通IP定位(可在线调用)</b>:用户可以通过该服务，根据IP定位来获取大…——<a href=\"https://www.free-api.com/doc/284\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>道路实时路况查询(可在线调用)</b>:查询具体道路的实时拥堵评价和拥堵路段、拥…——<a href=\"https://www.free-api.com/doc/285\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>时间偏移查询(可在线调用)</b>:查询坐标所在地与协调世界时的时间偏移信息…——<a href=\"https://www.free-api.com/doc/286\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>周边上车点推荐(可在线调用)</b>:用户可通过该功能检索坐标点周围的上车点。…——<a href=\"https://www.free-api.com/doc/287\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>非百度坐标系转换(可在线调用)</b>:用户可通过该服务，实现 非百度坐标系→百…——<a href=\"https://www.free-api.com/doc/288\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>快递查询(可在线调用)</b>:可根据快递单号查询大部分主流快递的快递信…——<a href=\"https://www.free-api.com/doc/289\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>文件转换</b>:文件转换成指定格式，成功则返回成功转换的…——<a href=\"https://www.free-api.com/doc/290\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取文件转换内容</b>:根据文件转换成功所获取的id，查询转换成…——<a href=\"https://www.free-api.com/doc/291\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.10.8更新接口</p>\n<hr>\n<p><b>全球IP地理位置(可在线调用)</b>:单个IPv4 / IPv6地址或域名…——<a href=\"https://www.free-api.com/doc/292\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>域名备案(可在线调用)</b>:根据域名查询域名备案状态——<a href=\"https://www.free-api.com/doc/293\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>十五天天气预报</b>:采用城市ID来精准查询15天内的天气，接…——<a href=\"https://www.free-api.com/doc/294\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>农历查询(可在线调用)</b>:根据日期获取农历、黄历、禁忌、星期、生肖…——<a href=\"https://www.free-api.com/doc/295\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>ICP备案查询(可在线调用)</b>:根据域名查询ICP备案号——<a href=\"https://www.free-api.com/doc/296\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>三合一收款二维码</b>:将QQ、微信、支付宝收款集合到一起，省去…——<a href=\"https://www.free-api.com/doc/297\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>二维码生成</b>:将网址直接转换成二维码图片——<a href=\"https://www.free-api.com/doc/298\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>二维码解码(可在线调用)</b>:将二维码图片进行解码，解析处理——<a href=\"https://www.free-api.com/doc/299\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>短网址生成(可在线调用)</b>:将长网址进行缩短，支持百度、新浪、腾讯短…——<a href=\"https://www.free-api.com/doc/300\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>短网址还原(可在线调用)</b>:将缩短的短网址进行还原,支持常见的短网址——<a href=\"https://www.free-api.com/doc/301\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>网易云音乐随机歌曲(可在线调用)</b>:网易云音乐，随机歌曲输出——<a href=\"https://www.free-api.com/doc/302\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取访客相关信息(可在线调用)</b>:根据访客IP地址，操作系统，浏览器，访问…——<a href=\"https://www.free-api.com/doc/303\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>随机头像输出(可在线调用)</b>:随机头像输出——<a href=\"https://www.free-api.com/doc/304\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.11.5更新接口</p>\n<hr>\n<p><b>文章短篇</b>:根据日期获取一篇文章，有网上的，也有名家…——<a href=\"https://www.free-api.com/doc/305\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>必应故事</b>:随机获取来自必应的故事，可根据pid获取…——<a href=\"https://www.free-api.com/doc/306\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>每日一言</b>:获取来自一言、有道或金山词霸的每日一言内…——<a href=\"https://www.free-api.com/doc/307\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>二维码解析</b>:还原二维码的原始URL，支持支付宝，微信…——<a href=\"https://www.free-api.com/doc/308\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>生成海报</b>:根据提交的内容格式化生成可分享的精美海报——<a href=\"https://www.free-api.com/doc/309\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>历史上的今天</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/310\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>生成二维码</b>:可根据传入的内容，生成对应的二维码，还可…——<a href=\"https://www.free-api.com/doc/311\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP地址详情信息</b>:IP地址详情信息查询——<a href=\"https://www.free-api.com/doc/312\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>XLS生成</b>:生成XLS——<a href=\"https://www.free-api.com/doc/313\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>土味情话</b>:和妹妹说的情话，返回一句随机的内容——<a href=\"https://www.free-api.com/doc/314\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>随机笑话(可在线调用)</b>:随机的笑话——<a href=\"https://www.free-api.com/doc/315\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.12.4更新接口</p>\n<hr>\n<p><b>经纬度信息(可在线调用)</b>:获取当前经纬度信息——<a href=\"https://www.free-api.com/doc/316\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>历史上的今天(可在线调用)</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/317\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>Bing 壁纸获取(可在线调用)</b>:获取最近的Bing 壁纸——<a href=\"https://www.free-api.com/doc/318\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取今天和未来三天的天气情况，来源于高德——<a href=\"https://www.free-api.com/doc/319\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市名，获取今天和未来三天的天气情况…——<a href=\"https://www.free-api.com/doc/320\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市id，获取未来15天的天气情况，…——<a href=\"https://www.free-api.com/doc/321\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>手机归属地查询(可在线调用)</b>:根据手机号码查询手机号的归属地信息——<a href=\"https://www.free-api.com/doc/322\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>手机归属地查询</b>:根据手机号码查询手机号的归属地信息，来源…——<a href=\"https://www.free-api.com/doc/323\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP域名归属地查询(可在线调用)</b>:查询IP或者域名归属地——<a href=\"https://www.free-api.com/doc/324\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>身份证查询(可在线调用)</b>:根据身份证获取该身份证号码的籍贯，出生年…——<a href=\"https://www.free-api.com/doc/325\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>淘宝关键字(可在线调用)</b>:淘宝搜索关键字——<a href=\"https://www.free-api.com/doc/326\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>百度关键字</b>:百度搜索关键字——<a href=\"https://www.free-api.com/doc/327\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>Bing关键字(可在线调用)</b>:Bing搜索关键字——<a href=\"https://www.free-api.com/doc/328\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取用户设备信息(可在线调用)</b>:通过 user-agent 分析用户设备…——<a href=\"https://www.free-api.com/doc/329\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>百度音乐搜索(可在线调用)</b>:根据关键字获取音乐的相关信息——<a href=\"https://www.free-api.com/doc/330\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>努力添加中……</p>\n<p><strong>原文链接：<a href=\"https://github.com/fangzesheng/free-api\" target=\"_blank\" rel=\"noopener\">https://github.com/fangzesheng/free-api</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>为了方便广大的开发者，特此统计了网上诸多的免费API，为您收集免费的接口服务，做一个api的搬运工，以后会每月定时更新新的接口。有些接口来自第三方，在第三方注册就可以成为他们的会员，免费使用他们的部分接口。</strong></p>\n<p><b>百度AccessToken</b>:针对HTTP API调用者，百度AIP开…——<a href=\"https://www.free-api.com/doc/1\" target='_blank'>接口地址</a><br><b>语音识别</b>:通过场景识别优化，为车载导航，智能家居和…——<a href=\"https://www.free-api.com/doc/2\" target='_blank'>接口地址</a><br><b>语音合成</b>:将用户输入的文字，转换成流畅自然的语音输…——<a href=\"https://www.free-api.com/doc/4\" target='_blank'>接口地址</a><br><b>出租车票识别(可在线调用)</b>:针对出租车票（现支持北京、上海、深圳）的…——<a href=\"https://www.free-api.com/doc/6\" target='_blank'>接口地址</a><br><b>火车票识别(可在线调用)</b>:支持对大陆火车票的车票号、始发站、目的站…——<a href=\"https://www.free-api.com/doc/7\" target='_blank'>接口地址</a><br>","more":"<b>数字识别(可在线调用)</b>:对图像中的阿拉伯数字进行识别提取，适用于…——<a href=\"https://www.free-api.com/doc/8\" target='_blank'>接口地址</a><br><b>通用文字识别(可在线调用)</b>:支持多场景下的文字检测识别，多项ICDA…——<a href=\"https://www.free-api.com/doc/9\" target='_blank'>接口地址</a><br><b>网络图片文字识别(可在线调用)</b>:能够快速准确识别各种网络图片中的文字，在…——<a href=\"https://www.free-api.com/doc/10\" target='_blank'>接口地址</a><br><b>身份证识别(可在线调用)</b>:支持对二代居民身份证正反面的关键字段识别…——<a href=\"https://www.free-api.com/doc/11\" target='_blank'>接口地址</a><br><b>银行卡识别(可在线调用)</b>:支持对主流银行卡卡号识别，并返回发卡行和…——<a href=\"https://www.free-api.com/doc/12\" target='_blank'>接口地址</a><br><b>驾驶证识别(可在线调用)</b>:支持对机动车驾驶证正页的关键字段识别，包…——<a href=\"https://www.free-api.com/doc/13\" target='_blank'>接口地址</a><br><b>行驶证识别(可在线调用)</b>:支持对机动车行驶证正页的关键字段识别，包…——<a href=\"https://www.free-api.com/doc/14\" target='_blank'>接口地址</a><br><b>手写文字识别(可在线调用)</b>:能够对手写汉字和手写数字进行识别——<a href=\"https://www.free-api.com/doc/15\" target='_blank'>接口地址</a><br><b>增值税发票识别(可在线调用)</b>:识别并结构化返回增值税发票的各个字段及其…——<a href=\"https://www.free-api.com/doc/16\" target='_blank'>接口地址</a><br><b>营业执照识别(可在线调用)</b>:支持对营业执照关键字段的识别，包括单位名…——<a href=\"https://www.free-api.com/doc/17\" target='_blank'>接口地址</a><br><b>车牌识别(可在线调用)</b>:支持对中国大陆机动车车牌的识别，包括地域…——<a href=\"https://www.free-api.com/doc/18\" target='_blank'>接口地址</a><br><b>票据识别(可在线调用)</b>:支持对增值税发票、火车票、出租车票（支持…——<a href=\"https://www.free-api.com/doc/19\" target='_blank'>接口地址</a><br><b>表格文字识别</b>:自动识别表格线及表格内容，结构化输出表头…——<a href=\"https://www.free-api.com/doc/20\" target='_blank'>接口地址</a><br><b>通用物体和场景识别(可在线调用)</b>:支持超过10万类物体和场景识别，接口返回…——<a href=\"https://www.free-api.com/doc/21\" target='_blank'>接口地址</a><br><b>图像主体检测(可在线调用)</b>:检测图片中关键主体位置，接口支持检测单张…——<a href=\"https://www.free-api.com/doc/22\" target='_blank'>接口地址</a><br><b>品牌logo识别(可在线调用)</b>:实现2万类品牌logo识别，接口返回品牌…——<a href=\"https://www.free-api.com/doc/23\" target='_blank'>接口地址</a><br><b>植物识别(可在线调用)</b>:植物识别支持2万多种通用植物识别、近…——<a href=\"https://www.free-api.com/doc/24\" target='_blank'>接口地址</a><br><b>动物识别(可在线调用)</b>:支持数千种动物识别，接口返回名称——<a href=\"https://www.free-api.com/doc/25\" target='_blank'>接口地址</a><br><b>菜品识别(可在线调用)</b>:识别超过5万个菜品，接口返回菜品的名称、…——<a href=\"https://www.free-api.com/doc/26\" target='_blank'>接口地址</a><br><b>地标识别(可在线调用)</b>:支持识别约5万中外著名地标、景点，接口返…——<a href=\"https://www.free-api.com/doc/27\" target='_blank'>接口地址</a><br><b>车型识别(可在线调用)</b>:识别车辆的具体车型，以小汽车为主，输出图…——<a href=\"https://www.free-api.com/doc/28\" target='_blank'>接口地址</a><br><b>车辆检测</b>:识别图像中所有机动车辆的类型和位置，并对…——<a href=\"https://www.free-api.com/doc/29\" target='_blank'>接口地址</a><br><b>GIF色情图像识别(可在线调用)</b>:人工智能鉴黄技术，智能识别图片和视频中的…——<a href=\"https://www.free-api.com/doc/30\" target='_blank'>接口地址</a><br><b>图像审核(可在线调用)</b>:通过人脸检测、文字识别、色情识别、暴恐识…——<a href=\"https://www.free-api.com/doc/31\" target='_blank'>接口地址</a><br><b>人脸检测与属性分析(可在线调用)</b>:检测图中的人脸，并为人脸标记出边框。检测…——<a href=\"https://www.free-api.com/doc/39\" target='_blank'>接口地址</a><br><b>在线活体检测(可在线调用)</b>:提供在线方式的人脸活体检测能力，在人脸识…——<a href=\"https://www.free-api.com/doc/41\" target='_blank'>接口地址</a><br><b>人体关键点识别(可在线调用)</b>:检测人体并返回人体矩形框位置，精准定位1…——<a href=\"https://www.free-api.com/doc/44\" target='_blank'>接口地址</a><br><b>人流量统计(可在线调用)</b>:统计图像中的人体个数和流动趋势，以头肩为…——<a href=\"https://www.free-api.com/doc/45\" target='_blank'>接口地址</a><br><b>人体检测与属性识别(可在线调用)</b>:检测图像中的所有人体，识别人体的20类属…——<a href=\"https://www.free-api.com/doc/46\" target='_blank'>接口地址</a><br><b>手势识别(可在线调用)</b>:识别图片中的手部位置和手势类型，可识别2…——<a href=\"https://www.free-api.com/doc/47\" target='_blank'>接口地址</a><br><b>人像分割(可在线调用)</b>:识别图像中的人体轮廓，与背景进行分离——<a href=\"https://www.free-api.com/doc/48\" target='_blank'>接口地址</a><br><b>驾驶行为分析(可在线调用)</b>:针对车载场景，识别驾驶员使用手机、抽烟、…——<a href=\"https://www.free-api.com/doc/49\" target='_blank'>接口地址</a><br><b>词法分析(可在线调用)</b>:基于大数据和用户行为的分词、词性标注、命…——<a href=\"https://www.free-api.com/doc/50\" target='_blank'>接口地址</a><br><b>词向量表示(可在线调用)</b>:词向量计算是通过训练的方法，将语言词表中…——<a href=\"https://www.free-api.com/doc/51\" target='_blank'>接口地址</a><br><b>词义相似度(可在线调用)</b>:用于计算两个给定词语的语义相似度，基于自…——<a href=\"https://www.free-api.com/doc/52\" target='_blank'>接口地址</a><br><b>依存句法分析(可在线调用)</b>:利用句子中词与词之间的依存关系来表示词语…——<a href=\"https://www.free-api.com/doc/53\" target='_blank'>接口地址</a><br><b>DNN语言模型(可在线调用)</b>:语言模型是通过计算给定词组成的句子的概率…——<a href=\"https://www.free-api.com/doc/54\" target='_blank'>接口地址</a><br><b>短文本相似度(可在线调用)</b>:短文本相似度计算服务能够提供不同短文本之…——<a href=\"https://www.free-api.com/doc/55\" target='_blank'>接口地址</a><br><b>文本纠错(可在线调用)</b>:文本纠错支持短文本、长文本、语音识别结果…——<a href=\"https://www.free-api.com/doc/56\" target='_blank'>接口地址</a><br><b>情感倾向分析(可在线调用)</b>:针对带有主观描述的中文文本，可自动判断该…——<a href=\"https://www.free-api.com/doc/57\" target='_blank'>接口地址</a><br><b>评论观点抽取(可在线调用)</b>:自动分析评论关注点和评论观点，并输出评论…——<a href=\"https://www.free-api.com/doc/58\" target='_blank'>接口地址</a><br><b>对话情绪识别(可在线调用)</b>:针对一段对话文本，自动识别出当前会话者所…——<a href=\"https://www.free-api.com/doc/59\" target='_blank'>接口地址</a><br><b>文章标签(可在线调用)</b>:文章标签服务对文章的标题和内容进行深度分…——<a href=\"https://www.free-api.com/doc/60\" target='_blank'>接口地址</a><br><b>文章分类(可在线调用)</b>:文章分类服务对文章内容进行深度分析，输出…——<a href=\"https://www.free-api.com/doc/61\" target='_blank'>接口地址</a><br><b>新闻摘要(可在线调用)</b>:基于深度语义分析模型，自动抽取新闻文本中…——<a href=\"https://www.free-api.com/doc/62\" target='_blank'>接口地址</a><br><b>通用翻译(可在线调用)</b>:支持28种语言实时互译，覆盖中、英、日、…——<a href=\"https://www.free-api.com/doc/64\" target='_blank'>接口地址</a><br><b>实体标注(可在线调用)</b>:结合上下文，识别文本中的实体并将其关联到…——<a href=\"https://www.free-api.com/doc/65\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条，各类社会、国内、国际、体育…——<a href=\"https://www.free-api.com/doc/66\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:根据手机号码或手机号码的前7位，查询手机…——<a href=\"https://www.free-api.com/doc/67\" target='_blank'>接口地址</a><br><b>彩票开奖结果查询(可在线调用)</b>:目前支持双色球、大乐透、七乐彩、七星彩、…——<a href=\"https://www.free-api.com/doc/68\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:查询天气情况：温度、湿度、AQI、天气、…——<a href=\"https://www.free-api.com/doc/69\" target='_blank'>接口地址</a><br><b>二维码生成(可在线调用)</b>:按照设定的参数、生成二维码——<a href=\"https://www.free-api.com/doc/70\" target='_blank'>接口地址</a><br><b>汇率(可在线调用)</b>:外汇报价，货币汇率——<a href=\"https://www.free-api.com/doc/71\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:回顾历史的长河，历史是生活的一面镜子——<a href=\"https://www.free-api.com/doc/72\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:新华字典在线查字,最新最全——<a href=\"https://www.free-api.com/doc/74\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:最大最全的新华汉语词典，按拼音查、按部首…——<a href=\"https://www.free-api.com/doc/75\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信精选文章——<a href=\"https://www.free-api.com/doc/76\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:搜集网络幽默、搞笑、内涵段子，不间断更新——<a href=\"https://www.free-api.com/doc/77\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:全国免费的WIFI热点分布——<a href=\"https://www.free-api.com/doc/78\" target='_blank'>接口地址</a><br><b>货币汇率(可在线调用)</b>:支持人民币牌价、外汇汇率查询；数据仅供参…——<a href=\"https://www.free-api.com/doc/79\" target='_blank'>接口地址</a><br><b>手机固话来电显示</b>:查询手机/固话号码归属地，是否诈骗、营销…——<a href=\"https://www.free-api.com/doc/80\" target='_blank'>接口地址</a><br><b>简/繁/火星字体转换(可在线调用)</b>:实现简体、繁体、火星文之间的转换,转换字…——<a href=\"https://www.free-api.com/doc/81\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:提供全国邮政编码大全,为你快速准确查邮编——<a href=\"https://www.free-api.com/doc/82\" target='_blank'>接口地址</a><br><b>老黄历(可在线调用)</b>:提供老黄历查询,黄历每日吉凶宜忌查询——<a href=\"https://www.free-api.com/doc/83\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦,周公解梦大全,周公解梦查询，免…——<a href=\"https://www.free-api.com/doc/84\" target='_blank'>接口地址</a><br><b>净值数据(可在线调用)</b>:根据基金类型及分页参数来获取数据(开放式…——<a href=\"https://www.free-api.com/doc/85\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:十二星座每日、每月、每年运势——<a href=\"https://www.free-api.com/doc/86\" target='_blank'>接口地址</a><br><b>图书电商数据(可在线调用)</b>:于万千之中选择你所爱–好书推荐，值得你…——<a href=\"https://www.free-api.com/doc/87\" target='_blank'>接口地址</a><br><b>身份证查询(可在线调用)</b>:身份证归属地信息查询——<a href=\"https://www.free-api.com/doc/88\" target='_blank'>接口地址</a><br><b>黄金数据(可在线调用)</b>:黄金品种、最新价、开盘价、最高价等信息——<a href=\"https://www.free-api.com/doc/89\" target='_blank'>接口地址</a><br><b>IP地址(可在线调用)</b>:根据查询的IP地址或者域名，查询该IP所…——<a href=\"https://www.free-api.com/doc/90\" target='_blank'>接口地址</a><br><b>笑话大全——文字(可在线调用)</b>:每小时更新。文字笑话大全，信息搜集整理于…——<a href=\"https://www.free-api.com/doc/92\" target='_blank'>接口地址</a><br><b>笑话大全——图片(可在线调用)</b>:每小时更新。图片笑话大全，信息搜集整理于…——<a href=\"https://www.free-api.com/doc/93\" target='_blank'>接口地址</a><br><b>最新新闻</b>:新闻API接口 官方自营 会员接口…——<a href=\"https://www.free-api.com/doc/94\" target='_blank'>接口地址</a><br><b>美图大全</b>:根据几十个种类获取图片列表，每日更新。种…——<a href=\"https://www.free-api.com/doc/95\" target='_blank'>接口地址</a><br><b>手机归属地查询</b>:最全、最新的手机号段数据库。本地找不到的…——<a href=\"https://www.free-api.com/doc/96\" target='_blank'>接口地址</a><br><b>历史上的今天</b>:回顾历史的长河,历史是生活的一面镜子;历…——<a href=\"https://www.free-api.com/doc/97\" target='_blank'>接口地址</a><br><b>来福岛笑话——图片</b>:来福岛爆笑娱乐网创建于2000年，是国内…——<a href=\"https://www.free-api.com/doc/99\" target='_blank'>接口地址</a><br><b>来福岛笑话——文字</b>:来福岛爆笑娱乐网创建于2000年，是国内…——<a href=\"https://www.free-api.com/doc/100\" target='_blank'>接口地址</a><br><b>全国景点查询</b>:全国景点查询接口（来自同程网的合作数据）…——<a href=\"https://www.free-api.com/doc/101\" target='_blank'>接口地址</a><br><b>健康知识</b>:根据养生、用药、两性等频道内容获取健康知…——<a href=\"https://www.free-api.com/doc/102\" target='_blank'>接口地址</a><br><b>猜一猜</b>:随机返回谜语，有2.5万谜语，每日更新。…——<a href=\"https://www.free-api.com/doc/103\" target='_blank'>接口地址</a><br><b>身份证查询</b>:可根据身份证号，查询其签发地、生日、性别…——<a href=\"https://www.free-api.com/doc/104\" target='_blank'>接口地址</a><br><b>爱飞天气插件</b>:爱飞天气是ShowAPI官方天气接口的一…——<a href=\"https://www.free-api.com/doc/105\" target='_blank'>接口地址</a><br><b>PM2.5空气质量指数</b>:本接口每小时更新1次。空气质量指数提供实…——<a href=\"https://www.free-api.com/doc/106\" target='_blank'>接口地址</a><br><b>全球IP地址查询</b>:全球IP地址——<a href=\"https://www.free-api.com/doc/107\" target='_blank'>接口地址</a><br><b>域名查询</b>:域名查询地理位置——<a href=\"https://www.free-api.com/doc/108\" target='_blank'>接口地址</a><br><b>汉字转拼音</b>:将汉字转换为拼音和拼音首字母缩写——<a href=\"https://www.free-api.com/doc/110\" target='_blank'>接口地址</a><br><b>中文分词</b>:中文分词接口。将长段中文切词分开。使用场…——<a href=\"https://www.free-api.com/doc/111\" target='_blank'>接口地址</a><br><b>图片验证码生成</b>:图形|图片验证码生成，支持自定义高宽，文…——<a href=\"https://www.free-api.com/doc/112\" target='_blank'>接口地址</a><br><b>新闻、网页正文抽取</b>:传入一个新网或网页地址，接口将返回此ur…——<a href=\"https://www.free-api.com/doc/114\" target='_blank'>接口地址</a><br><b>实时IP代理查询</b>:代理数量并不是越多越好，可以用才是真正的…——<a href=\"https://www.free-api.com/doc/116\" target='_blank'>接口地址</a><br><b>今日油价</b>:今日油价，可查询全国31个省的油价。每天…——<a href=\"https://www.free-api.com/doc/117\" target='_blank'>接口地址</a><br><b>QQ号码测凶吉</b>:输入qq号码，得到此号码的算命情况，例如…——<a href=\"https://www.free-api.com/doc/118\" target='_blank'>接口地址</a><br><b>地址转换经纬度</b>:根据城市和名称转换为相应的经纬度——<a href=\"https://www.free-api.com/doc/120\" target='_blank'>接口地址</a><br><b>经纬度转换地址</b>:根据经纬度转换成相应地址——<a href=\"https://www.free-api.com/doc/121\" target='_blank'>接口地址</a><br><b>黄历运势</b>:根据输入日期，查看某一天的黄历运势——<a href=\"https://www.free-api.com/doc/122\" target='_blank'>接口地址</a><br><b>十大银行实时汇率</b>:包括工商银行、中国银行、农业银行、交通银…——<a href=\"https://www.free-api.com/doc/123\" target='_blank'>接口地址</a><br><b>汇率转换</b>:1分钟更新1次。当前十大银行，包括工商银…——<a href=\"https://www.free-api.com/doc/124\" target='_blank'>接口地址</a><br><b>添加图片水印</b>:传入底板图及水印图，根据位置参数，接口把…——<a href=\"https://www.free-api.com/doc/125\" target='_blank'>接口地址</a><br><b>图像裁剪</b>:裁剪原图的部份区域——<a href=\"https://www.free-api.com/doc/126\" target='_blank'>接口地址</a><br><b>生成缩略图</b>:根据传入的比率将原图生成缩略图——<a href=\"https://www.free-api.com/doc/127\" target='_blank'>接口地址</a><br><b>星座运势</b>:每天1点、7点、17点更新。包含十二星座…——<a href=\"https://www.free-api.com/doc/128\" target='_blank'>接口地址</a><br><b>PDF文件正文抽取</b>:抽取PDF文件中的文字信息——<a href=\"https://www.free-api.com/doc/129\" target='_blank'>接口地址</a><br><b>网络搜索热词排行</b>:每2小时更新一次。根据分类查询网络最热的…——<a href=\"https://www.free-api.com/doc/131\" target='_blank'>接口地址</a><br><b>二维码识别</b>:根据图片的Base64信息,识别图片中的…——<a href=\"https://www.free-api.com/doc/132\" target='_blank'>接口地址</a><br><b>二维码生成</b>:生成二维码图片 图片存放在showapi…——<a href=\"https://www.free-api.com/doc/133\" target='_blank'>接口地址</a><br><b>中文文本相似度检测</b>:通过计算向量间的夹角（余弦公式），来判断…——<a href=\"https://www.free-api.com/doc/134\" target='_blank'>接口地址</a><br><b>全国火车票查询</b>:数据来源于12306。 包括城市列表\\列…——<a href=\"https://www.free-api.com/doc/135\" target='_blank'>接口地址</a><br><b>药品查询</b>:药品信息——<a href=\"https://www.free-api.com/doc/136\" target='_blank'>接口地址</a><br><b>菜谱大全</b>:本菜谱的信息来源于网络,所以本信息仅用于…——<a href=\"https://www.free-api.com/doc/137\" target='_blank'>接口地址</a><br><b>台风最新坐标轨迹</b>:可查询当前存在威胁的台风列表，每个台风的…——<a href=\"https://www.free-api.com/doc/138\" target='_blank'>接口地址</a><br><b>网页级别查询</b>:google的pr查询——<a href=\"https://www.free-api.com/doc/139\" target='_blank'>接口地址</a><br><b>关键词抽取</b>:根据传入的大段文字，使用TextRank…——<a href=\"https://www.free-api.com/doc/140\" target='_blank'>接口地址</a><br><b>全国行政区划分</b>:最新最全的全国省、市、区县、乡镇的分级查…——<a href=\"https://www.free-api.com/doc/141\" target='_blank'>接口地址</a><br><b>微信小程序查询</b>:搜索查询已经上架的微信小程序。包括基本信…——<a href=\"https://www.free-api.com/doc/142\" target='_blank'>接口地址</a><br><b>生成文章摘要</b>:根据传入的长篇文章，系统使用智能算法抽取…——<a href=\"https://www.free-api.com/doc/143\" target='_blank'>接口地址</a><br><b>藏头诗生成</b>:藏头诗生成器。可输入人名生成藏头、藏尾、…——<a href=\"https://www.free-api.com/doc/144\" target='_blank'>接口地址</a><br><b>国际原油价格查询</b>:WTI和布伦特的油价查询——<a href=\"https://www.free-api.com/doc/145\" target='_blank'>接口地址</a><br><b>水质查询</b>:根据地点和时间查询水质——<a href=\"https://www.free-api.com/doc/146\" target='_blank'>接口地址</a><br><b>条码生成</b>:提供EAN_8、EAN_13、CODE_…——<a href=\"https://www.free-api.com/doc/147\" target='_blank'>接口地址</a><br><b>条码识别</b>:提供EAN_8、EAN_13、CODE_…——<a href=\"https://www.free-api.com/doc/148\" target='_blank'>接口地址</a><br><b>全国站点换乘线路查询</b>:提供全国站点换乘线路查询——<a href=\"https://www.free-api.com/doc/149\" target='_blank'>接口地址</a><br><b>全国公交换乘查询</b>:提供全国公交换乘查询——<a href=\"https://www.free-api.com/doc/150\" target='_blank'>接口地址</a><br><b>汽车品牌查询</b>:收录了近200个品牌/子品牌,上万辆车型…——<a href=\"https://www.free-api.com/doc/151\" target='_blank'>接口地址</a><br><b>周公解梦</b>:根据周公解梦全书提供相关信息——<a href=\"https://www.free-api.com/doc/152\" target='_blank'>接口地址</a><br><b>正能量新闻</b>:社会正能量的新闻资讯，每天更新——<a href=\"https://www.free-api.com/doc/153\" target='_blank'>接口地址</a><br><b>全国酒店查询</b>:该接口所返回的所有图片链接将在12小时内…——<a href=\"https://www.free-api.com/doc/154\" target='_blank'>接口地址</a><br><b>经典语句</b>:根据名人，查询经典名言——<a href=\"https://www.free-api.com/doc/155\" target='_blank'>接口地址</a><br><b>商品比价</b>:搜索商品，根据商品url搜索各大商城的历…——<a href=\"https://www.free-api.com/doc/156\" target='_blank'>接口地址</a><br><b>姓名打分</b>:根据姓名，返回此姓名的运势得分——<a href=\"https://www.free-api.com/doc/157\" target='_blank'>接口地址</a><br><b>公司名测吉凶</b>:根据公司名，返回此公司的运势得分——<a href=\"https://www.free-api.com/doc/158\" target='_blank'>接口地址</a><br><b>车牌号测吉凶</b>:根据车牌名，返回此车牌号的运势得分——<a href=\"https://www.free-api.com/doc/159\" target='_blank'>接口地址</a><br><b>手机号测吉凶</b>:根据手机号码，返回此号码的运势得分——<a href=\"https://www.free-api.com/doc/160\" target='_blank'>接口地址</a><br><b>图书ISBN查询</b>:通过国际图书号查询图书相关信息，目前只支…——<a href=\"https://www.free-api.com/doc/161\" target='_blank'>接口地址</a><br><b>影讯查询</b>:影讯查询——<a href=\"https://www.free-api.com/doc/162\" target='_blank'>接口地址</a><br><b>手机套餐售价</b>:全国手机流量充值，4G流量，当月有效——<a href=\"https://www.free-api.com/doc/163\" target='_blank'>接口地址</a><br><b>紫微斗数</b>:根据出生时间定紫薇斗数命盘，供命理研究，…——<a href=\"https://www.free-api.com/doc/164\" target='_blank'>接口地址</a><br><b>唐诗宋词元曲等诗词查询</b>:根据朝代Id或诗人名称查询诗人信息——<a href=\"https://www.free-api.com/doc/165\" target='_blank'>接口地址</a><br><b>脑筋急转弯</b>:查询常见的脑筋急转弯金句——<a href=\"https://www.free-api.com/doc/166\" target='_blank'>接口地址</a><br><b>虚拟数字币|比特币行情</b>:查询主流虚拟货币实时行情，例如btc(比…——<a href=\"https://www.free-api.com/doc/167\" target='_blank'>接口地址</a><br><b>全国房产信息</b>:搜索最新楼盘开盘信息、最新市场房价信息——<a href=\"https://www.free-api.com/doc/168\" target='_blank'>接口地址</a><br><b>手游排行榜</b>:手游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/169\" target='_blank'>接口地址</a><br><b>网游排行榜</b>:网游最热排行榜及最期待榜——<a href=\"https://www.free-api.com/doc/170\" target='_blank'>接口地址</a><br><b>黄金行情</b>:上金所黄金行情——<a href=\"https://www.free-api.com/doc/171\" target='_blank'>接口地址</a><br><b>电商淘宝平台联想词</b>:提供淘宝联想词查询——<a href=\"https://www.free-api.com/doc/172\" target='_blank'>接口地址</a><br><b>中文反义词</b>:中文反义词——<a href=\"https://www.free-api.com/doc/173\" target='_blank'>接口地址</a><br><b>中文近义词</b>:中文近义词——<a href=\"https://www.free-api.com/doc/174\" target='_blank'>接口地址</a><br><b>歇后语查询</b>:查询歇后语列表——<a href=\"https://www.free-api.com/doc/175\" target='_blank'>接口地址</a><br><b>中国互联网络信息</b>:中国互联网络信息——<a href=\"https://www.free-api.com/doc/176\" target='_blank'>接口地址</a><br><b>实时票房排行</b>:实时票房中国（包括香港）、北美、全球票房…——<a href=\"https://www.free-api.com/doc/177\" target='_blank'>接口地址</a><br><b>爱奇艺热点趋势</b>:爱奇艺视频指数——<a href=\"https://www.free-api.com/doc/178\" target='_blank'>接口地址</a><br><b>空气质量指数(可在线调用)</b>:空气质量指数提供实时空气质量情况，目前支…——<a href=\"https://www.free-api.com/doc/179\" target='_blank'>接口地址</a><br><b>IP地址查询(可在线调用)</b>:提供rest风格的IP地址查询接口，只需…——<a href=\"https://www.free-api.com/doc/180\" target='_blank'>接口地址</a><br><b>天气预报(可在线调用)</b>:全国天气预报，预报7天天气，以及当天的生…——<a href=\"https://www.free-api.com/doc/181\" target='_blank'>接口地址</a><br><b>人脸识别(可在线调用)</b>:检测图片(Image)中的人脸(Face…——<a href=\"https://www.free-api.com/doc/182\" target='_blank'>接口地址</a><br><b>指纹识别</b>:检测图片(Image)中的指纹(Fing…——<a href=\"https://www.free-api.com/doc/183\" target='_blank'>接口地址</a><br><b>医疗科室(可在线调用)</b>:医药健康接口专用的医疗科室字典项获取——<a href=\"https://www.free-api.com/doc/184\" target='_blank'>接口地址</a><br><b>健康菜谱(可在线调用)</b>:健康菜谱，让人们在宣泄的都市中体验在家常…——<a href=\"https://www.free-api.com/doc/186\" target='_blank'>接口地址</a><br><b>疾病信息(可在线调用)</b>:通过名称取得疾病详情——<a href=\"https://www.free-api.com/doc/187\" target='_blank'>接口地址</a><br><b>药品查询(可在线调用)</b>:通过药品名字直接得到药品说明书、价格、生…——<a href=\"https://www.free-api.com/doc/188\" target='_blank'>接口地址</a><br><b>食疗大全(可在线调用)</b>:通过名称取得食品详情只要是食品都有它…——<a href=\"https://www.free-api.com/doc/189\" target='_blank'>接口地址</a><br><b>手术项目(可在线调用)</b>:通过名称取得手术详情通过名称取得手术…——<a href=\"https://www.free-api.com/doc/190\" target='_blank'>接口地址</a><br><b>药房药店(可在线调用)</b>:通过名称取得药店信息通过名称取得药店…——<a href=\"https://www.free-api.com/doc/191\" target='_blank'>接口地址</a><br><b>病状信息(可在线调用)</b>:通过名称取得病状详情——<a href=\"https://www.free-api.com/doc/192\" target='_blank'>接口地址</a><br><b>微信精选(可在线调用)</b>:微信热门精选文章，实时更新——<a href=\"https://www.free-api.com/doc/193\" target='_blank'>接口地址</a><br><b>国内新闻(可在线调用)</b>:国内新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/194\" target='_blank'>接口地址</a><br><b>国际新闻(可在线调用)</b>:国际新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/195\" target='_blank'>接口地址</a><br><b>体育新闻(可在线调用)</b>:体育新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/196\" target='_blank'>接口地址</a><br><b>科技新闻(可在线调用)</b>:科技新闻数据，实时更新——<a href=\"https://www.free-api.com/doc/197\" target='_blank'>接口地址</a><br><b>奇闻轶事(可在线调用)</b>:奇闻轶事数据，实时更新——<a href=\"https://www.free-api.com/doc/198\" target='_blank'>接口地址</a><br><b>旅游新闻(可在线调用)</b>:旅游热点数据，实时更新——<a href=\"https://www.free-api.com/doc/199\" target='_blank'>接口地址</a><br><b>新华字典(可在线调用)</b>:新华字典数据库，可查字的拼音、读音、偏旁…——<a href=\"https://www.free-api.com/doc/200\" target='_blank'>接口地址</a><br><b>五笔字根(可在线调用)</b>:查询汉字的五笔字根——<a href=\"https://www.free-api.com/doc/201\" target='_blank'>接口地址</a><br><b>简繁体火星文转换(可在线调用)</b>:汉字的简体、繁体、火星文转换——<a href=\"https://www.free-api.com/doc/202\" target='_blank'>接口地址</a><br><b>成语词典(可在线调用)</b>:成语查询——<a href=\"https://www.free-api.com/doc/203\" target='_blank'>接口地址</a><br><b>歇后语(可在线调用)</b>:歇后语查询，根据关键字搜索歇后语——<a href=\"https://www.free-api.com/doc/204\" target='_blank'>接口地址</a><br><b>唐诗宋词(可在线调用)</b>:根据关键字搜索唐诗宋词——<a href=\"https://www.free-api.com/doc/205\" target='_blank'>接口地址</a><br><b>历史上的今天(可在线调用)</b>:以史为镜，可以知兴替。借历史上的成败得失…——<a href=\"https://www.free-api.com/doc/206\" target='_blank'>接口地址</a><br><b>辞海(可在线调用)</b>:查询词语解释——<a href=\"https://www.free-api.com/doc/207\" target='_blank'>接口地址</a><br><b>手机号码归属地(可在线调用)</b>:通过手机号码查询归属地、运营商、号码类型…——<a href=\"https://www.free-api.com/doc/208\" target='_blank'>接口地址</a><br><b>笑话大全(可在线调用)</b>:海量互联网幽默、内涵段子、趣味图片，不间…——<a href=\"https://www.free-api.com/doc/209\" target='_blank'>接口地址</a><br><b>同义词</b>:通过输入的词语查询对应的同义词——<a href=\"https://www.free-api.com/doc/210\" target='_blank'>接口地址</a><br><b>全国WIFI(可在线调用)</b>:查询周边免费WIFI热点；全国免费WIF…——<a href=\"https://www.free-api.com/doc/211\" target='_blank'>接口地址</a><br><b>NBA赛事(可在线调用)</b>:NBA赛事赛程信息，球队赛程赛事查询——<a href=\"https://www.free-api.com/doc/212\" target='_blank'>接口地址</a><br><b>全国邮编查询(可在线调用)</b>:通过地名查询地区邮编，精确到街道——<a href=\"https://www.free-api.com/doc/213\" target='_blank'>接口地址</a><br><b>周公解梦(可在线调用)</b>:周公解梦大全——<a href=\"https://www.free-api.com/doc/214\" target='_blank'>接口地址</a><br><b>名人名言(可在线调用)</b>:通过关键字查询名人名言——<a href=\"https://www.free-api.com/doc/215\" target='_blank'>接口地址</a><br><b>今日油价(可在线调用)</b>:可查询全国31个省的油价——<a href=\"https://www.free-api.com/doc/216\" target='_blank'>接口地址</a><br><b>国际白银实时价格</b>:国际交易市场白银实时价格(美元/盎司)，…——<a href=\"https://www.free-api.com/doc/217\" target='_blank'>接口地址</a><br><b>时事新闻检索(可在线调用)</b>:时事新闻，新闻检索等，实时更新——<a href=\"https://www.free-api.com/doc/218\" target='_blank'>接口地址</a><br><b>号码吉凶(可在线调用)</b>:手机号码、QQ号码、车牌号等所有数字类型…——<a href=\"https://www.free-api.com/doc/219\" target='_blank'>接口地址</a><br><b>金额小写转大写(可在线调用)</b>:人民币金额小写转大写——<a href=\"https://www.free-api.com/doc/220\" target='_blank'>接口地址</a><br><b>电影票房(可在线调用)</b>:最新票房榜，网票票房——<a href=\"https://www.free-api.com/doc/221\" target='_blank'>接口地址</a><br><b>全国长途汽车(可在线调用)</b>:全国长途汽车时刻表查询——<a href=\"https://www.free-api.com/doc/222\" target='_blank'>接口地址</a><br><b>足球联赛(可在线调用)</b>:目前支持 英超，西甲，德甲，意甲，法甲，…——<a href=\"https://www.free-api.com/doc/223\" target='_blank'>接口地址</a><br><b>影视影讯(可在线调用)</b>:影视信息播放链接检索，城市影讯检索——<a href=\"https://www.free-api.com/doc/224\" target='_blank'>接口地址</a><br><b>标准电码查询(可在线调用)</b>:提供的标准中文电码查询程序结果——<a href=\"https://www.free-api.com/doc/225\" target='_blank'>接口地址</a><br><b>火车时刻表(可在线调用)</b>:火车时刻表，站到站检索——<a href=\"https://www.free-api.com/doc/226\" target='_blank'>接口地址</a><br><b>姓氏起源(可在线调用)</b>:《百家姓》是我国汉族姓氏总集，载有四百多…——<a href=\"https://www.free-api.com/doc/227\" target='_blank'>接口地址</a><br><b>短链接生成(可在线调用)</b>:查找网提供长的网址链接缩短为新浪短网扯，…——<a href=\"https://www.free-api.com/doc/228\" target='_blank'>接口地址</a><br><b>翻译(可在线调用)</b>:翻译API提供免费开放接口，覆盖中、英、…——<a href=\"https://www.free-api.com/doc/229\" target='_blank'>接口地址</a><br><b>乌云漏洞(可在线调用)</b>:查看乌云最新的安全漏洞——<a href=\"https://www.free-api.com/doc/230\" target='_blank'>接口地址</a><br><b>微信公众号查询(可在线调用)</b>:根据关键字搜索热门微信文章、微信公众号等…——<a href=\"https://www.free-api.com/doc/231\" target='_blank'>接口地址</a><br><b>在线分词(可在线调用)</b>:基于深度学习的中文在线抽词——<a href=\"https://www.free-api.com/doc/232\" target='_blank'>接口地址</a><br><b>MD5破解(可在线调用)</b>:md5密文：16位，32位,sha1(4…——<a href=\"https://www.free-api.com/doc/233\" target='_blank'>接口地址</a><br><b>星座配对(可在线调用)</b>:星座配对测姻缘——<a href=\"https://www.free-api.com/doc/234\" target='_blank'>接口地址</a><br><b>生肖配对(可在线调用)</b>:生肖配对测姻缘——<a href=\"https://www.free-api.com/doc/235\" target='_blank'>接口地址</a><br><b>获取外网IP信息(可在线调用)</b>:取得客户端访问互联网时的外网ip及对应的…——<a href=\"https://www.free-api.com/doc/236\" target='_blank'>接口地址</a><br><b>百度权重(可在线调用)</b>:根据网址查询百度权重——<a href=\"https://www.free-api.com/doc/237\" target='_blank'>接口地址</a><br><b>新闻头条(可在线调用)</b>:最新新闻头条——<a href=\"https://www.free-api.com/doc/238\" target='_blank'>接口地址</a><br><b>星座运势(可在线调用)</b>:黄道十二星座每日、每月、每年运势、不间断…——<a href=\"https://www.free-api.com/doc/239\" target='_blank'>接口地址</a><br></p>\n<hr>\n<p>2019.7.3更新接口</p>\n<hr>\n<p><b>实时段子(可在线调用)</b>:实时段子,神评版本——<a href=\"https://www.free-api.com/doc/240\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>音乐搜索(可在线调用)</b>:根据音乐名称返回音乐详情——<a href=\"https://www.free-api.com/doc/241\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>小说查询(可在线调用)</b>:获取小说的详细信息——<a href=\"https://www.free-api.com/doc/242\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取最近天气情况——<a href=\"https://www.free-api.com/doc/243\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>音悦tai搜索</b>:音悦Tai-是以高清MV为主的娱乐视频网…——<a href=\"https://www.free-api.com/doc/244\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>识别身份证文字(可在线调用)</b>:AI人工智能识别身份证图像文字 URL图…——<a href=\"https://www.free-api.com/doc/245\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>编码解码</b>:常见的编码和解码——<a href=\"https://www.free-api.com/doc/246\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>网站备案查询</b>:网站备案信息查询接口——<a href=\"https://www.free-api.com/doc/247\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>身份证信息查询(可在线调用)</b>:身份证信息查询(不支持查询百岁老人)——<a href=\"https://www.free-api.com/doc/248\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>图片PS</b>:在线图片加文字,返回为字符串,需要处理下——<a href=\"https://www.free-api.com/doc/249\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>一言</b>:随机返回一句话——<a href=\"https://www.free-api.com/doc/250\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>短链接生成与还原</b>:短链接生成与还原，包括新浪、腾讯、百度——<a href=\"https://www.free-api.com/doc/251\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取用户大致信息</b>:获取用户信息如网络运营商等等——<a href=\"https://www.free-api.com/doc/254\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>三合一收款码</b>:包括支付宝，qq，微信——<a href=\"https://www.free-api.com/doc/255\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP查询</b>:根据ip地址获取其所在省市区——<a href=\"https://www.free-api.com/doc/252\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP经纬度查询</b>:根据ip地址和经纬度获取其所在省市区——<a href=\"https://www.free-api.com/doc/253\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.8.7更新接口</p>\n<hr>\n<p><b>淘宝ip(可在线调用)</b>:来自淘宝的ip查询，可以根据ip地址查询…——<a href=\"https://www.free-api.com/doc/256\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>360ip(可在线调用)</b>:来自360的ip查询，可以根据ip地址查…——<a href=\"https://www.free-api.com/doc/257\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地理编码(可在线调用)</b>:将详细的结构化地址转换为高德经纬度坐标。…——<a href=\"https://www.free-api.com/doc/258\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>逆地理编码(可在线调用)</b>:将经纬度转换为详细结构化的地址，且返回附…——<a href=\"https://www.free-api.com/doc/259\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>步行路径规划</b>:可以规划100KM以内的步行通勤方案，并…——<a href=\"https://www.free-api.com/doc/260\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>驾车路径规划(可在线调用)</b>:规划以小客车、轿车通勤出行的方案，并且返…——<a href=\"https://www.free-api.com/doc/261\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>公交路径规划</b>:规划综合各类公共（火车、公交、地铁）交通…——<a href=\"https://www.free-api.com/doc/262\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>骑行路径规划(可在线调用)</b>:用于规划骑行通勤方案，规划时不会考虑路况…——<a href=\"https://www.free-api.com/doc/263\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>距离测量</b>:根据经纬度测量距离——<a href=\"https://www.free-api.com/doc/264\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>行政区域查询(可在线调用)</b>:根据用户输入的搜索条件可以帮助用户快速的…——<a href=\"https://www.free-api.com/doc/265\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>矩形区域交通态势</b>:能够确定矩形交通态势情况，路况信息2分钟…——<a href=\"https://www.free-api.com/doc/266\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>圆形区域交通态势</b>:能够确定圆形交通态势情况，路况信息2分钟…——<a href=\"https://www.free-api.com/doc/267\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>指定线路交通态势</b>:能够确定指定线路交通情况，路况信息2分钟…——<a href=\"https://www.free-api.com/doc/268\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>输入提示(可在线调用)</b>:提供根据用户输入的关键词查询返回建议列表——<a href=\"https://www.free-api.com/doc/269\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:查询目标区域当前/未来的天气情况——<a href=\"https://www.free-api.com/doc/270\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP定位(可在线调用)</b>:将IP信息转换为地理位置信息——<a href=\"https://www.free-api.com/doc/271\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地点范围查询(可在线调用)</b>:根据经纬度查询查询其地址相关信息——<a href=\"https://www.free-api.com/doc/272\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.9.9更新接口</p>\n<hr>\n<p><b>行政区划区域检索(可在线调用)</b>:开发者可通过该功能，检索某一行政区划内（…——<a href=\"https://www.free-api.com/doc/273\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>圆形区域检索(可在线调用)</b>:开发者可设置圆心和半径，检索圆形区域内的…——<a href=\"https://www.free-api.com/doc/274\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>矩形区域检索(可在线调用)</b>:开发者可设置检索区域左下角和右上角坐标，…——<a href=\"https://www.free-api.com/doc/275\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地点详情检索(可在线调用)</b>:地点详情检索针对指定POI，检索其相关的…——<a href=\"https://www.free-api.com/doc/276\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地点输入提示(可在线调用)</b>:用户可通过该服务，匹配用户输入关键词的地…——<a href=\"https://www.free-api.com/doc/277\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>地理编码服务(可在线调用)</b>:用户可通过该功能，将结构化地址（省/市/…——<a href=\"https://www.free-api.com/doc/278\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>全球逆地理编码(可在线调用)</b>:用户可通过该功能，将位置坐标解析成对应的…——<a href=\"https://www.free-api.com/doc/279\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>公交路线规划(可在线调用)</b>:根据起点和终点检索符合条件的公共交通方案…——<a href=\"https://www.free-api.com/doc/280\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>骑行路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的骑行路线规划…——<a href=\"https://www.free-api.com/doc/281\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>驾车路线规划(可在线调用)</b>:根据起终点坐标检索符合条件的驾车路线规划…——<a href=\"https://www.free-api.com/doc/282\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>批量算路</b>:用户可通过该服务，根据起点和终点坐标计算…——<a href=\"https://www.free-api.com/doc/283\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>普通IP定位(可在线调用)</b>:用户可以通过该服务，根据IP定位来获取大…——<a href=\"https://www.free-api.com/doc/284\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>道路实时路况查询(可在线调用)</b>:查询具体道路的实时拥堵评价和拥堵路段、拥…——<a href=\"https://www.free-api.com/doc/285\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>时间偏移查询(可在线调用)</b>:查询坐标所在地与协调世界时的时间偏移信息…——<a href=\"https://www.free-api.com/doc/286\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>周边上车点推荐(可在线调用)</b>:用户可通过该功能检索坐标点周围的上车点。…——<a href=\"https://www.free-api.com/doc/287\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>非百度坐标系转换(可在线调用)</b>:用户可通过该服务，实现 非百度坐标系→百…——<a href=\"https://www.free-api.com/doc/288\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>快递查询(可在线调用)</b>:可根据快递单号查询大部分主流快递的快递信…——<a href=\"https://www.free-api.com/doc/289\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>文件转换</b>:文件转换成指定格式，成功则返回成功转换的…——<a href=\"https://www.free-api.com/doc/290\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取文件转换内容</b>:根据文件转换成功所获取的id，查询转换成…——<a href=\"https://www.free-api.com/doc/291\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.10.8更新接口</p>\n<hr>\n<p><b>全球IP地理位置(可在线调用)</b>:单个IPv4 / IPv6地址或域名…——<a href=\"https://www.free-api.com/doc/292\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>域名备案(可在线调用)</b>:根据域名查询域名备案状态——<a href=\"https://www.free-api.com/doc/293\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>十五天天气预报</b>:采用城市ID来精准查询15天内的天气，接…——<a href=\"https://www.free-api.com/doc/294\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>农历查询(可在线调用)</b>:根据日期获取农历、黄历、禁忌、星期、生肖…——<a href=\"https://www.free-api.com/doc/295\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>ICP备案查询(可在线调用)</b>:根据域名查询ICP备案号——<a href=\"https://www.free-api.com/doc/296\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>三合一收款二维码</b>:将QQ、微信、支付宝收款集合到一起，省去…——<a href=\"https://www.free-api.com/doc/297\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>二维码生成</b>:将网址直接转换成二维码图片——<a href=\"https://www.free-api.com/doc/298\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>二维码解码(可在线调用)</b>:将二维码图片进行解码，解析处理——<a href=\"https://www.free-api.com/doc/299\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>短网址生成(可在线调用)</b>:将长网址进行缩短，支持百度、新浪、腾讯短…——<a href=\"https://www.free-api.com/doc/300\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>短网址还原(可在线调用)</b>:将缩短的短网址进行还原,支持常见的短网址——<a href=\"https://www.free-api.com/doc/301\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>网易云音乐随机歌曲(可在线调用)</b>:网易云音乐，随机歌曲输出——<a href=\"https://www.free-api.com/doc/302\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取访客相关信息(可在线调用)</b>:根据访客IP地址，操作系统，浏览器，访问…——<a href=\"https://www.free-api.com/doc/303\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>随机头像输出(可在线调用)</b>:随机头像输出——<a href=\"https://www.free-api.com/doc/304\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.11.5更新接口</p>\n<hr>\n<p><b>文章短篇</b>:根据日期获取一篇文章，有网上的，也有名家…——<a href=\"https://www.free-api.com/doc/305\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>必应故事</b>:随机获取来自必应的故事，可根据pid获取…——<a href=\"https://www.free-api.com/doc/306\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>每日一言</b>:获取来自一言、有道或金山词霸的每日一言内…——<a href=\"https://www.free-api.com/doc/307\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>二维码解析</b>:还原二维码的原始URL，支持支付宝，微信…——<a href=\"https://www.free-api.com/doc/308\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>生成海报</b>:根据提交的内容格式化生成可分享的精美海报——<a href=\"https://www.free-api.com/doc/309\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>历史上的今天</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/310\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>生成二维码</b>:可根据传入的内容，生成对应的二维码，还可…——<a href=\"https://www.free-api.com/doc/311\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP地址详情信息</b>:IP地址详情信息查询——<a href=\"https://www.free-api.com/doc/312\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>XLS生成</b>:生成XLS——<a href=\"https://www.free-api.com/doc/313\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>土味情话</b>:和妹妹说的情话，返回一句随机的内容——<a href=\"https://www.free-api.com/doc/314\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>随机笑话(可在线调用)</b>:随机的笑话——<a href=\"https://www.free-api.com/doc/315\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>2019.12.4更新接口</p>\n<hr>\n<p><b>经纬度信息(可在线调用)</b>:获取当前经纬度信息——<a href=\"https://www.free-api.com/doc/316\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>历史上的今天(可在线调用)</b>:历史上的今天——<a href=\"https://www.free-api.com/doc/317\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>Bing 壁纸获取(可在线调用)</b>:获取最近的Bing 壁纸——<a href=\"https://www.free-api.com/doc/318\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:获取今天和未来三天的天气情况，来源于高德——<a href=\"https://www.free-api.com/doc/319\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市名，获取今天和未来三天的天气情况…——<a href=\"https://www.free-api.com/doc/320\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>天气查询(可在线调用)</b>:根据城市id，获取未来15天的天气情况，…——<a href=\"https://www.free-api.com/doc/321\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>手机归属地查询(可在线调用)</b>:根据手机号码查询手机号的归属地信息——<a href=\"https://www.free-api.com/doc/322\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>手机归属地查询</b>:根据手机号码查询手机号的归属地信息，来源…——<a href=\"https://www.free-api.com/doc/323\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>IP域名归属地查询(可在线调用)</b>:查询IP或者域名归属地——<a href=\"https://www.free-api.com/doc/324\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>身份证查询(可在线调用)</b>:根据身份证获取该身份证号码的籍贯，出生年…——<a href=\"https://www.free-api.com/doc/325\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>淘宝关键字(可在线调用)</b>:淘宝搜索关键字——<a href=\"https://www.free-api.com/doc/326\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>百度关键字</b>:百度搜索关键字——<a href=\"https://www.free-api.com/doc/327\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>Bing关键字(可在线调用)</b>:Bing搜索关键字——<a href=\"https://www.free-api.com/doc/328\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>获取用户设备信息(可在线调用)</b>:通过 user-agent 分析用户设备…——<a href=\"https://www.free-api.com/doc/329\" target=\"_blank\" rel=\"noopener\">接口地址</a><br><b>百度音乐搜索(可在线调用)</b>:根据关键字获取音乐的相关信息——<a href=\"https://www.free-api.com/doc/330\" target=\"_blank\" rel=\"noopener\">接口地址</a></p>\n<hr>\n<p>努力添加中……</p>\n<p><strong>原文链接：<a href=\"https://github.com/fangzesheng/free-api\" target=\"_blank\" rel=\"noopener\">https://github.com/fangzesheng/free-api</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"图解SQL的各种join用法","author":"ergz","date":"2019-11-09T07:50:00.000Z","_content":"**下图展示了LEFT JOIN、RIGHT JOIN、INNER JOIN、OUTER JOIN 相关的 7 种用法**\n\n![upload successful](/images/sql_201912121520.png)\n<!-- more -->\n#### 具体分解如下：\n##### 1.INNER JOIN（内连接）\n![upload successful](/images/sql_201912121523.png)\n```sql\nSELECT <select_list> \nFROM Table_A A\nINNER JOIN Table_B B\nON A.Key = B.Key\n```\n##### 2.LEFT JOIN（左连接）\n![upload successful](/images/sql_201912121558.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nLEFT JOIN Table_B B\nON A.Key = B.Key\n```\n##### 3.RIGHT JOIN（右连接）\n![upload successful](/images/sql_201912121528.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nRIGHT JOIN Table_B B\nON A.Key = B.Key\n```\n##### 4.OUTER JOIN（外连接）\n![upload successful](/images/sql_201912121532.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nFULL OUTER JOIN Table_B B\nON A.Key = B.Key\n```\n##### 5.LEFT JOIN EXCLUDING INNER JOIN（左连接-内连接）\n![upload successful](/images/sql_201912121531.png)\n```sql\nSELECT <select_list> \nFROM Table_A A\nLEFT JOIN Table_B B\nON A.Key = B.Key\nWHERE B.Key IS NULL\n```\n##### 6.RIGHT JOIN EXCLUDING INNER JOIN（右连接-内连接）\n![upload successful](/images/sql_201912121552.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nRIGHT JOIN Table_B B\nON A.Key = B.Key\nWHERE A.Key IS NULL\n```\n##### 7.OUTER JOIN EXCLUDING INNER JOIN（外连接-内连接）\n![upload successful](/images/sql_201912121553.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nFULL OUTER JOIN Table_B B\nON A.Key = B.Key\nWHERE A.Key IS NULL OR B.Key IS NULL\n```\n\n**原文链接：[看一张图秒懂SQL的各种JOIN用法](https://www.toutiao.com/i6766789647902179847)\n欢迎转载，请注明出处！**","source":"_posts/diagrams-for-various-join-uses-of-sql.md","raw":"title: 图解SQL的各种join用法\nauthor: ergz\ntags:\n  - sql\ncategories:\n  - 数据库\ndate: 2019-11-09 15:50:00\n---\n**下图展示了LEFT JOIN、RIGHT JOIN、INNER JOIN、OUTER JOIN 相关的 7 种用法**\n\n![upload successful](/images/sql_201912121520.png)\n<!-- more -->\n#### 具体分解如下：\n##### 1.INNER JOIN（内连接）\n![upload successful](/images/sql_201912121523.png)\n```sql\nSELECT <select_list> \nFROM Table_A A\nINNER JOIN Table_B B\nON A.Key = B.Key\n```\n##### 2.LEFT JOIN（左连接）\n![upload successful](/images/sql_201912121558.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nLEFT JOIN Table_B B\nON A.Key = B.Key\n```\n##### 3.RIGHT JOIN（右连接）\n![upload successful](/images/sql_201912121528.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nRIGHT JOIN Table_B B\nON A.Key = B.Key\n```\n##### 4.OUTER JOIN（外连接）\n![upload successful](/images/sql_201912121532.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nFULL OUTER JOIN Table_B B\nON A.Key = B.Key\n```\n##### 5.LEFT JOIN EXCLUDING INNER JOIN（左连接-内连接）\n![upload successful](/images/sql_201912121531.png)\n```sql\nSELECT <select_list> \nFROM Table_A A\nLEFT JOIN Table_B B\nON A.Key = B.Key\nWHERE B.Key IS NULL\n```\n##### 6.RIGHT JOIN EXCLUDING INNER JOIN（右连接-内连接）\n![upload successful](/images/sql_201912121552.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nRIGHT JOIN Table_B B\nON A.Key = B.Key\nWHERE A.Key IS NULL\n```\n##### 7.OUTER JOIN EXCLUDING INNER JOIN（外连接-内连接）\n![upload successful](/images/sql_201912121553.png)\n```sql\nSELECT <select_list>\nFROM Table_A A\nFULL OUTER JOIN Table_B B\nON A.Key = B.Key\nWHERE A.Key IS NULL OR B.Key IS NULL\n```\n\n**原文链接：[看一张图秒懂SQL的各种JOIN用法](https://www.toutiao.com/i6766789647902179847)\n欢迎转载，请注明出处！**","slug":"diagrams-for-various-join-uses-of-sql","published":1,"updated":"2019-12-18T15:43:04.408Z","_id":"ck42fq5lv0000m9d2268vbs31","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>下图展示了LEFT JOIN、RIGHT JOIN、INNER JOIN、OUTER JOIN 相关的 7 种用法</strong></p>\n<p><img src=\"/images/sql_201912121520.png\" alt=\"upload successful\"></p>\n<a id=\"more\"></a>\n<h4 id=\"具体分解如下：\"><a href=\"#具体分解如下：\" class=\"headerlink\" title=\"具体分解如下：\"></a>具体分解如下：</h4><h5 id=\"1-INNER-JOIN（内连接）\"><a href=\"#1-INNER-JOIN（内连接）\" class=\"headerlink\" title=\"1.INNER JOIN（内连接）\"></a>1.INNER JOIN（内连接）</h5><p><img src=\"/images/sql_201912121523.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt; </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-LEFT-JOIN（左连接）\"><a href=\"#2-LEFT-JOIN（左连接）\" class=\"headerlink\" title=\"2.LEFT JOIN（左连接）\"></a>2.LEFT JOIN（左连接）</h5><p><img src=\"/images/sql_201912121558.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-RIGHT-JOIN（右连接）\"><a href=\"#3-RIGHT-JOIN（右连接）\" class=\"headerlink\" title=\"3.RIGHT JOIN（右连接）\"></a>3.RIGHT JOIN（右连接）</h5><p><img src=\"/images/sql_201912121528.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-OUTER-JOIN（外连接）\"><a href=\"#4-OUTER-JOIN（外连接）\" class=\"headerlink\" title=\"4.OUTER JOIN（外连接）\"></a>4.OUTER JOIN（外连接）</h5><p><img src=\"/images/sql_201912121532.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-LEFT-JOIN-EXCLUDING-INNER-JOIN（左连接-内连接）\"><a href=\"#5-LEFT-JOIN-EXCLUDING-INNER-JOIN（左连接-内连接）\" class=\"headerlink\" title=\"5.LEFT JOIN EXCLUDING INNER JOIN（左连接-内连接）\"></a>5.LEFT JOIN EXCLUDING INNER JOIN（左连接-内连接）</h5><p><img src=\"/images/sql_201912121531.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt; </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> B.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"6-RIGHT-JOIN-EXCLUDING-INNER-JOIN（右连接-内连接）\"><a href=\"#6-RIGHT-JOIN-EXCLUDING-INNER-JOIN（右连接-内连接）\" class=\"headerlink\" title=\"6.RIGHT JOIN EXCLUDING INNER JOIN（右连接-内连接）\"></a>6.RIGHT JOIN EXCLUDING INNER JOIN（右连接-内连接）</h5><p><img src=\"/images/sql_201912121552.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> A.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"7-OUTER-JOIN-EXCLUDING-INNER-JOIN（外连接-内连接）\"><a href=\"#7-OUTER-JOIN-EXCLUDING-INNER-JOIN（外连接-内连接）\" class=\"headerlink\" title=\"7.OUTER JOIN EXCLUDING INNER JOIN（外连接-内连接）\"></a>7.OUTER JOIN EXCLUDING INNER JOIN（外连接-内连接）</h5><p><img src=\"/images/sql_201912121553.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> A.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">OR</span> B.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>原文链接：<a href=\"https://www.toutiao.com/i6766789647902179847\" target=\"_blank\" rel=\"noopener\">看一张图秒懂SQL的各种JOIN用法</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>下图展示了LEFT JOIN、RIGHT JOIN、INNER JOIN、OUTER JOIN 相关的 7 种用法</strong></p>\n<p><img src=\"/images/sql_201912121520.png\" alt=\"upload successful\"></p>","more":"<h4 id=\"具体分解如下：\"><a href=\"#具体分解如下：\" class=\"headerlink\" title=\"具体分解如下：\"></a>具体分解如下：</h4><h5 id=\"1-INNER-JOIN（内连接）\"><a href=\"#1-INNER-JOIN（内连接）\" class=\"headerlink\" title=\"1.INNER JOIN（内连接）\"></a>1.INNER JOIN（内连接）</h5><p><img src=\"/images/sql_201912121523.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt; </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-LEFT-JOIN（左连接）\"><a href=\"#2-LEFT-JOIN（左连接）\" class=\"headerlink\" title=\"2.LEFT JOIN（左连接）\"></a>2.LEFT JOIN（左连接）</h5><p><img src=\"/images/sql_201912121558.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-RIGHT-JOIN（右连接）\"><a href=\"#3-RIGHT-JOIN（右连接）\" class=\"headerlink\" title=\"3.RIGHT JOIN（右连接）\"></a>3.RIGHT JOIN（右连接）</h5><p><img src=\"/images/sql_201912121528.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"4-OUTER-JOIN（外连接）\"><a href=\"#4-OUTER-JOIN（外连接）\" class=\"headerlink\" title=\"4.OUTER JOIN（外连接）\"></a>4.OUTER JOIN（外连接）</h5><p><img src=\"/images/sql_201912121532.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br></pre></td></tr></table></figure>\n<h5 id=\"5-LEFT-JOIN-EXCLUDING-INNER-JOIN（左连接-内连接）\"><a href=\"#5-LEFT-JOIN-EXCLUDING-INNER-JOIN（左连接-内连接）\" class=\"headerlink\" title=\"5.LEFT JOIN EXCLUDING INNER JOIN（左连接-内连接）\"></a>5.LEFT JOIN EXCLUDING INNER JOIN（左连接-内连接）</h5><p><img src=\"/images/sql_201912121531.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt; </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> B.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"6-RIGHT-JOIN-EXCLUDING-INNER-JOIN（右连接-内连接）\"><a href=\"#6-RIGHT-JOIN-EXCLUDING-INNER-JOIN（右连接-内连接）\" class=\"headerlink\" title=\"6.RIGHT JOIN EXCLUDING INNER JOIN（右连接-内连接）\"></a>6.RIGHT JOIN EXCLUDING INNER JOIN（右连接-内连接）</h5><p><img src=\"/images/sql_201912121552.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">RIGHT</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> A.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"7-OUTER-JOIN-EXCLUDING-INNER-JOIN（外连接-内连接）\"><a href=\"#7-OUTER-JOIN-EXCLUDING-INNER-JOIN（外连接-内连接）\" class=\"headerlink\" title=\"7.OUTER JOIN EXCLUDING INNER JOIN（外连接-内连接）\"></a>7.OUTER JOIN EXCLUDING INNER JOIN（外连接-内连接）</h5><p><img src=\"/images/sql_201912121553.png\" alt=\"upload successful\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> &lt;select_list&gt;</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Table_A A</span><br><span class=\"line\"><span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> Table_B B</span><br><span class=\"line\"><span class=\"keyword\">ON</span> A.Key = B.Key</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> A.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">OR</span> B.Key <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>原文链接：<a href=\"https://www.toutiao.com/i6766789647902179847\" target=\"_blank\" rel=\"noopener\">看一张图秒懂SQL的各种JOIN用法</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"Nginx搭建HTTP文件服务器","author":"ergz","date":"2019-11-14T08:04:00.000Z","_content":"### 介绍\n**Nginx(engine x)是一个高性能的HTTP和反向代理web服务器，同时能提供了IMAP/POP3/SMTP服务，Nginx的优点：**\n\n##### 1.高性能，支持高并发连接\n##### 2.低资源消耗，内存占用少\n##### 3.稳定性高\n##### 4.配置简单\n##### 5.支持热部署\n<!-- more -->\n\n### 使用\n#### 1.检查Nignx是否安装\n**使用以下命令检查Nginx服务器状态：**\n```bash\nsystemctl status nginx\n```\n#### 2.安装Nginx(ubuntu)\n**命令：**\n```bash\nsudo apt-get install nginx\n```\n**Ubuntu安装之后的文件结构大致为：**\n*\t所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下\n*\t程序文件/usr/sbin/nginx\n*\t日志在/var/log/nginx目录中\n*\t启动脚本nginx在/etc/init.d/下\n*\t默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)\n\n**在/etc/nginx目录下，nginx.conf是Nginx的核心配置文件，可以修改处理器数量、日志路径、pid文件等。在nginx.conf文件中有一段代码：`inxclude /etc/nginx/conf.d/*.conf`,这表示可以将自己的配置文件放在conf.d/中，Nginx会自动识别这个配置文件**\n#### 3.修改配置文件\n`vim /etc/nginx/sites-available/default`\n```bash\nserver {\n        listen 8080 default_server;\n        listen [::]:8080 default_server;\n        #root /usr/share/nginx/html;\n        root /usr/local/data/file;\n        server_name _;\n        location / {\n           # First attempt to serve request as file, then\n           # as directory, then fall back to displaying a 404.\n           try_files $uri $uri/ =404;\n           autoindex on;#显示目录\n           autoindex_exact_size on;#显示文件大小\n           autoindex_localtime on;#显示文件时间\n           charset utf-8;\n        }\n}\n```\n#### 4.启动nginx\n```bash\n/etc/init.d/nginx start\n```\n#### 5.浏览器访问\n浏览器打开：`http://localhost:8080`可以看到/data/file目录下的文件，点击可下载\n\n#### 6.修改配置后重载\n```bash\n/etc/init.d/nginx reload\n```\n\n**本文链接：[Nginx搭建HTTP文件服务器](http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html)\n欢迎转载，请注明出处！**","source":"_posts/nginx-build-http-file-system.md","raw":"title: Nginx搭建HTTP文件服务器\nauthor: ergz\ntags:\n  - Nginx\ncategories:\n  - linux\ndate: 2019-11-14 16:04:00\n---\n### 介绍\n**Nginx(engine x)是一个高性能的HTTP和反向代理web服务器，同时能提供了IMAP/POP3/SMTP服务，Nginx的优点：**\n\n##### 1.高性能，支持高并发连接\n##### 2.低资源消耗，内存占用少\n##### 3.稳定性高\n##### 4.配置简单\n##### 5.支持热部署\n<!-- more -->\n\n### 使用\n#### 1.检查Nignx是否安装\n**使用以下命令检查Nginx服务器状态：**\n```bash\nsystemctl status nginx\n```\n#### 2.安装Nginx(ubuntu)\n**命令：**\n```bash\nsudo apt-get install nginx\n```\n**Ubuntu安装之后的文件结构大致为：**\n*\t所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下\n*\t程序文件/usr/sbin/nginx\n*\t日志在/var/log/nginx目录中\n*\t启动脚本nginx在/etc/init.d/下\n*\t默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)\n\n**在/etc/nginx目录下，nginx.conf是Nginx的核心配置文件，可以修改处理器数量、日志路径、pid文件等。在nginx.conf文件中有一段代码：`inxclude /etc/nginx/conf.d/*.conf`,这表示可以将自己的配置文件放在conf.d/中，Nginx会自动识别这个配置文件**\n#### 3.修改配置文件\n`vim /etc/nginx/sites-available/default`\n```bash\nserver {\n        listen 8080 default_server;\n        listen [::]:8080 default_server;\n        #root /usr/share/nginx/html;\n        root /usr/local/data/file;\n        server_name _;\n        location / {\n           # First attempt to serve request as file, then\n           # as directory, then fall back to displaying a 404.\n           try_files $uri $uri/ =404;\n           autoindex on;#显示目录\n           autoindex_exact_size on;#显示文件大小\n           autoindex_localtime on;#显示文件时间\n           charset utf-8;\n        }\n}\n```\n#### 4.启动nginx\n```bash\n/etc/init.d/nginx start\n```\n#### 5.浏览器访问\n浏览器打开：`http://localhost:8080`可以看到/data/file目录下的文件，点击可下载\n\n#### 6.修改配置后重载\n```bash\n/etc/init.d/nginx reload\n```\n\n**本文链接：[Nginx搭建HTTP文件服务器](http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html)\n欢迎转载，请注明出处！**","slug":"nginx-build-http-file-system","published":1,"updated":"2019-12-18T14:10:04.506Z","_id":"ck45dfwof0000d0d21y672pzb","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><strong>Nginx(engine x)是一个高性能的HTTP和反向代理web服务器，同时能提供了IMAP/POP3/SMTP服务，Nginx的优点：</strong></p>\n<h5 id=\"1-高性能，支持高并发连接\"><a href=\"#1-高性能，支持高并发连接\" class=\"headerlink\" title=\"1.高性能，支持高并发连接\"></a>1.高性能，支持高并发连接</h5><h5 id=\"2-低资源消耗，内存占用少\"><a href=\"#2-低资源消耗，内存占用少\" class=\"headerlink\" title=\"2.低资源消耗，内存占用少\"></a>2.低资源消耗，内存占用少</h5><h5 id=\"3-稳定性高\"><a href=\"#3-稳定性高\" class=\"headerlink\" title=\"3.稳定性高\"></a>3.稳定性高</h5><h5 id=\"4-配置简单\"><a href=\"#4-配置简单\" class=\"headerlink\" title=\"4.配置简单\"></a>4.配置简单</h5><h5 id=\"5-支持热部署\"><a href=\"#5-支持热部署\" class=\"headerlink\" title=\"5.支持热部署\"></a>5.支持热部署</h5><a id=\"more\"></a>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><h4 id=\"1-检查Nignx是否安装\"><a href=\"#1-检查Nignx是否安装\" class=\"headerlink\" title=\"1.检查Nignx是否安装\"></a>1.检查Nignx是否安装</h4><p><strong>使用以下命令检查Nginx服务器状态：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-安装Nginx-ubuntu\"><a href=\"#2-安装Nginx-ubuntu\" class=\"headerlink\" title=\"2.安装Nginx(ubuntu)\"></a>2.安装Nginx(ubuntu)</h4><p><strong>命令：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nginx</span><br></pre></td></tr></table></figure>\n<p><strong>Ubuntu安装之后的文件结构大致为：</strong></p>\n<ul>\n<li>所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下</li>\n<li>程序文件/usr/sbin/nginx</li>\n<li>日志在/var/log/nginx目录中</li>\n<li>启动脚本nginx在/etc/init.d/下</li>\n<li>默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)</li>\n</ul>\n<p><strong>在/etc/nginx目录下，nginx.conf是Nginx的核心配置文件，可以修改处理器数量、日志路径、pid文件等。在nginx.conf文件中有一段代码：<code>inxclude /etc/nginx/conf.d/*.conf</code>,这表示可以将自己的配置文件放在conf.d/中，Nginx会自动识别这个配置文件</strong></p>\n<h4 id=\"3-修改配置文件\"><a href=\"#3-修改配置文件\" class=\"headerlink\" title=\"3.修改配置文件\"></a>3.修改配置文件</h4><p><code>vim /etc/nginx/sites-available/default</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 8080 default_server;</span><br><span class=\"line\">        listen [::]:8080 default_server;</span><br><span class=\"line\">        <span class=\"comment\">#root /usr/share/nginx/html;</span></span><br><span class=\"line\">        root /usr/<span class=\"built_in\">local</span>/data/file;</span><br><span class=\"line\">        server_name _;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">           <span class=\"comment\"># First attempt to serve request as file, then</span></span><br><span class=\"line\">           <span class=\"comment\"># as directory, then fall back to displaying a 404.</span></span><br><span class=\"line\">           try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">           autoindex on;<span class=\"comment\">#显示目录</span></span><br><span class=\"line\">           autoindex_exact_size on;<span class=\"comment\">#显示文件大小</span></span><br><span class=\"line\">           autoindex_localtime on;<span class=\"comment\">#显示文件时间</span></span><br><span class=\"line\">           charset utf-8;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-启动nginx\"><a href=\"#4-启动nginx\" class=\"headerlink\" title=\"4.启动nginx\"></a>4.启动nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/nginx start</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-浏览器访问\"><a href=\"#5-浏览器访问\" class=\"headerlink\" title=\"5.浏览器访问\"></a>5.浏览器访问</h4><p>浏览器打开：<code>http://localhost:8080</code>可以看到/data/file目录下的文件，点击可下载</p>\n<h4 id=\"6-修改配置后重载\"><a href=\"#6-修改配置后重载\" class=\"headerlink\" title=\"6.修改配置后重载\"></a>6.修改配置后重载</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/nginx reload</span><br></pre></td></tr></table></figure>\n\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html\">Nginx搭建HTTP文件服务器</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><strong>Nginx(engine x)是一个高性能的HTTP和反向代理web服务器，同时能提供了IMAP/POP3/SMTP服务，Nginx的优点：</strong></p>\n<h5 id=\"1-高性能，支持高并发连接\"><a href=\"#1-高性能，支持高并发连接\" class=\"headerlink\" title=\"1.高性能，支持高并发连接\"></a>1.高性能，支持高并发连接</h5><h5 id=\"2-低资源消耗，内存占用少\"><a href=\"#2-低资源消耗，内存占用少\" class=\"headerlink\" title=\"2.低资源消耗，内存占用少\"></a>2.低资源消耗，内存占用少</h5><h5 id=\"3-稳定性高\"><a href=\"#3-稳定性高\" class=\"headerlink\" title=\"3.稳定性高\"></a>3.稳定性高</h5><h5 id=\"4-配置简单\"><a href=\"#4-配置简单\" class=\"headerlink\" title=\"4.配置简单\"></a>4.配置简单</h5><h5 id=\"5-支持热部署\"><a href=\"#5-支持热部署\" class=\"headerlink\" title=\"5.支持热部署\"></a>5.支持热部署</h5>","more":"<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><h4 id=\"1-检查Nignx是否安装\"><a href=\"#1-检查Nignx是否安装\" class=\"headerlink\" title=\"1.检查Nignx是否安装\"></a>1.检查Nignx是否安装</h4><p><strong>使用以下命令检查Nginx服务器状态：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl status nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-安装Nginx-ubuntu\"><a href=\"#2-安装Nginx-ubuntu\" class=\"headerlink\" title=\"2.安装Nginx(ubuntu)\"></a>2.安装Nginx(ubuntu)</h4><p><strong>命令：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install nginx</span><br></pre></td></tr></table></figure>\n<p><strong>Ubuntu安装之后的文件结构大致为：</strong></p>\n<ul>\n<li>所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下</li>\n<li>程序文件/usr/sbin/nginx</li>\n<li>日志在/var/log/nginx目录中</li>\n<li>启动脚本nginx在/etc/init.d/下</li>\n<li>默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)</li>\n</ul>\n<p><strong>在/etc/nginx目录下，nginx.conf是Nginx的核心配置文件，可以修改处理器数量、日志路径、pid文件等。在nginx.conf文件中有一段代码：<code>inxclude /etc/nginx/conf.d/*.conf</code>,这表示可以将自己的配置文件放在conf.d/中，Nginx会自动识别这个配置文件</strong></p>\n<h4 id=\"3-修改配置文件\"><a href=\"#3-修改配置文件\" class=\"headerlink\" title=\"3.修改配置文件\"></a>3.修改配置文件</h4><p><code>vim /etc/nginx/sites-available/default</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 8080 default_server;</span><br><span class=\"line\">        listen [::]:8080 default_server;</span><br><span class=\"line\">        <span class=\"comment\">#root /usr/share/nginx/html;</span></span><br><span class=\"line\">        root /usr/<span class=\"built_in\">local</span>/data/file;</span><br><span class=\"line\">        server_name _;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">           <span class=\"comment\"># First attempt to serve request as file, then</span></span><br><span class=\"line\">           <span class=\"comment\"># as directory, then fall back to displaying a 404.</span></span><br><span class=\"line\">           try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">           autoindex on;<span class=\"comment\">#显示目录</span></span><br><span class=\"line\">           autoindex_exact_size on;<span class=\"comment\">#显示文件大小</span></span><br><span class=\"line\">           autoindex_localtime on;<span class=\"comment\">#显示文件时间</span></span><br><span class=\"line\">           charset utf-8;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-启动nginx\"><a href=\"#4-启动nginx\" class=\"headerlink\" title=\"4.启动nginx\"></a>4.启动nginx</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/nginx start</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-浏览器访问\"><a href=\"#5-浏览器访问\" class=\"headerlink\" title=\"5.浏览器访问\"></a>5.浏览器访问</h4><p>浏览器打开：<code>http://localhost:8080</code>可以看到/data/file目录下的文件，点击可下载</p>\n<h4 id=\"6-修改配置后重载\"><a href=\"#6-修改配置后重载\" class=\"headerlink\" title=\"6.修改配置后重载\"></a>6.修改配置后重载</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/nginx reload</span><br></pre></td></tr></table></figure>\n\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html\">Nginx搭建HTTP文件服务器</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"Nginx反向代理实现二级域名与端口的映射","author":"ergz","date":"2019-12-14T09:27:00.000Z","_content":"**在之前的一篇文章：[Nginx搭建HTTP文件服务器](http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html)中,我们搭建了一个HTTP的文件服务器，通过8080端口来访问服务。现在我们想通过域名的方式（二级域名）来访问这个HTTP的文件服务器，我们知道通过浏览器URL地址的方式访问一个网站，比如`http://www.ergzcode.com`,默认的是去服务器找80端口下的服务，也就是`http://www.ergzcode.com:80`这个地址。考虑到80端口是比较特殊的端口，所以部署hexo时指定的端口是4000，这样将会导致只有使用`http://www.ergzcode.com:4000`才能访问到本站，但这种的URL无疑是让人接受不了的。**\n<!-- more -->\n**现在需要做到以下两点：**\n*\t将`http://www.ergzcode.com`的请求转发给4000端口下的应用程序，也就是通过这种URL访问本站\n*\t将`http://cdn.ergzcode.com`的请求转发给8080端口下的http文件服务器\n\n**当然在这之前，有个前提就是你需要让`cdn.ergzcode.com`和`www.ergzcode.com`这两个域名解析到你的服务器IP上，DNS解析在域名提供商那里作处理,这里不再介绍**\n\n**现在要做到上面的请求转发，就要用到Nginx的反向代理机制，下面来创建Nginx的配置文件，在`/etc/nginx/conf.d`目录下创建一个叫做reverse_proxy.conf的文件，文件名可以随意指定，但要以.conf为后缀名，然后加入下面的内容**\n```bash\nserver\n{\n        listen 80;#监听端口\n        server_name www.ergzcode.com;#根据域名跳转\n        location / {\n                proxy_redirect off;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://127.0.0.1:4000;#跳转的路径\n        }\n}\nserver\n{\n        listen 80;\n        server_name cdn.ergzcode.com;\n        #root /usr/local/data/file;\n        location / {\n                # try_files $uri $uri/ =404;\n                proxy_redirect off;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://127.0.0.1:8080;#跳转的路径\n        }\n}\n\n```\n**执行命令使修改配置生效`/etc/init.d/nginx reload`**\n\n访问本站：<http://www.ergzcode.com>\n访问HTTP服务器：<http://cdn.ergzcode.com>\n**完成！！**\n\n**本文链接：[Nginx反向代理实现二级域名与端口的映射](http://www.ergzcode.com/2019/12/14/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.html)\n欢迎转载，请注明出处！**\n\n\n","source":"_posts/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.md","raw":"title: Nginx反向代理实现二级域名与端口的映射\nauthor: ergz\ntags:\n  - Nginx\ncategories:\n  - linux\ndate: 2019-12-14 17:27:00\n---\n**在之前的一篇文章：[Nginx搭建HTTP文件服务器](http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html)中,我们搭建了一个HTTP的文件服务器，通过8080端口来访问服务。现在我们想通过域名的方式（二级域名）来访问这个HTTP的文件服务器，我们知道通过浏览器URL地址的方式访问一个网站，比如`http://www.ergzcode.com`,默认的是去服务器找80端口下的服务，也就是`http://www.ergzcode.com:80`这个地址。考虑到80端口是比较特殊的端口，所以部署hexo时指定的端口是4000，这样将会导致只有使用`http://www.ergzcode.com:4000`才能访问到本站，但这种的URL无疑是让人接受不了的。**\n<!-- more -->\n**现在需要做到以下两点：**\n*\t将`http://www.ergzcode.com`的请求转发给4000端口下的应用程序，也就是通过这种URL访问本站\n*\t将`http://cdn.ergzcode.com`的请求转发给8080端口下的http文件服务器\n\n**当然在这之前，有个前提就是你需要让`cdn.ergzcode.com`和`www.ergzcode.com`这两个域名解析到你的服务器IP上，DNS解析在域名提供商那里作处理,这里不再介绍**\n\n**现在要做到上面的请求转发，就要用到Nginx的反向代理机制，下面来创建Nginx的配置文件，在`/etc/nginx/conf.d`目录下创建一个叫做reverse_proxy.conf的文件，文件名可以随意指定，但要以.conf为后缀名，然后加入下面的内容**\n```bash\nserver\n{\n        listen 80;#监听端口\n        server_name www.ergzcode.com;#根据域名跳转\n        location / {\n                proxy_redirect off;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://127.0.0.1:4000;#跳转的路径\n        }\n}\nserver\n{\n        listen 80;\n        server_name cdn.ergzcode.com;\n        #root /usr/local/data/file;\n        location / {\n                # try_files $uri $uri/ =404;\n                proxy_redirect off;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_pass http://127.0.0.1:8080;#跳转的路径\n        }\n}\n\n```\n**执行命令使修改配置生效`/etc/init.d/nginx reload`**\n\n访问本站：<http://www.ergzcode.com>\n访问HTTP服务器：<http://cdn.ergzcode.com>\n**完成！！**\n\n**本文链接：[Nginx反向代理实现二级域名与端口的映射](http://www.ergzcode.com/2019/12/14/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.html)\n欢迎转载，请注明出处！**\n\n\n","slug":"nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports","published":1,"updated":"2019-12-18T14:03:57.775Z","_id":"ck45fyi070000fdd28yl73i40","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>在之前的一篇文章：<a href=\"http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html\">Nginx搭建HTTP文件服务器</a>中,我们搭建了一个HTTP的文件服务器，通过8080端口来访问服务。现在我们想通过域名的方式（二级域名）来访问这个HTTP的文件服务器，我们知道通过浏览器URL地址的方式访问一个网站，比如<code>http://www.ergzcode.com</code>,默认的是去服务器找80端口下的服务，也就是<code>http://www.ergzcode.com:80</code>这个地址。考虑到80端口是比较特殊的端口，所以部署hexo时指定的端口是4000，这样将会导致只有使用<code>http://www.ergzcode.com:4000</code>才能访问到本站，但这种的URL无疑是让人接受不了的。</strong></p>\n<a id=\"more\"></a>\n<p><strong>现在需要做到以下两点：</strong></p>\n<ul>\n<li>将<code>http://www.ergzcode.com</code>的请求转发给4000端口下的应用程序，也就是通过这种URL访问本站</li>\n<li>将<code>http://cdn.ergzcode.com</code>的请求转发给8080端口下的http文件服务器</li>\n</ul>\n<p><strong>当然在这之前，有个前提就是你需要让<code>cdn.ergzcode.com</code>和<code>www.ergzcode.com</code>这两个域名解析到你的服务器IP上，DNS解析在域名提供商那里作处理,这里不再介绍</strong></p>\n<p><strong>现在要做到上面的请求转发，就要用到Nginx的反向代理机制，下面来创建Nginx的配置文件，在<code>/etc/nginx/conf.d</code>目录下创建一个叫做reverse_proxy.conf的文件，文件名可以随意指定，但要以.conf为后缀名，然后加入下面的内容</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        listen 80;<span class=\"comment\">#监听端口</span></span><br><span class=\"line\">        server_name www.ergzcode.com;<span class=\"comment\">#根据域名跳转</span></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">                proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:4000;<span class=\"comment\">#跳转的路径</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name cdn.ergzcode.com;</span><br><span class=\"line\">        <span class=\"comment\">#root /usr/local/data/file;</span></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                <span class=\"comment\"># try_files $uri $uri/ =404;</span></span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">                proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:8080;<span class=\"comment\">#跳转的路径</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>执行命令使修改配置生效<code>/etc/init.d/nginx reload</code></strong></p>\n<p>访问本站：<a href=\"http://www.ergzcode.com\">http://www.ergzcode.com</a><br>访问HTTP服务器：<a href=\"http://cdn.ergzcode.com\" target=\"_blank\" rel=\"noopener\">http://cdn.ergzcode.com</a><br><strong>完成！！</strong></p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/14/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.html\">Nginx反向代理实现二级域名与端口的映射</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>在之前的一篇文章：<a href=\"http://www.ergzcode.com/2019/11/14/nginx-build-http-file-system.html\">Nginx搭建HTTP文件服务器</a>中,我们搭建了一个HTTP的文件服务器，通过8080端口来访问服务。现在我们想通过域名的方式（二级域名）来访问这个HTTP的文件服务器，我们知道通过浏览器URL地址的方式访问一个网站，比如<code>http://www.ergzcode.com</code>,默认的是去服务器找80端口下的服务，也就是<code>http://www.ergzcode.com:80</code>这个地址。考虑到80端口是比较特殊的端口，所以部署hexo时指定的端口是4000，这样将会导致只有使用<code>http://www.ergzcode.com:4000</code>才能访问到本站，但这种的URL无疑是让人接受不了的。</strong></p>","more":"<p><strong>现在需要做到以下两点：</strong></p>\n<ul>\n<li>将<code>http://www.ergzcode.com</code>的请求转发给4000端口下的应用程序，也就是通过这种URL访问本站</li>\n<li>将<code>http://cdn.ergzcode.com</code>的请求转发给8080端口下的http文件服务器</li>\n</ul>\n<p><strong>当然在这之前，有个前提就是你需要让<code>cdn.ergzcode.com</code>和<code>www.ergzcode.com</code>这两个域名解析到你的服务器IP上，DNS解析在域名提供商那里作处理,这里不再介绍</strong></p>\n<p><strong>现在要做到上面的请求转发，就要用到Nginx的反向代理机制，下面来创建Nginx的配置文件，在<code>/etc/nginx/conf.d</code>目录下创建一个叫做reverse_proxy.conf的文件，文件名可以随意指定，但要以.conf为后缀名，然后加入下面的内容</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        listen 80;<span class=\"comment\">#监听端口</span></span><br><span class=\"line\">        server_name www.ergzcode.com;<span class=\"comment\">#根据域名跳转</span></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">                proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:4000;<span class=\"comment\">#跳转的路径</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name cdn.ergzcode.com;</span><br><span class=\"line\">        <span class=\"comment\">#root /usr/local/data/file;</span></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">                <span class=\"comment\"># try_files $uri $uri/ =404;</span></span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">                proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">                proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">                proxy_pass http://127.0.0.1:8080;<span class=\"comment\">#跳转的路径</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>执行命令使修改配置生效<code>/etc/init.d/nginx reload</code></strong></p>\n<p>访问本站：<a href=\"http://www.ergzcode.com\">http://www.ergzcode.com</a><br>访问HTTP服务器：<a href=\"http://cdn.ergzcode.com\" target=\"_blank\" rel=\"noopener\">http://cdn.ergzcode.com</a><br><strong>完成！！</strong></p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/14/nginx-reverse-proxy-implements-the-mapping-of-secondary-domain-names-to-ports.html\">Nginx反向代理实现二级域名与端口的映射</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"Tomcat优化之修改内存配置","author":"ergz","date":"2018-10-18T14:17:00.000Z","_content":"##### 一、配置\n**Tomcat/conf/server.xml修改配置**\n```xml\n<connector port=\"8080\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n        redirectPort=\"8443\"\n        URIEncoding=\"UTF-8\"\n        minSpareThreads=\"25\"\n        maxSpareThreads=\"300\"\n        maxThreads=\"500\"\n        acceptCount=\"500\"\n        connectionTimeout=\"30000\"\n        enableLookups=\"false\"/>\n```\n##### 二、参数说明\n<!--more-->\n**maxIdleTime**：最大空闲时间，超过这个空闲时间，且线程数大于minSpareThreads的，都会被回收，默认值1分钟（60000ms）；\n\n**minSpareThreads**：最小空闲线程数，任何情况都会存活的线程数，即便超过了最大空闲时间，也不会被回收，默认值4；\n\n**maxSpareThreads**：最大空闲线程数，在最大空闲时间（maxIdleTime）内活跃过，此时空闲，当空闲时间大于maxIdleTime则被回收，小则继续存活，等待被调度，默认值50；\n\n**maxThreads**：最大线程数，大并发请求时，tomcat能创建来处理请求的最大线程数，超过则放入请求队列中进行排队，默认值为200；\n\n**acceptCount**：当最大线程数（maxThreads）被使用完时，可以放入请求队列排队个数，超过这个数返回connection refused（请求被拒绝），一般设置和maxThreads一样，不过这个具体需要根据自己的应用实际访问峰值和平均值来权衡，默认值为100；\n\n**connectionTimeout**：网络连接超时，假设设置为0表示永不超时，这样设置隐患巨大，通常可设置为30000ms，默认60000ms；\n\nWindows Tomcat允许每个进程maxThreads（最大线程数）2000，Linux Tomcat允许每个进程maxThreads（最大线程数）1000\n\n![upload successful](/images/tomcat_201912182226.png)\n\n**请看下面三种情况**\n情况1：接受一个请求，此时tomcat起动的线程数没有到达maxThreads，tomcat会起动一个线程来处理此请求。\n\n情况2：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，tomcat会把此请求放入等待队列，等待空闲线程。\n\n情况3：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，等待队列中的请求个数也达到了acceptCount，此时tomcat会直接拒绝此次请求，返回connection refused\n\n**maxThreads如何配置**\n一般的服务器操作都包括两方面：1计算（主要消耗cpu），2等待（io、数据库等）。\n\n第一种极端情况，如果我们的操作是纯粹的计算，那么系统响应时间的主要限制就是cpu的运算能力，此时maxThreads应该尽量设的小，降低同一时间内争抢cpu的线程个数，可以提高计算效率，提高系统的整体处理能力。\n\n第二种极端情况，如果我们的操作纯粹是IO或者数据库，那么响应时间的主要限制就变为等待外部资源，此时maxThreads应该尽量设的大，这样才能提高同时处理请求的个数，从而提高系统整体的处理能力。此情况下因为tomcat同时处理的请求量会比较大，所以需要关注一下tomcat的虚拟机内存设置和linux的open file限制。\n\n我在测试时遇到一个问题，maxThreads我设置的比较大比如3000，当服务的线程数大到一定程度时，一般是2000出头，单次请求的响应时间就会急剧的增加，百思不得其解这是为什么，四处寻求答案无果，最后我总结的原因可能是cpu在线程切换时消耗的时间随着线程数量的增加越来越大，cpu把大多数时间都用来在这2000多个线程直接切换上了，当然cpu就没有时间来处理我们的程序了。以前一直简单的认为多线程=高效率。其实多线程本身并不能提高cpu效率，线程过多反而会降低cpu效率。当cpu核心数<线程数时，cpu就需要在多个线程直接来回切换，以保证每个线程都会获得cpu时间，即通常我们说的并发执行。所以maxThreads的配置绝对不是越大越好。\n\n现实应用中，我们的操作都会包含以上两种类型（计算、等待），所以maxThreads的配置并没有一个最优值，一定要根据具体情况来配置。最好的做法是：在不断测试的基础上，不断调整、优化，才能得到最合理的配置。acceptCount的配置，我一般是设置的跟maxThreads一样大，这个值应该是主要根据应用的访问峰值与平均值来权衡配置的。如果设的较小，可以保证接受的请求较快相应，但是超出的请求可能就直接被拒绝。如果设的较大，可能就会出现大量的请求超时的情况，因为我们系统的处理能力是一定的。\n\n\n**原文链接：[Tomcat修改内存配置](https://www.toutiao.com/a6771285271473291783)\n欢迎转载，请注明出处！**","source":"_posts/tomcat-modifying-memory-configuration-for-optimization.md","raw":"title: Tomcat优化之修改内存配置\nauthor: ergz\ntags:\n  - tomcat\ncategories:\n  - web服务器\ndate: 2018-10-18 22:17:00\n---\n##### 一、配置\n**Tomcat/conf/server.xml修改配置**\n```xml\n<connector port=\"8080\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n        redirectPort=\"8443\"\n        URIEncoding=\"UTF-8\"\n        minSpareThreads=\"25\"\n        maxSpareThreads=\"300\"\n        maxThreads=\"500\"\n        acceptCount=\"500\"\n        connectionTimeout=\"30000\"\n        enableLookups=\"false\"/>\n```\n##### 二、参数说明\n<!--more-->\n**maxIdleTime**：最大空闲时间，超过这个空闲时间，且线程数大于minSpareThreads的，都会被回收，默认值1分钟（60000ms）；\n\n**minSpareThreads**：最小空闲线程数，任何情况都会存活的线程数，即便超过了最大空闲时间，也不会被回收，默认值4；\n\n**maxSpareThreads**：最大空闲线程数，在最大空闲时间（maxIdleTime）内活跃过，此时空闲，当空闲时间大于maxIdleTime则被回收，小则继续存活，等待被调度，默认值50；\n\n**maxThreads**：最大线程数，大并发请求时，tomcat能创建来处理请求的最大线程数，超过则放入请求队列中进行排队，默认值为200；\n\n**acceptCount**：当最大线程数（maxThreads）被使用完时，可以放入请求队列排队个数，超过这个数返回connection refused（请求被拒绝），一般设置和maxThreads一样，不过这个具体需要根据自己的应用实际访问峰值和平均值来权衡，默认值为100；\n\n**connectionTimeout**：网络连接超时，假设设置为0表示永不超时，这样设置隐患巨大，通常可设置为30000ms，默认60000ms；\n\nWindows Tomcat允许每个进程maxThreads（最大线程数）2000，Linux Tomcat允许每个进程maxThreads（最大线程数）1000\n\n![upload successful](/images/tomcat_201912182226.png)\n\n**请看下面三种情况**\n情况1：接受一个请求，此时tomcat起动的线程数没有到达maxThreads，tomcat会起动一个线程来处理此请求。\n\n情况2：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，tomcat会把此请求放入等待队列，等待空闲线程。\n\n情况3：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，等待队列中的请求个数也达到了acceptCount，此时tomcat会直接拒绝此次请求，返回connection refused\n\n**maxThreads如何配置**\n一般的服务器操作都包括两方面：1计算（主要消耗cpu），2等待（io、数据库等）。\n\n第一种极端情况，如果我们的操作是纯粹的计算，那么系统响应时间的主要限制就是cpu的运算能力，此时maxThreads应该尽量设的小，降低同一时间内争抢cpu的线程个数，可以提高计算效率，提高系统的整体处理能力。\n\n第二种极端情况，如果我们的操作纯粹是IO或者数据库，那么响应时间的主要限制就变为等待外部资源，此时maxThreads应该尽量设的大，这样才能提高同时处理请求的个数，从而提高系统整体的处理能力。此情况下因为tomcat同时处理的请求量会比较大，所以需要关注一下tomcat的虚拟机内存设置和linux的open file限制。\n\n我在测试时遇到一个问题，maxThreads我设置的比较大比如3000，当服务的线程数大到一定程度时，一般是2000出头，单次请求的响应时间就会急剧的增加，百思不得其解这是为什么，四处寻求答案无果，最后我总结的原因可能是cpu在线程切换时消耗的时间随着线程数量的增加越来越大，cpu把大多数时间都用来在这2000多个线程直接切换上了，当然cpu就没有时间来处理我们的程序了。以前一直简单的认为多线程=高效率。其实多线程本身并不能提高cpu效率，线程过多反而会降低cpu效率。当cpu核心数<线程数时，cpu就需要在多个线程直接来回切换，以保证每个线程都会获得cpu时间，即通常我们说的并发执行。所以maxThreads的配置绝对不是越大越好。\n\n现实应用中，我们的操作都会包含以上两种类型（计算、等待），所以maxThreads的配置并没有一个最优值，一定要根据具体情况来配置。最好的做法是：在不断测试的基础上，不断调整、优化，才能得到最合理的配置。acceptCount的配置，我一般是设置的跟maxThreads一样大，这个值应该是主要根据应用的访问峰值与平均值来权衡配置的。如果设的较小，可以保证接受的请求较快相应，但是超出的请求可能就直接被拒绝。如果设的较大，可能就会出现大量的请求超时的情况，因为我们系统的处理能力是一定的。\n\n\n**原文链接：[Tomcat修改内存配置](https://www.toutiao.com/a6771285271473291783)\n欢迎转载，请注明出处！**","slug":"tomcat-modifying-memory-configuration-for-optimization","published":1,"updated":"2019-12-18T15:43:54.028Z","_id":"ck4bf2ex50000knd2bwjc3853","comments":1,"layout":"post","photos":[],"link":"","content":"<h5 id=\"一、配置\"><a href=\"#一、配置\" class=\"headerlink\" title=\"一、配置\"></a>一、配置</h5><p><strong>Tomcat/conf/server.xml修改配置</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8080\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">URIEncoding</span>=<span class=\"string\">\"UTF-8\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">minSpareThreads</span>=<span class=\"string\">\"25\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">maxSpareThreads</span>=<span class=\"string\">\"300\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"500\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">acceptCount</span>=<span class=\"string\">\"500\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"30000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">enableLookups</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"二、参数说明\"><a href=\"#二、参数说明\" class=\"headerlink\" title=\"二、参数说明\"></a>二、参数说明</h5><a id=\"more\"></a>\n<p><strong>maxIdleTime</strong>：最大空闲时间，超过这个空闲时间，且线程数大于minSpareThreads的，都会被回收，默认值1分钟（60000ms）；</p>\n<p><strong>minSpareThreads</strong>：最小空闲线程数，任何情况都会存活的线程数，即便超过了最大空闲时间，也不会被回收，默认值4；</p>\n<p><strong>maxSpareThreads</strong>：最大空闲线程数，在最大空闲时间（maxIdleTime）内活跃过，此时空闲，当空闲时间大于maxIdleTime则被回收，小则继续存活，等待被调度，默认值50；</p>\n<p><strong>maxThreads</strong>：最大线程数，大并发请求时，tomcat能创建来处理请求的最大线程数，超过则放入请求队列中进行排队，默认值为200；</p>\n<p><strong>acceptCount</strong>：当最大线程数（maxThreads）被使用完时，可以放入请求队列排队个数，超过这个数返回connection refused（请求被拒绝），一般设置和maxThreads一样，不过这个具体需要根据自己的应用实际访问峰值和平均值来权衡，默认值为100；</p>\n<p><strong>connectionTimeout</strong>：网络连接超时，假设设置为0表示永不超时，这样设置隐患巨大，通常可设置为30000ms，默认60000ms；</p>\n<p>Windows Tomcat允许每个进程maxThreads（最大线程数）2000，Linux Tomcat允许每个进程maxThreads（最大线程数）1000</p>\n<p><img src=\"/images/tomcat_201912182226.png\" alt=\"upload successful\"></p>\n<p><strong>请看下面三种情况</strong><br>情况1：接受一个请求，此时tomcat起动的线程数没有到达maxThreads，tomcat会起动一个线程来处理此请求。</p>\n<p>情况2：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，tomcat会把此请求放入等待队列，等待空闲线程。</p>\n<p>情况3：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，等待队列中的请求个数也达到了acceptCount，此时tomcat会直接拒绝此次请求，返回connection refused</p>\n<p><strong>maxThreads如何配置</strong><br>一般的服务器操作都包括两方面：1计算（主要消耗cpu），2等待（io、数据库等）。</p>\n<p>第一种极端情况，如果我们的操作是纯粹的计算，那么系统响应时间的主要限制就是cpu的运算能力，此时maxThreads应该尽量设的小，降低同一时间内争抢cpu的线程个数，可以提高计算效率，提高系统的整体处理能力。</p>\n<p>第二种极端情况，如果我们的操作纯粹是IO或者数据库，那么响应时间的主要限制就变为等待外部资源，此时maxThreads应该尽量设的大，这样才能提高同时处理请求的个数，从而提高系统整体的处理能力。此情况下因为tomcat同时处理的请求量会比较大，所以需要关注一下tomcat的虚拟机内存设置和linux的open file限制。</p>\n<p>我在测试时遇到一个问题，maxThreads我设置的比较大比如3000，当服务的线程数大到一定程度时，一般是2000出头，单次请求的响应时间就会急剧的增加，百思不得其解这是为什么，四处寻求答案无果，最后我总结的原因可能是cpu在线程切换时消耗的时间随着线程数量的增加越来越大，cpu把大多数时间都用来在这2000多个线程直接切换上了，当然cpu就没有时间来处理我们的程序了。以前一直简单的认为多线程=高效率。其实多线程本身并不能提高cpu效率，线程过多反而会降低cpu效率。当cpu核心数&lt;线程数时，cpu就需要在多个线程直接来回切换，以保证每个线程都会获得cpu时间，即通常我们说的并发执行。所以maxThreads的配置绝对不是越大越好。</p>\n<p>现实应用中，我们的操作都会包含以上两种类型（计算、等待），所以maxThreads的配置并没有一个最优值，一定要根据具体情况来配置。最好的做法是：在不断测试的基础上，不断调整、优化，才能得到最合理的配置。acceptCount的配置，我一般是设置的跟maxThreads一样大，这个值应该是主要根据应用的访问峰值与平均值来权衡配置的。如果设的较小，可以保证接受的请求较快相应，但是超出的请求可能就直接被拒绝。如果设的较大，可能就会出现大量的请求超时的情况，因为我们系统的处理能力是一定的。</p>\n<p><strong>原文链接：<a href=\"https://www.toutiao.com/a6771285271473291783\" target=\"_blank\" rel=\"noopener\">Tomcat修改内存配置</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<h5 id=\"一、配置\"><a href=\"#一、配置\" class=\"headerlink\" title=\"一、配置\"></a>一、配置</h5><p><strong>Tomcat/conf/server.xml修改配置</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8080\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">URIEncoding</span>=<span class=\"string\">\"UTF-8\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">minSpareThreads</span>=<span class=\"string\">\"25\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">maxSpareThreads</span>=<span class=\"string\">\"300\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"500\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">acceptCount</span>=<span class=\"string\">\"500\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"30000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">enableLookups</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"二、参数说明\"><a href=\"#二、参数说明\" class=\"headerlink\" title=\"二、参数说明\"></a>二、参数说明</h5>","more":"<p><strong>maxIdleTime</strong>：最大空闲时间，超过这个空闲时间，且线程数大于minSpareThreads的，都会被回收，默认值1分钟（60000ms）；</p>\n<p><strong>minSpareThreads</strong>：最小空闲线程数，任何情况都会存活的线程数，即便超过了最大空闲时间，也不会被回收，默认值4；</p>\n<p><strong>maxSpareThreads</strong>：最大空闲线程数，在最大空闲时间（maxIdleTime）内活跃过，此时空闲，当空闲时间大于maxIdleTime则被回收，小则继续存活，等待被调度，默认值50；</p>\n<p><strong>maxThreads</strong>：最大线程数，大并发请求时，tomcat能创建来处理请求的最大线程数，超过则放入请求队列中进行排队，默认值为200；</p>\n<p><strong>acceptCount</strong>：当最大线程数（maxThreads）被使用完时，可以放入请求队列排队个数，超过这个数返回connection refused（请求被拒绝），一般设置和maxThreads一样，不过这个具体需要根据自己的应用实际访问峰值和平均值来权衡，默认值为100；</p>\n<p><strong>connectionTimeout</strong>：网络连接超时，假设设置为0表示永不超时，这样设置隐患巨大，通常可设置为30000ms，默认60000ms；</p>\n<p>Windows Tomcat允许每个进程maxThreads（最大线程数）2000，Linux Tomcat允许每个进程maxThreads（最大线程数）1000</p>\n<p><img src=\"/images/tomcat_201912182226.png\" alt=\"upload successful\"></p>\n<p><strong>请看下面三种情况</strong><br>情况1：接受一个请求，此时tomcat起动的线程数没有到达maxThreads，tomcat会起动一个线程来处理此请求。</p>\n<p>情况2：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，tomcat会把此请求放入等待队列，等待空闲线程。</p>\n<p>情况3：接受一个请求，此时tomcat起动的线程数已经到达maxThreads，等待队列中的请求个数也达到了acceptCount，此时tomcat会直接拒绝此次请求，返回connection refused</p>\n<p><strong>maxThreads如何配置</strong><br>一般的服务器操作都包括两方面：1计算（主要消耗cpu），2等待（io、数据库等）。</p>\n<p>第一种极端情况，如果我们的操作是纯粹的计算，那么系统响应时间的主要限制就是cpu的运算能力，此时maxThreads应该尽量设的小，降低同一时间内争抢cpu的线程个数，可以提高计算效率，提高系统的整体处理能力。</p>\n<p>第二种极端情况，如果我们的操作纯粹是IO或者数据库，那么响应时间的主要限制就变为等待外部资源，此时maxThreads应该尽量设的大，这样才能提高同时处理请求的个数，从而提高系统整体的处理能力。此情况下因为tomcat同时处理的请求量会比较大，所以需要关注一下tomcat的虚拟机内存设置和linux的open file限制。</p>\n<p>我在测试时遇到一个问题，maxThreads我设置的比较大比如3000，当服务的线程数大到一定程度时，一般是2000出头，单次请求的响应时间就会急剧的增加，百思不得其解这是为什么，四处寻求答案无果，最后我总结的原因可能是cpu在线程切换时消耗的时间随着线程数量的增加越来越大，cpu把大多数时间都用来在这2000多个线程直接切换上了，当然cpu就没有时间来处理我们的程序了。以前一直简单的认为多线程=高效率。其实多线程本身并不能提高cpu效率，线程过多反而会降低cpu效率。当cpu核心数&lt;线程数时，cpu就需要在多个线程直接来回切换，以保证每个线程都会获得cpu时间，即通常我们说的并发执行。所以maxThreads的配置绝对不是越大越好。</p>\n<p>现实应用中，我们的操作都会包含以上两种类型（计算、等待），所以maxThreads的配置并没有一个最优值，一定要根据具体情况来配置。最好的做法是：在不断测试的基础上，不断调整、优化，才能得到最合理的配置。acceptCount的配置，我一般是设置的跟maxThreads一样大，这个值应该是主要根据应用的访问峰值与平均值来权衡配置的。如果设的较小，可以保证接受的请求较快相应，但是超出的请求可能就直接被拒绝。如果设的较大，可能就会出现大量的请求超时的情况，因为我们系统的处理能力是一定的。</p>\n<p><strong>原文链接：<a href=\"https://www.toutiao.com/a6771285271473291783\" target=\"_blank\" rel=\"noopener\">Tomcat修改内存配置</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"MySQL数据库优化，看这篇就够了","author":"ergz","date":"2018-10-18T15:00:00.000Z","_content":"## 前言\n**数据库优化一方面是找出系统的瓶颈,提高MySQL数据库的整体性能,而另一方面需要合理的结构设计和参数调整,以提高用户的相应速度,同时还要尽可能的节约系统资源,以便让系统提供更大的负荷.**\n\n### 1. 优化一览图\n\n![upload successful](/images/mysql_201912182301.png)\n<!--more-->\n### 2. 优化\n笔者将优化分为了两大类,软优化和硬优化,软优化一般是操作数据库即可,而硬优化则是操作服务器硬件及参数设置.\n#### 2.1 软优化\n##### 2.1.1 查询语句优化\n1.首先我们可以用EXPLAIN或DESCRIBE(简写:DESC)命令分析一条查询语句的执行信息.\n2.例:**DESC SELECT * FROM user**\n显示：\n![upload successful](/images/mysql_201912182306.png)\n其中会显示索引和查询数据读取数据条数等信息.\n\n##### 2.1.2 优化子查询\n在MySQL中,尽量使用JOIN来代替子查询.因为子查询需要嵌套查询,嵌套查询时会建立一张临时表,临时表的建立和删除都会有较大的系统开销,而连接查询不会创建临时表,因此效率比嵌套子查询高.\n\n##### 2.1.3 使用索引\n索引是提高数据库查询速度最重要的方法之一,关于索引可以参高笔者<MySQL数据库索引>一文,介绍比较详细,此处记录使用索引的三大注意事项:\n\t1.LIKE关键字匹配'%'开头的字符串,不会使用索引.\n\t2.OR关键字的两个字段必须都是用了索引,该查询才会使用索引.\n\t3.使用多列索引必须满足最左匹配.\n##### 2.1.4 分解表\n对于字段较多的表,如果某些字段使用频率较低,此时应当,将其分离出来从而形成新的表,\n\n##### 2.1.5 中间表\n对于将大量连接查询的表可以创建中间表,从而减少在查询时造成的连接耗时.\n\n##### 2.1.6 增加冗余字段\n类似于创建中间表,增加冗余也是为了减少连接查询.\n\n##### 2.1.7 分析表,检查表,优化表\n分析表主要是分析表中关键字的分布,检查表主要是检查表中是否存在错误,优化表主要是消除删除或更新造成的表空间浪费.\n\n一.分析表: 使用 **ANALYZE** 关键字,如**ANALYZE TABLE user;**\n![upload successful](/images/mysql_201912182311.png)\n1.Op:表示执行的操作.\n2.Msg_type:信息类型,有status,info,note,warning,error.\n3.Msg_text:显示信息.\n\n二.检查表: 使用**CHECK**关键字,如**CHECK TABLE user [option]**\noption只对MyISAM有效,共五个参数值:\n1.QUICK:不扫描行,不检查错误的连接.\n2.FAST:只检查没有正确关闭的表.\n3.CHANGED:只检查上次检查后被更改的表和没被正确关闭的表.\n4.MEDIUM:扫描行,以验证被删除的连接是有效的,也可以计算各行关键字校验和.\n5.EXTENDED:最全面的的检查,对每行关键字全面查找.\n\n三.优化表:使用**OPTIMIZE**关键字,如**OPTIMIZE [LOCAL|NO_WRITE_TO_BINLOG] TABLE user;**\nLOCAL|NO_WRITE_TO_BINLOG都是表示不写入日志.,优化表只对VARCHAR,BLOB和TEXT有效,通过OPTIMIZE TABLE语句可以消除文件碎片,在执行过程中会加上只读锁.\n\n#### 2.2 硬优化\n##### 2.2.1 硬件三件套\n1.配置多核心和频率高的cpu,多核心可以执行多个线程.\n2.配置大内存,提高内存,即可提高缓存区容量,因此能减少磁盘I/O时间,从而提高响应速度.\n3.配置高速磁盘或合理分布磁盘:高速磁盘提高I/O,分布磁盘能提高并行操作的能力.\n##### 2.2.2 优化数据库参数\n优化数据库参数可以提高资源利用率,从而提高MySQL服务器性能.MySQL服务的配置参数都在my.cnf或my.ini,下面列出性能影响较大的几个参数.\n\n1.key_buffer_size:索引缓冲区大小\n2.table_cache:能同时打开表的个数\n3.query_cache_size和query_cache_type:前者是查询缓冲区大小,后者是前面参数的开关,0表示不使用缓冲区,1表示使用缓冲区,但可以在查询中使用4.SQL_NO_CACHE表示不要使用缓冲区,2表示在查询中明确指出使用缓冲区才用缓冲区,即SQL_CACHE.\n5.sort_buffer_size:排序缓冲区\n\n**传送门:[更多参数](https://www.mysql.com/cn/why-mysql/performance/index.html)**\n\n##### 2.2.3 分库分表\n因为数据库压力过大，首先一个问题就是高峰期系统性能可能会降低，因为数据库负载过高对性能会有影响。另外一个，压力过大把你的数据库给搞挂了怎么办？所以此时你必须得对系统做分库分表 + 读写分离，也就是把一个库拆分为多个库，部署在多个数据库服务上，这时作为主库承载写入请求。然后每个主库都挂载至少一个从库，由从库来承载读请求。\n![upload successful](/images/mysql_201912182321.png)\n\n##### 2.2.4 缓存集群\n![upload successful](/images/mysql_201912182322.png)\n\n## 结语\n一个完整而复杂的高并发系统架构中，一定会包含各种复杂的自研基础架构系统和各种精妙的架构设计.因此一篇小文顶多具有抛砖引玉的效果,但是数据库优化的思想差不多就这些了.\n\n**原文链接:[MySQL数据库优化](https://segmentfault.com/a/1190000018631870)\n欢迎转载，请注明出处！**","source":"_posts/mysql-database-optimization-this-article-is-enough.md","raw":"title: MySQL数据库优化，看这篇就够了\nauthor: ergz\ntags:\n  - Mysql\ncategories:\n  - 数据库\ndate: 2018-10-18 23:00:00\n---\n## 前言\n**数据库优化一方面是找出系统的瓶颈,提高MySQL数据库的整体性能,而另一方面需要合理的结构设计和参数调整,以提高用户的相应速度,同时还要尽可能的节约系统资源,以便让系统提供更大的负荷.**\n\n### 1. 优化一览图\n\n![upload successful](/images/mysql_201912182301.png)\n<!--more-->\n### 2. 优化\n笔者将优化分为了两大类,软优化和硬优化,软优化一般是操作数据库即可,而硬优化则是操作服务器硬件及参数设置.\n#### 2.1 软优化\n##### 2.1.1 查询语句优化\n1.首先我们可以用EXPLAIN或DESCRIBE(简写:DESC)命令分析一条查询语句的执行信息.\n2.例:**DESC SELECT * FROM user**\n显示：\n![upload successful](/images/mysql_201912182306.png)\n其中会显示索引和查询数据读取数据条数等信息.\n\n##### 2.1.2 优化子查询\n在MySQL中,尽量使用JOIN来代替子查询.因为子查询需要嵌套查询,嵌套查询时会建立一张临时表,临时表的建立和删除都会有较大的系统开销,而连接查询不会创建临时表,因此效率比嵌套子查询高.\n\n##### 2.1.3 使用索引\n索引是提高数据库查询速度最重要的方法之一,关于索引可以参高笔者<MySQL数据库索引>一文,介绍比较详细,此处记录使用索引的三大注意事项:\n\t1.LIKE关键字匹配'%'开头的字符串,不会使用索引.\n\t2.OR关键字的两个字段必须都是用了索引,该查询才会使用索引.\n\t3.使用多列索引必须满足最左匹配.\n##### 2.1.4 分解表\n对于字段较多的表,如果某些字段使用频率较低,此时应当,将其分离出来从而形成新的表,\n\n##### 2.1.5 中间表\n对于将大量连接查询的表可以创建中间表,从而减少在查询时造成的连接耗时.\n\n##### 2.1.6 增加冗余字段\n类似于创建中间表,增加冗余也是为了减少连接查询.\n\n##### 2.1.7 分析表,检查表,优化表\n分析表主要是分析表中关键字的分布,检查表主要是检查表中是否存在错误,优化表主要是消除删除或更新造成的表空间浪费.\n\n一.分析表: 使用 **ANALYZE** 关键字,如**ANALYZE TABLE user;**\n![upload successful](/images/mysql_201912182311.png)\n1.Op:表示执行的操作.\n2.Msg_type:信息类型,有status,info,note,warning,error.\n3.Msg_text:显示信息.\n\n二.检查表: 使用**CHECK**关键字,如**CHECK TABLE user [option]**\noption只对MyISAM有效,共五个参数值:\n1.QUICK:不扫描行,不检查错误的连接.\n2.FAST:只检查没有正确关闭的表.\n3.CHANGED:只检查上次检查后被更改的表和没被正确关闭的表.\n4.MEDIUM:扫描行,以验证被删除的连接是有效的,也可以计算各行关键字校验和.\n5.EXTENDED:最全面的的检查,对每行关键字全面查找.\n\n三.优化表:使用**OPTIMIZE**关键字,如**OPTIMIZE [LOCAL|NO_WRITE_TO_BINLOG] TABLE user;**\nLOCAL|NO_WRITE_TO_BINLOG都是表示不写入日志.,优化表只对VARCHAR,BLOB和TEXT有效,通过OPTIMIZE TABLE语句可以消除文件碎片,在执行过程中会加上只读锁.\n\n#### 2.2 硬优化\n##### 2.2.1 硬件三件套\n1.配置多核心和频率高的cpu,多核心可以执行多个线程.\n2.配置大内存,提高内存,即可提高缓存区容量,因此能减少磁盘I/O时间,从而提高响应速度.\n3.配置高速磁盘或合理分布磁盘:高速磁盘提高I/O,分布磁盘能提高并行操作的能力.\n##### 2.2.2 优化数据库参数\n优化数据库参数可以提高资源利用率,从而提高MySQL服务器性能.MySQL服务的配置参数都在my.cnf或my.ini,下面列出性能影响较大的几个参数.\n\n1.key_buffer_size:索引缓冲区大小\n2.table_cache:能同时打开表的个数\n3.query_cache_size和query_cache_type:前者是查询缓冲区大小,后者是前面参数的开关,0表示不使用缓冲区,1表示使用缓冲区,但可以在查询中使用4.SQL_NO_CACHE表示不要使用缓冲区,2表示在查询中明确指出使用缓冲区才用缓冲区,即SQL_CACHE.\n5.sort_buffer_size:排序缓冲区\n\n**传送门:[更多参数](https://www.mysql.com/cn/why-mysql/performance/index.html)**\n\n##### 2.2.3 分库分表\n因为数据库压力过大，首先一个问题就是高峰期系统性能可能会降低，因为数据库负载过高对性能会有影响。另外一个，压力过大把你的数据库给搞挂了怎么办？所以此时你必须得对系统做分库分表 + 读写分离，也就是把一个库拆分为多个库，部署在多个数据库服务上，这时作为主库承载写入请求。然后每个主库都挂载至少一个从库，由从库来承载读请求。\n![upload successful](/images/mysql_201912182321.png)\n\n##### 2.2.4 缓存集群\n![upload successful](/images/mysql_201912182322.png)\n\n## 结语\n一个完整而复杂的高并发系统架构中，一定会包含各种复杂的自研基础架构系统和各种精妙的架构设计.因此一篇小文顶多具有抛砖引玉的效果,但是数据库优化的思想差不多就这些了.\n\n**原文链接:[MySQL数据库优化](https://segmentfault.com/a/1190000018631870)\n欢迎转载，请注明出处！**","slug":"mysql-database-optimization-this-article-is-enough","published":1,"updated":"2019-12-20T05:27:26.199Z","_id":"ck4bgfyjw000004d250p6fxlv","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong>数据库优化一方面是找出系统的瓶颈,提高MySQL数据库的整体性能,而另一方面需要合理的结构设计和参数调整,以提高用户的相应速度,同时还要尽可能的节约系统资源,以便让系统提供更大的负荷.</strong></p>\n<h3 id=\"1-优化一览图\"><a href=\"#1-优化一览图\" class=\"headerlink\" title=\"1. 优化一览图\"></a>1. 优化一览图</h3><p><img src=\"/images/mysql_201912182301.png\" alt=\"upload successful\"></p>\n<a id=\"more\"></a>\n<h3 id=\"2-优化\"><a href=\"#2-优化\" class=\"headerlink\" title=\"2. 优化\"></a>2. 优化</h3><p>笔者将优化分为了两大类,软优化和硬优化,软优化一般是操作数据库即可,而硬优化则是操作服务器硬件及参数设置.</p>\n<h4 id=\"2-1-软优化\"><a href=\"#2-1-软优化\" class=\"headerlink\" title=\"2.1 软优化\"></a>2.1 软优化</h4><h5 id=\"2-1-1-查询语句优化\"><a href=\"#2-1-1-查询语句优化\" class=\"headerlink\" title=\"2.1.1 查询语句优化\"></a>2.1.1 查询语句优化</h5><p>1.首先我们可以用EXPLAIN或DESCRIBE(简写:DESC)命令分析一条查询语句的执行信息.<br>2.例:<strong>DESC SELECT * FROM user</strong><br>显示：<br><img src=\"/images/mysql_201912182306.png\" alt=\"upload successful\"><br>其中会显示索引和查询数据读取数据条数等信息.</p>\n<h5 id=\"2-1-2-优化子查询\"><a href=\"#2-1-2-优化子查询\" class=\"headerlink\" title=\"2.1.2 优化子查询\"></a>2.1.2 优化子查询</h5><p>在MySQL中,尽量使用JOIN来代替子查询.因为子查询需要嵌套查询,嵌套查询时会建立一张临时表,临时表的建立和删除都会有较大的系统开销,而连接查询不会创建临时表,因此效率比嵌套子查询高.</p>\n<h5 id=\"2-1-3-使用索引\"><a href=\"#2-1-3-使用索引\" class=\"headerlink\" title=\"2.1.3 使用索引\"></a>2.1.3 使用索引</h5><p>索引是提高数据库查询速度最重要的方法之一,关于索引可以参高笔者&lt;MySQL数据库索引&gt;一文,介绍比较详细,此处记录使用索引的三大注意事项:<br>    1.LIKE关键字匹配’%’开头的字符串,不会使用索引.<br>    2.OR关键字的两个字段必须都是用了索引,该查询才会使用索引.<br>    3.使用多列索引必须满足最左匹配.</p>\n<h5 id=\"2-1-4-分解表\"><a href=\"#2-1-4-分解表\" class=\"headerlink\" title=\"2.1.4 分解表\"></a>2.1.4 分解表</h5><p>对于字段较多的表,如果某些字段使用频率较低,此时应当,将其分离出来从而形成新的表,</p>\n<h5 id=\"2-1-5-中间表\"><a href=\"#2-1-5-中间表\" class=\"headerlink\" title=\"2.1.5 中间表\"></a>2.1.5 中间表</h5><p>对于将大量连接查询的表可以创建中间表,从而减少在查询时造成的连接耗时.</p>\n<h5 id=\"2-1-6-增加冗余字段\"><a href=\"#2-1-6-增加冗余字段\" class=\"headerlink\" title=\"2.1.6 增加冗余字段\"></a>2.1.6 增加冗余字段</h5><p>类似于创建中间表,增加冗余也是为了减少连接查询.</p>\n<h5 id=\"2-1-7-分析表-检查表-优化表\"><a href=\"#2-1-7-分析表-检查表-优化表\" class=\"headerlink\" title=\"2.1.7 分析表,检查表,优化表\"></a>2.1.7 分析表,检查表,优化表</h5><p>分析表主要是分析表中关键字的分布,检查表主要是检查表中是否存在错误,优化表主要是消除删除或更新造成的表空间浪费.</p>\n<p>一.分析表: 使用 <strong>ANALYZE</strong> 关键字,如<strong>ANALYZE TABLE user;</strong><br><img src=\"/images/mysql_201912182311.png\" alt=\"upload successful\"><br>1.Op:表示执行的操作.<br>2.Msg_type:信息类型,有status,info,note,warning,error.<br>3.Msg_text:显示信息.</p>\n<p>二.检查表: 使用<strong>CHECK</strong>关键字,如<strong>CHECK TABLE user [option]</strong><br>option只对MyISAM有效,共五个参数值:<br>1.QUICK:不扫描行,不检查错误的连接.<br>2.FAST:只检查没有正确关闭的表.<br>3.CHANGED:只检查上次检查后被更改的表和没被正确关闭的表.<br>4.MEDIUM:扫描行,以验证被删除的连接是有效的,也可以计算各行关键字校验和.<br>5.EXTENDED:最全面的的检查,对每行关键字全面查找.</p>\n<p>三.优化表:使用<strong>OPTIMIZE</strong>关键字,如<strong>OPTIMIZE [LOCAL|NO_WRITE_TO_BINLOG] TABLE user;</strong><br>LOCAL|NO_WRITE_TO_BINLOG都是表示不写入日志.,优化表只对VARCHAR,BLOB和TEXT有效,通过OPTIMIZE TABLE语句可以消除文件碎片,在执行过程中会加上只读锁.</p>\n<h4 id=\"2-2-硬优化\"><a href=\"#2-2-硬优化\" class=\"headerlink\" title=\"2.2 硬优化\"></a>2.2 硬优化</h4><h5 id=\"2-2-1-硬件三件套\"><a href=\"#2-2-1-硬件三件套\" class=\"headerlink\" title=\"2.2.1 硬件三件套\"></a>2.2.1 硬件三件套</h5><p>1.配置多核心和频率高的cpu,多核心可以执行多个线程.<br>2.配置大内存,提高内存,即可提高缓存区容量,因此能减少磁盘I/O时间,从而提高响应速度.<br>3.配置高速磁盘或合理分布磁盘:高速磁盘提高I/O,分布磁盘能提高并行操作的能力.</p>\n<h5 id=\"2-2-2-优化数据库参数\"><a href=\"#2-2-2-优化数据库参数\" class=\"headerlink\" title=\"2.2.2 优化数据库参数\"></a>2.2.2 优化数据库参数</h5><p>优化数据库参数可以提高资源利用率,从而提高MySQL服务器性能.MySQL服务的配置参数都在my.cnf或my.ini,下面列出性能影响较大的几个参数.</p>\n<p>1.key_buffer_size:索引缓冲区大小<br>2.table_cache:能同时打开表的个数<br>3.query_cache_size和query_cache_type:前者是查询缓冲区大小,后者是前面参数的开关,0表示不使用缓冲区,1表示使用缓冲区,但可以在查询中使用4.SQL_NO_CACHE表示不要使用缓冲区,2表示在查询中明确指出使用缓冲区才用缓冲区,即SQL_CACHE.<br>5.sort_buffer_size:排序缓冲区</p>\n<p><strong>传送门:<a href=\"https://www.mysql.com/cn/why-mysql/performance/index.html\" target=\"_blank\" rel=\"noopener\">更多参数</a></strong></p>\n<h5 id=\"2-2-3-分库分表\"><a href=\"#2-2-3-分库分表\" class=\"headerlink\" title=\"2.2.3 分库分表\"></a>2.2.3 分库分表</h5><p>因为数据库压力过大，首先一个问题就是高峰期系统性能可能会降低，因为数据库负载过高对性能会有影响。另外一个，压力过大把你的数据库给搞挂了怎么办？所以此时你必须得对系统做分库分表 + 读写分离，也就是把一个库拆分为多个库，部署在多个数据库服务上，这时作为主库承载写入请求。然后每个主库都挂载至少一个从库，由从库来承载读请求。<br><img src=\"/images/mysql_201912182321.png\" alt=\"upload successful\"></p>\n<h5 id=\"2-2-4-缓存集群\"><a href=\"#2-2-4-缓存集群\" class=\"headerlink\" title=\"2.2.4 缓存集群\"></a>2.2.4 缓存集群</h5><p><img src=\"/images/mysql_201912182322.png\" alt=\"upload successful\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>一个完整而复杂的高并发系统架构中，一定会包含各种复杂的自研基础架构系统和各种精妙的架构设计.因此一篇小文顶多具有抛砖引玉的效果,但是数据库优化的思想差不多就这些了.</p>\n<p><strong>原文链接:<a href=\"https://segmentfault.com/a/1190000018631870\" target=\"_blank\" rel=\"noopener\">MySQL数据库优化</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong>数据库优化一方面是找出系统的瓶颈,提高MySQL数据库的整体性能,而另一方面需要合理的结构设计和参数调整,以提高用户的相应速度,同时还要尽可能的节约系统资源,以便让系统提供更大的负荷.</strong></p>\n<h3 id=\"1-优化一览图\"><a href=\"#1-优化一览图\" class=\"headerlink\" title=\"1. 优化一览图\"></a>1. 优化一览图</h3><p><img src=\"/images/mysql_201912182301.png\" alt=\"upload successful\"></p>","more":"<h3 id=\"2-优化\"><a href=\"#2-优化\" class=\"headerlink\" title=\"2. 优化\"></a>2. 优化</h3><p>笔者将优化分为了两大类,软优化和硬优化,软优化一般是操作数据库即可,而硬优化则是操作服务器硬件及参数设置.</p>\n<h4 id=\"2-1-软优化\"><a href=\"#2-1-软优化\" class=\"headerlink\" title=\"2.1 软优化\"></a>2.1 软优化</h4><h5 id=\"2-1-1-查询语句优化\"><a href=\"#2-1-1-查询语句优化\" class=\"headerlink\" title=\"2.1.1 查询语句优化\"></a>2.1.1 查询语句优化</h5><p>1.首先我们可以用EXPLAIN或DESCRIBE(简写:DESC)命令分析一条查询语句的执行信息.<br>2.例:<strong>DESC SELECT * FROM user</strong><br>显示：<br><img src=\"/images/mysql_201912182306.png\" alt=\"upload successful\"><br>其中会显示索引和查询数据读取数据条数等信息.</p>\n<h5 id=\"2-1-2-优化子查询\"><a href=\"#2-1-2-优化子查询\" class=\"headerlink\" title=\"2.1.2 优化子查询\"></a>2.1.2 优化子查询</h5><p>在MySQL中,尽量使用JOIN来代替子查询.因为子查询需要嵌套查询,嵌套查询时会建立一张临时表,临时表的建立和删除都会有较大的系统开销,而连接查询不会创建临时表,因此效率比嵌套子查询高.</p>\n<h5 id=\"2-1-3-使用索引\"><a href=\"#2-1-3-使用索引\" class=\"headerlink\" title=\"2.1.3 使用索引\"></a>2.1.3 使用索引</h5><p>索引是提高数据库查询速度最重要的方法之一,关于索引可以参高笔者&lt;MySQL数据库索引&gt;一文,介绍比较详细,此处记录使用索引的三大注意事项:<br>    1.LIKE关键字匹配’%’开头的字符串,不会使用索引.<br>    2.OR关键字的两个字段必须都是用了索引,该查询才会使用索引.<br>    3.使用多列索引必须满足最左匹配.</p>\n<h5 id=\"2-1-4-分解表\"><a href=\"#2-1-4-分解表\" class=\"headerlink\" title=\"2.1.4 分解表\"></a>2.1.4 分解表</h5><p>对于字段较多的表,如果某些字段使用频率较低,此时应当,将其分离出来从而形成新的表,</p>\n<h5 id=\"2-1-5-中间表\"><a href=\"#2-1-5-中间表\" class=\"headerlink\" title=\"2.1.5 中间表\"></a>2.1.5 中间表</h5><p>对于将大量连接查询的表可以创建中间表,从而减少在查询时造成的连接耗时.</p>\n<h5 id=\"2-1-6-增加冗余字段\"><a href=\"#2-1-6-增加冗余字段\" class=\"headerlink\" title=\"2.1.6 增加冗余字段\"></a>2.1.6 增加冗余字段</h5><p>类似于创建中间表,增加冗余也是为了减少连接查询.</p>\n<h5 id=\"2-1-7-分析表-检查表-优化表\"><a href=\"#2-1-7-分析表-检查表-优化表\" class=\"headerlink\" title=\"2.1.7 分析表,检查表,优化表\"></a>2.1.7 分析表,检查表,优化表</h5><p>分析表主要是分析表中关键字的分布,检查表主要是检查表中是否存在错误,优化表主要是消除删除或更新造成的表空间浪费.</p>\n<p>一.分析表: 使用 <strong>ANALYZE</strong> 关键字,如<strong>ANALYZE TABLE user;</strong><br><img src=\"/images/mysql_201912182311.png\" alt=\"upload successful\"><br>1.Op:表示执行的操作.<br>2.Msg_type:信息类型,有status,info,note,warning,error.<br>3.Msg_text:显示信息.</p>\n<p>二.检查表: 使用<strong>CHECK</strong>关键字,如<strong>CHECK TABLE user [option]</strong><br>option只对MyISAM有效,共五个参数值:<br>1.QUICK:不扫描行,不检查错误的连接.<br>2.FAST:只检查没有正确关闭的表.<br>3.CHANGED:只检查上次检查后被更改的表和没被正确关闭的表.<br>4.MEDIUM:扫描行,以验证被删除的连接是有效的,也可以计算各行关键字校验和.<br>5.EXTENDED:最全面的的检查,对每行关键字全面查找.</p>\n<p>三.优化表:使用<strong>OPTIMIZE</strong>关键字,如<strong>OPTIMIZE [LOCAL|NO_WRITE_TO_BINLOG] TABLE user;</strong><br>LOCAL|NO_WRITE_TO_BINLOG都是表示不写入日志.,优化表只对VARCHAR,BLOB和TEXT有效,通过OPTIMIZE TABLE语句可以消除文件碎片,在执行过程中会加上只读锁.</p>\n<h4 id=\"2-2-硬优化\"><a href=\"#2-2-硬优化\" class=\"headerlink\" title=\"2.2 硬优化\"></a>2.2 硬优化</h4><h5 id=\"2-2-1-硬件三件套\"><a href=\"#2-2-1-硬件三件套\" class=\"headerlink\" title=\"2.2.1 硬件三件套\"></a>2.2.1 硬件三件套</h5><p>1.配置多核心和频率高的cpu,多核心可以执行多个线程.<br>2.配置大内存,提高内存,即可提高缓存区容量,因此能减少磁盘I/O时间,从而提高响应速度.<br>3.配置高速磁盘或合理分布磁盘:高速磁盘提高I/O,分布磁盘能提高并行操作的能力.</p>\n<h5 id=\"2-2-2-优化数据库参数\"><a href=\"#2-2-2-优化数据库参数\" class=\"headerlink\" title=\"2.2.2 优化数据库参数\"></a>2.2.2 优化数据库参数</h5><p>优化数据库参数可以提高资源利用率,从而提高MySQL服务器性能.MySQL服务的配置参数都在my.cnf或my.ini,下面列出性能影响较大的几个参数.</p>\n<p>1.key_buffer_size:索引缓冲区大小<br>2.table_cache:能同时打开表的个数<br>3.query_cache_size和query_cache_type:前者是查询缓冲区大小,后者是前面参数的开关,0表示不使用缓冲区,1表示使用缓冲区,但可以在查询中使用4.SQL_NO_CACHE表示不要使用缓冲区,2表示在查询中明确指出使用缓冲区才用缓冲区,即SQL_CACHE.<br>5.sort_buffer_size:排序缓冲区</p>\n<p><strong>传送门:<a href=\"https://www.mysql.com/cn/why-mysql/performance/index.html\" target=\"_blank\" rel=\"noopener\">更多参数</a></strong></p>\n<h5 id=\"2-2-3-分库分表\"><a href=\"#2-2-3-分库分表\" class=\"headerlink\" title=\"2.2.3 分库分表\"></a>2.2.3 分库分表</h5><p>因为数据库压力过大，首先一个问题就是高峰期系统性能可能会降低，因为数据库负载过高对性能会有影响。另外一个，压力过大把你的数据库给搞挂了怎么办？所以此时你必须得对系统做分库分表 + 读写分离，也就是把一个库拆分为多个库，部署在多个数据库服务上，这时作为主库承载写入请求。然后每个主库都挂载至少一个从库，由从库来承载读请求。<br><img src=\"/images/mysql_201912182321.png\" alt=\"upload successful\"></p>\n<h5 id=\"2-2-4-缓存集群\"><a href=\"#2-2-4-缓存集群\" class=\"headerlink\" title=\"2.2.4 缓存集群\"></a>2.2.4 缓存集群</h5><p><img src=\"/images/mysql_201912182322.png\" alt=\"upload successful\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>一个完整而复杂的高并发系统架构中，一定会包含各种复杂的自研基础架构系统和各种精妙的架构设计.因此一篇小文顶多具有抛砖引玉的效果,但是数据库优化的思想差不多就这些了.</p>\n<p><strong>原文链接:<a href=\"https://segmentfault.com/a/1190000018631870\" target=\"_blank\" rel=\"noopener\">MySQL数据库优化</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"MarkdownPad2.5注册码","author":"ergz","date":"2016-05-15T07:25:00.000Z","_content":"**邮箱 Soar360@live.com**\n\n**注册码**\nGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3\nYSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO\n0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTR\nKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n\n<!--more-->\n**输入Email address和license key**\n![upload successful](/images/markdown_201912251552.png)\n\n**注册完成**\n![upload successful](/images/markdown_201912251554.png)\n\n**本文链接：[MarkdownPad2.5注册码](http://www.ergzcode.com/2016/05/15/markdownpad2.5-license-key.html)\n欢迎转载，请注明出处！**","source":"_posts/markdownpad2.5-license-key.md","raw":"title: MarkdownPad2.5注册码\nauthor: ergz\ntags:\n  - markdown\ncategories:\n  - 工具\ndate: 2016-05-15 15:25:00\n---\n**邮箱 Soar360@live.com**\n\n**注册码**\nGBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3\nYSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO\n0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTR\nKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==\n\n<!--more-->\n**输入Email address和license key**\n![upload successful](/images/markdown_201912251552.png)\n\n**注册完成**\n![upload successful](/images/markdown_201912251554.png)\n\n**本文链接：[MarkdownPad2.5注册码](http://www.ergzcode.com/2016/05/15/markdownpad2.5-license-key.html)\n欢迎转载，请注明出处！**","slug":"markdownpad2.5-license-key","published":1,"updated":"2019-12-25T11:26:34.821Z","_id":"ck4l0e08w0000ljd25y1eg0ka","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>邮箱 <a href=\"mailto:Soar360@live.com\" target=\"_blank\" rel=\"noopener\">Soar360@live.com</a></strong></p>\n<p><strong>注册码</strong><br>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3<br>YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO<br>0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTR<br>KfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</p>\n<a id=\"more\"></a>\n<p><strong>输入Email address和license key</strong><br><img src=\"/images/markdown_201912251552.png\" alt=\"upload successful\"></p>\n<p><strong>注册完成</strong><br><img src=\"/images/markdown_201912251554.png\" alt=\"upload successful\"></p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2016/05/15/markdownpad2.5-license-key.html\">MarkdownPad2.5注册码</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>邮箱 <a href=\"mailto:Soar360@live.com\" target=\"_blank\" rel=\"noopener\">Soar360@live.com</a></strong></p>\n<p><strong>注册码</strong><br>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3<br>YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO<br>0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTR<br>KfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</p>","more":"<p><strong>输入Email address和license key</strong><br><img src=\"/images/markdown_201912251552.png\" alt=\"upload successful\"></p>\n<p><strong>注册完成</strong><br><img src=\"/images/markdown_201912251554.png\" alt=\"upload successful\"></p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2016/05/15/markdownpad2.5-license-key.html\">MarkdownPad2.5注册码</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"最新IDEA永久激活","author":"ergz","date":"2019-12-25T12:26:00.000Z","_content":"**已支持2019.2的版本且适用Windows、Mac、Ubuntu等所有平台**\n\n### 1.下载新版破解补丁\n下载链接：<http://cdn.ergzcode.com/jetbrains/jetbrains-agent.jar>，并将它放置到IDEA安装目录的bin目录下（位置可随意）。\n\n### 2.修改配置文件\n如果你是刚下载的IDEA，先点击激活窗口的免费试用，创建一个新项目来进入到IDEA的工作目录。进入IDEA的工作界面后，点击IDEA的上方的菜单栏‘Help’->‘Edit Custom VM Options...’，如果提示是否要创建文件，请点‘Yes’，打开idea64.exe.vmoptions文件在末行添加：-javaagent:你的IDEA安装目录\\bin\\jetbrains-agent.jar\n<!--more-->\n\n\t-Xms512m\n\t-Xmx2048m\n\t-XX:ReservedCodeCacheSize=480m\n\t-XX:+UseConcMarkSweepGC\n\t-XX:SoftRefLRUPolicyMSPerMB=50\n\t-ea\n\t-XX:CICompilerCount=2\n\t-Dsun.io.useCanonPrefixCache=false\n\t-Djava.net.preferIPv4Stack=true\n\t-Djdk.http.auth.tunneling.disabledSchemes=\"\"\n\t-XX:+HeapDumpOnOutOfMemoryError\n\t-XX:-OmitStackTraceInFastThrow\n\t-Djdk.attach.allowAttachSelf\n\t-Dkotlinx.coroutines.debug=off\n\t-Djdk.module.illegalAccess.silent=true\n\t-javaagent:C:\\Program Files\\JetBrains\\ideaIU 2019.2.3\\bin\\jetbrains-agent.jar\n\n请仔细检查补丁路径是否正确，如果错误则会出现IDEA打不开的情况，这时候可以删除用户配置目录下的IDEA文件夹:\n\n- windwos：C:\\Users\\用户名\\\n- macos：~/Library/Preferences/\n- ubuntu：~/.\t\n\n**修改完配置文件之后重启IDEA**\n\n### 3.输入激活码\n\n重启IDEA之后，点击菜单栏中的 ‘Help ’-> ‘Register...’，这里有两种激活方式：\n\n一.选择最后一种License server激活方式，地址填入：http://jetbrains-license-server ,或者点击按钮：‘Discover Server’来自动填充地址，完成激活。\n\n二.如果服务器激活方式无法激活，还可以选择Activation code方式激活，激活码下载:[激活码.txt](http://cdn.ergzcode.com/jetbrains/%E6%BF%80%E6%B4%BB%E7%A0%81.txt)，下载复制激活码填入，点击OK即可。\n\n\n服务器激活是没有期限的，是永久有效。激活码激活的有效期到2089年。\n\n**本文链接：[最新IDEA永久激活](http://www.ergzcode.com/2019/12/25/idea-latest-active.html)\n欢迎转载，请注明出处！**","source":"_posts/idea-latest-active.md","raw":"title: 最新IDEA永久激活\nauthor: ergz\ntags:\n  - IDEA\ncategories:\n  - 工具\ndate: 2019-12-25 20:26:00\n---\n**已支持2019.2的版本且适用Windows、Mac、Ubuntu等所有平台**\n\n### 1.下载新版破解补丁\n下载链接：<http://cdn.ergzcode.com/jetbrains/jetbrains-agent.jar>，并将它放置到IDEA安装目录的bin目录下（位置可随意）。\n\n### 2.修改配置文件\n如果你是刚下载的IDEA，先点击激活窗口的免费试用，创建一个新项目来进入到IDEA的工作目录。进入IDEA的工作界面后，点击IDEA的上方的菜单栏‘Help’->‘Edit Custom VM Options...’，如果提示是否要创建文件，请点‘Yes’，打开idea64.exe.vmoptions文件在末行添加：-javaagent:你的IDEA安装目录\\bin\\jetbrains-agent.jar\n<!--more-->\n\n\t-Xms512m\n\t-Xmx2048m\n\t-XX:ReservedCodeCacheSize=480m\n\t-XX:+UseConcMarkSweepGC\n\t-XX:SoftRefLRUPolicyMSPerMB=50\n\t-ea\n\t-XX:CICompilerCount=2\n\t-Dsun.io.useCanonPrefixCache=false\n\t-Djava.net.preferIPv4Stack=true\n\t-Djdk.http.auth.tunneling.disabledSchemes=\"\"\n\t-XX:+HeapDumpOnOutOfMemoryError\n\t-XX:-OmitStackTraceInFastThrow\n\t-Djdk.attach.allowAttachSelf\n\t-Dkotlinx.coroutines.debug=off\n\t-Djdk.module.illegalAccess.silent=true\n\t-javaagent:C:\\Program Files\\JetBrains\\ideaIU 2019.2.3\\bin\\jetbrains-agent.jar\n\n请仔细检查补丁路径是否正确，如果错误则会出现IDEA打不开的情况，这时候可以删除用户配置目录下的IDEA文件夹:\n\n- windwos：C:\\Users\\用户名\\\n- macos：~/Library/Preferences/\n- ubuntu：~/.\t\n\n**修改完配置文件之后重启IDEA**\n\n### 3.输入激活码\n\n重启IDEA之后，点击菜单栏中的 ‘Help ’-> ‘Register...’，这里有两种激活方式：\n\n一.选择最后一种License server激活方式，地址填入：http://jetbrains-license-server ,或者点击按钮：‘Discover Server’来自动填充地址，完成激活。\n\n二.如果服务器激活方式无法激活，还可以选择Activation code方式激活，激活码下载:[激活码.txt](http://cdn.ergzcode.com/jetbrains/%E6%BF%80%E6%B4%BB%E7%A0%81.txt)，下载复制激活码填入，点击OK即可。\n\n\n服务器激活是没有期限的，是永久有效。激活码激活的有效期到2089年。\n\n**本文链接：[最新IDEA永久激活](http://www.ergzcode.com/2019/12/25/idea-latest-active.html)\n欢迎转载，请注明出处！**","slug":"idea-latest-active","published":1,"updated":"2019-12-26T01:38:19.186Z","_id":"ck4la4i5a000087d25bcq68v5","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>已支持2019.2的版本且适用Windows、Mac、Ubuntu等所有平台</strong></p>\n<h3 id=\"1-下载新版破解补丁\"><a href=\"#1-下载新版破解补丁\" class=\"headerlink\" title=\"1.下载新版破解补丁\"></a>1.下载新版破解补丁</h3><p>下载链接：<a href=\"http://cdn.ergzcode.com/jetbrains/jetbrains-agent.jar\" target=\"_blank\" rel=\"noopener\">http://cdn.ergzcode.com/jetbrains/jetbrains-agent.jar</a>，并将它放置到IDEA安装目录的bin目录下（位置可随意）。</p>\n<h3 id=\"2-修改配置文件\"><a href=\"#2-修改配置文件\" class=\"headerlink\" title=\"2.修改配置文件\"></a>2.修改配置文件</h3><p>如果你是刚下载的IDEA，先点击激活窗口的免费试用，创建一个新项目来进入到IDEA的工作目录。进入IDEA的工作界面后，点击IDEA的上方的菜单栏‘Help’-&gt;‘Edit Custom VM Options…’，如果提示是否要创建文件，请点‘Yes’，打开idea64.exe.vmoptions文件在末行添加：-javaagent:你的IDEA安装目录\\bin\\jetbrains-agent.jar</p>\n<a id=\"more\"></a>\n\n<pre><code>-Xms512m\n-Xmx2048m\n-XX:ReservedCodeCacheSize=480m\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n-ea\n-XX:CICompilerCount=2\n-Dsun.io.useCanonPrefixCache=false\n-Djava.net.preferIPv4Stack=true\n-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n-Djdk.attach.allowAttachSelf\n-Dkotlinx.coroutines.debug=off\n-Djdk.module.illegalAccess.silent=true\n-javaagent:C:\\Program Files\\JetBrains\\ideaIU 2019.2.3\\bin\\jetbrains-agent.jar</code></pre><p>请仔细检查补丁路径是否正确，如果错误则会出现IDEA打不开的情况，这时候可以删除用户配置目录下的IDEA文件夹:</p>\n<ul>\n<li>windwos：C:\\Users\\用户名\\</li>\n<li>macos：~/Library/Preferences/</li>\n<li>ubuntu：~/.    </li>\n</ul>\n<p><strong>修改完配置文件之后重启IDEA</strong></p>\n<h3 id=\"3-输入激活码\"><a href=\"#3-输入激活码\" class=\"headerlink\" title=\"3.输入激活码\"></a>3.输入激活码</h3><p>重启IDEA之后，点击菜单栏中的 ‘Help ’-&gt; ‘Register…’，这里有两种激活方式：</p>\n<p>一.选择最后一种License server激活方式，地址填入：<a href=\"http://jetbrains-license-server\" target=\"_blank\" rel=\"noopener\">http://jetbrains-license-server</a> ,或者点击按钮：‘Discover Server’来自动填充地址，完成激活。</p>\n<p>二.如果服务器激活方式无法激活，还可以选择Activation code方式激活，激活码下载:<a href=\"http://cdn.ergzcode.com/jetbrains/%E6%BF%80%E6%B4%BB%E7%A0%81.txt\" target=\"_blank\" rel=\"noopener\">激活码.txt</a>，下载复制激活码填入，点击OK即可。</p>\n<p>服务器激活是没有期限的，是永久有效。激活码激活的有效期到2089年。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/25/idea-latest-active.html\">最新IDEA永久激活</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<p><strong>已支持2019.2的版本且适用Windows、Mac、Ubuntu等所有平台</strong></p>\n<h3 id=\"1-下载新版破解补丁\"><a href=\"#1-下载新版破解补丁\" class=\"headerlink\" title=\"1.下载新版破解补丁\"></a>1.下载新版破解补丁</h3><p>下载链接：<a href=\"http://cdn.ergzcode.com/jetbrains/jetbrains-agent.jar\" target=\"_blank\" rel=\"noopener\">http://cdn.ergzcode.com/jetbrains/jetbrains-agent.jar</a>，并将它放置到IDEA安装目录的bin目录下（位置可随意）。</p>\n<h3 id=\"2-修改配置文件\"><a href=\"#2-修改配置文件\" class=\"headerlink\" title=\"2.修改配置文件\"></a>2.修改配置文件</h3><p>如果你是刚下载的IDEA，先点击激活窗口的免费试用，创建一个新项目来进入到IDEA的工作目录。进入IDEA的工作界面后，点击IDEA的上方的菜单栏‘Help’-&gt;‘Edit Custom VM Options…’，如果提示是否要创建文件，请点‘Yes’，打开idea64.exe.vmoptions文件在末行添加：-javaagent:你的IDEA安装目录\\bin\\jetbrains-agent.jar</p>","more":"<pre><code>-Xms512m\n-Xmx2048m\n-XX:ReservedCodeCacheSize=480m\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n-ea\n-XX:CICompilerCount=2\n-Dsun.io.useCanonPrefixCache=false\n-Djava.net.preferIPv4Stack=true\n-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n-Djdk.attach.allowAttachSelf\n-Dkotlinx.coroutines.debug=off\n-Djdk.module.illegalAccess.silent=true\n-javaagent:C:\\Program Files\\JetBrains\\ideaIU 2019.2.3\\bin\\jetbrains-agent.jar</code></pre><p>请仔细检查补丁路径是否正确，如果错误则会出现IDEA打不开的情况，这时候可以删除用户配置目录下的IDEA文件夹:</p>\n<ul>\n<li>windwos：C:\\Users\\用户名\\</li>\n<li>macos：~/Library/Preferences/</li>\n<li>ubuntu：~/.    </li>\n</ul>\n<p><strong>修改完配置文件之后重启IDEA</strong></p>\n<h3 id=\"3-输入激活码\"><a href=\"#3-输入激活码\" class=\"headerlink\" title=\"3.输入激活码\"></a>3.输入激活码</h3><p>重启IDEA之后，点击菜单栏中的 ‘Help ’-&gt; ‘Register…’，这里有两种激活方式：</p>\n<p>一.选择最后一种License server激活方式，地址填入：<a href=\"http://jetbrains-license-server\" target=\"_blank\" rel=\"noopener\">http://jetbrains-license-server</a> ,或者点击按钮：‘Discover Server’来自动填充地址，完成激活。</p>\n<p>二.如果服务器激活方式无法激活，还可以选择Activation code方式激活，激活码下载:<a href=\"http://cdn.ergzcode.com/jetbrains/%E6%BF%80%E6%B4%BB%E7%A0%81.txt\" target=\"_blank\" rel=\"noopener\">激活码.txt</a>，下载复制激活码填入，点击OK即可。</p>\n<p>服务器激活是没有期限的，是永久有效。激活码激活的有效期到2089年。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/12/25/idea-latest-active.html\">最新IDEA永久激活</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"面试官：说一下构造函数，静态代码块，构造代码块的加载顺序","author":"ergz","date":"2019-01-25T03:00:00.000Z","_content":"### 介绍\n\n**构造函数，静态代码块，构造代码块的执行顺序**\n\t\n\tclass Test{\n\t\t//静态代码块1\n\t\tstatic{\n\t\t\tSystem.out.println(\"我的静态代码块1\");\t\t\n\t\t}\n\t\t//构造代码块1\n\t\t{\n\t\t\tSystem.out.println(\"我的构造代码块1\");\n\t\t}\n\t\t//构造函数1\n\t\tpublic Test(){\n\t\t\tSystem.out.println(\"我是无参数构造函数\");\t\t\t\n\t\t}\n\t\t//构造函数2\n\t\tpublic Test(int t){\n\t\t\tSystem.out.println(\"我是带参数构造函数，\"+\"参数是\"+t);\t\t\t\n\t\t}\n\n\t\t//静态代码块2\n\t\tstatic{\n\t\t\tSystem.out.println(\"我的静态代码块2\");\t\t\n\t\t}\n\t\t//构造代码块2\n\t\t{\n\t\t\tSystem.out.println(\"我的构造代码块2\");\n\t\t}\n\t} \n\n<!--more-->\n来New一个Test类看看会输出什么？\n\n\tpublic class TestShow{\n\t\tpublic static void main(String[] args){\n\t\t\t/*创建第一个对象\n\t\t\t 我是静态代码块1\n\t\t\t 我的静态代码块2\n\t\t\t 我的构造代码块1\n\t\t\t 我的构造代码块2\n\t\t\t 我是无参数构造函数\n\t\t\t*/\n\t\t\tSystem.out.println(\"创建第一个对象：\");\n\t\t\tTest test1 = new Test();\n\t\t\t\n\t\t\t/*创建第二个对象\n\t\t\t  我的构造代码块1\n\t\t\t  我的构造代码块2\n\t\t\t  我是带参数构造函数，参数是5\n\t\t\t*/\n\t\t\tSystem.out.println(\"创建第二个对象：\");\n\t\t\tTest test2 = new Test(5);\n\t\t}\t\n\n\t}\n\n从输出我们可以总结处如下结论：\n\n执行时间：**静态代码块 > 构造代码块 > 构造函数，静态代码块只会在类被加载入内存时加载一次，构造代码块和构造函数都是在对象创建的时候执行，有几个对象就会执行几次**，所以一般将加载配置文件的过程写在静态代码块中。\n\n**没有继承的加载顺序**\n\n先定义一个类作为成员变量，方便看打印输出\n\t\n\tpublic class Parameter {\n\t\tpublic Parameter(String str){\n\t\t\tSystem.out.println(str);\n\t\t}\t\n\t}\n\n写一个测试类\n\t\n\tpublic Test1{\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"非静态成员变量\");\t\n\t\tpublic Test1(){\n\t\t\tSystem.out.println(\"构造函数\");\t\t\n\t\t}\n\t\t//静态代码块\n\t\tstatic{\n\t\t\tSystem.out.println(\"静态代码块\");\t\t\n\t\t}\n\t\t//构造代码块a\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块a\");\n\t\t}\n\t\t//构造代码块b\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块b\");\n\t\t}\n\t}\n\n输出如下\n\t\n\tpublic class ForShow{\n\t\tpublic static void main(String[] args){\n\t\t\t/*静态成员变量\n\t\t\t  静态代码块\n\t\t\t  非静态成员变量\n\t\t\t  构造代码块a\t\n\t\t\t  构造代码块b\n\t\t\t  构造函数\n\t\t\t*/\n\t\t\tnew Test1();\n\t\t\t/*非静态成员变量\n\t\t\t  构造代码块a\t\n\t\t\t  构造代码块b\n\t\t\t  构造函数\n\t\t\t*/\n\t\t\tnew Test1();\n\t\t}\t\n\t\n\t}\n\n**可以看出静态成员变量和静态代码块一样，只会在类被加载到内存时加载唯一的一次**\n\n改变一下Test类中定义的顺序，看看有什么变化。\n\n\tpublic Test2{\n\t\t\n\t\t//静态代码块\n\t\tstatic{\n\t\t\tSystem.out.println(\"静态代码块\");\t\t\n\t\t}\n\t\t//构造函数\n\t\tpublic Test2(){\n\t\t\tSystem.out.println(\"构造函数\");\t\t\n\t\t}\n\t\t//构造代码块b\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块b\");\n\t\t}\n\t\t//构造代码块a\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块a\");\n\t\t}\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"非静态成员变量\");\t\n\t}\n\n输出如下\n\t\n\tpublic class ForShow{\n\t\tpublic static void main(String[] args){\n\t\t\t\n\t\t\t/*静态代码块\n\t\t\t  静态成员变量\n\t\t\t  构造代码块b\t\n\t\t\t  构造代码块a\n\t\t\t  非静态成员变量\n\t\t\t  构造函数\n\t\t\t*/\n\t\t\tnew Test2();\n\t\t}\t\n\t\n\t}\n\n**没有继承情况的执行顺序**\n\n- 静态代码块和静态成员变量，加载的顺序由编写的顺序决定\n- 构造代码块和非静态成员变量，加载顺序由编写顺序决定\n- 构造函数\n\n**有继承情况的执行顺序**\n\n定义父类\n\t\n\tpublic class Father{\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"父类静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"父类非静态成员变量\");\t\n\t\t\n\t\tpublic Father(){\n\t\t\tSystem.out.println(\"父类构造函数\");\t\t\n\t\t}\n\t}\n\n定义子类\n\n\tpublic class Son extends Father{\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"子类静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"子类非静态成员变量\");\t\n\t\t\n\t\tpublic Son(){\n\t\t\tSystem.out.println(\"子类构造函数\");\t\t\n\t\t}\n\t}\n\n**有继承情况的执行顺序**\n\n- 父类的静态（静态代码块，静态成员变量），子类的静态（静态代码块，静态成员变量）\n- 父类的非静态（构造代码块，非静态成员变量），父类的构造函数\n- 子类的非静态（构造代码块，非静态成员变量），子类的构造函数\n\n记住这几条规则足以应付这一类型的所有面试题\n\n### 常见的面试题\n\n**1.Java类定义如下，写出main函数执行后的输出结果**\n\t\n\tpublic class A{\n\t\tstatic {\n\t\t\tSystem.out.println(\"static A\");\n\t\t}\t\n\t\tpublic A(){\n\t\t\tSystem.out.println(\"class A\");\n\t\t}\n\t}\n\n\tpublic class B extends A{\n\t\tpublic B(){\n\t\t\tSystem.out.println(\"class B\");\n\t\t}\n\t\tpublic static void main(String[] args){\n\t\t\tB instance = new B();\t\t\t\n\t\t}\n\t}\n\n上面的知识点如果理解的很清楚的话，这个结果立马就能写出来\n\n所以输出如下\n\t\n\tstatic A\n\tclass A\n\tclass B\n\n**2.问题是如果main函数中的代码如下呢？就是B这个类new了2次**\n\t\n\tpublic static void main(String[] args){\n\t\t\tB instance1 = new B();\n\t\t\tB instance2 = new B();\t\t\t\n\t\t}\n\n万变不离其宗，输出如下\n\t\n\tstatic A\n\tclass A\n\tclass B\n\tclass A\n\tclass B\n\n因为静态成员变量和静态代码块只会在类被载入内存时加载一次。\n\n\n**本文链接：[面试官：说一下构造函数，静态代码块，构造代码块的加载顺序](http://www.ergzcode.com/2019/01/25/java-interview-0002.html)\n欢迎转载，请注明出处！**","source":"_posts/java-interview-0002.md","raw":"title: 面试官：说一下构造函数，静态代码块，构造代码块的加载顺序\nauthor: ergz\ntags:\n  - Java\n  - 面试题\ncategories:\n  - 搞定Java面试题\ndate: 2019-01-25 11:00:00\n---\n### 介绍\n\n**构造函数，静态代码块，构造代码块的执行顺序**\n\t\n\tclass Test{\n\t\t//静态代码块1\n\t\tstatic{\n\t\t\tSystem.out.println(\"我的静态代码块1\");\t\t\n\t\t}\n\t\t//构造代码块1\n\t\t{\n\t\t\tSystem.out.println(\"我的构造代码块1\");\n\t\t}\n\t\t//构造函数1\n\t\tpublic Test(){\n\t\t\tSystem.out.println(\"我是无参数构造函数\");\t\t\t\n\t\t}\n\t\t//构造函数2\n\t\tpublic Test(int t){\n\t\t\tSystem.out.println(\"我是带参数构造函数，\"+\"参数是\"+t);\t\t\t\n\t\t}\n\n\t\t//静态代码块2\n\t\tstatic{\n\t\t\tSystem.out.println(\"我的静态代码块2\");\t\t\n\t\t}\n\t\t//构造代码块2\n\t\t{\n\t\t\tSystem.out.println(\"我的构造代码块2\");\n\t\t}\n\t} \n\n<!--more-->\n来New一个Test类看看会输出什么？\n\n\tpublic class TestShow{\n\t\tpublic static void main(String[] args){\n\t\t\t/*创建第一个对象\n\t\t\t 我是静态代码块1\n\t\t\t 我的静态代码块2\n\t\t\t 我的构造代码块1\n\t\t\t 我的构造代码块2\n\t\t\t 我是无参数构造函数\n\t\t\t*/\n\t\t\tSystem.out.println(\"创建第一个对象：\");\n\t\t\tTest test1 = new Test();\n\t\t\t\n\t\t\t/*创建第二个对象\n\t\t\t  我的构造代码块1\n\t\t\t  我的构造代码块2\n\t\t\t  我是带参数构造函数，参数是5\n\t\t\t*/\n\t\t\tSystem.out.println(\"创建第二个对象：\");\n\t\t\tTest test2 = new Test(5);\n\t\t}\t\n\n\t}\n\n从输出我们可以总结处如下结论：\n\n执行时间：**静态代码块 > 构造代码块 > 构造函数，静态代码块只会在类被加载入内存时加载一次，构造代码块和构造函数都是在对象创建的时候执行，有几个对象就会执行几次**，所以一般将加载配置文件的过程写在静态代码块中。\n\n**没有继承的加载顺序**\n\n先定义一个类作为成员变量，方便看打印输出\n\t\n\tpublic class Parameter {\n\t\tpublic Parameter(String str){\n\t\t\tSystem.out.println(str);\n\t\t}\t\n\t}\n\n写一个测试类\n\t\n\tpublic Test1{\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"非静态成员变量\");\t\n\t\tpublic Test1(){\n\t\t\tSystem.out.println(\"构造函数\");\t\t\n\t\t}\n\t\t//静态代码块\n\t\tstatic{\n\t\t\tSystem.out.println(\"静态代码块\");\t\t\n\t\t}\n\t\t//构造代码块a\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块a\");\n\t\t}\n\t\t//构造代码块b\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块b\");\n\t\t}\n\t}\n\n输出如下\n\t\n\tpublic class ForShow{\n\t\tpublic static void main(String[] args){\n\t\t\t/*静态成员变量\n\t\t\t  静态代码块\n\t\t\t  非静态成员变量\n\t\t\t  构造代码块a\t\n\t\t\t  构造代码块b\n\t\t\t  构造函数\n\t\t\t*/\n\t\t\tnew Test1();\n\t\t\t/*非静态成员变量\n\t\t\t  构造代码块a\t\n\t\t\t  构造代码块b\n\t\t\t  构造函数\n\t\t\t*/\n\t\t\tnew Test1();\n\t\t}\t\n\t\n\t}\n\n**可以看出静态成员变量和静态代码块一样，只会在类被加载到内存时加载唯一的一次**\n\n改变一下Test类中定义的顺序，看看有什么变化。\n\n\tpublic Test2{\n\t\t\n\t\t//静态代码块\n\t\tstatic{\n\t\t\tSystem.out.println(\"静态代码块\");\t\t\n\t\t}\n\t\t//构造函数\n\t\tpublic Test2(){\n\t\t\tSystem.out.println(\"构造函数\");\t\t\n\t\t}\n\t\t//构造代码块b\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块b\");\n\t\t}\n\t\t//构造代码块a\n\t\t{\n\t\t\tSystem.out.println(\"构造代码块a\");\n\t\t}\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"非静态成员变量\");\t\n\t}\n\n输出如下\n\t\n\tpublic class ForShow{\n\t\tpublic static void main(String[] args){\n\t\t\t\n\t\t\t/*静态代码块\n\t\t\t  静态成员变量\n\t\t\t  构造代码块b\t\n\t\t\t  构造代码块a\n\t\t\t  非静态成员变量\n\t\t\t  构造函数\n\t\t\t*/\n\t\t\tnew Test2();\n\t\t}\t\n\t\n\t}\n\n**没有继承情况的执行顺序**\n\n- 静态代码块和静态成员变量，加载的顺序由编写的顺序决定\n- 构造代码块和非静态成员变量，加载顺序由编写顺序决定\n- 构造函数\n\n**有继承情况的执行顺序**\n\n定义父类\n\t\n\tpublic class Father{\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"父类静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"父类非静态成员变量\");\t\n\t\t\n\t\tpublic Father(){\n\t\t\tSystem.out.println(\"父类构造函数\");\t\t\n\t\t}\n\t}\n\n定义子类\n\n\tpublic class Son extends Father{\n\t\tpublic static Prarmeter parameter1 =  new Parameter(\"子类静态成员变量\");\n\t\tpublic Prarmeter parameter2 =  new Parameter(\"子类非静态成员变量\");\t\n\t\t\n\t\tpublic Son(){\n\t\t\tSystem.out.println(\"子类构造函数\");\t\t\n\t\t}\n\t}\n\n**有继承情况的执行顺序**\n\n- 父类的静态（静态代码块，静态成员变量），子类的静态（静态代码块，静态成员变量）\n- 父类的非静态（构造代码块，非静态成员变量），父类的构造函数\n- 子类的非静态（构造代码块，非静态成员变量），子类的构造函数\n\n记住这几条规则足以应付这一类型的所有面试题\n\n### 常见的面试题\n\n**1.Java类定义如下，写出main函数执行后的输出结果**\n\t\n\tpublic class A{\n\t\tstatic {\n\t\t\tSystem.out.println(\"static A\");\n\t\t}\t\n\t\tpublic A(){\n\t\t\tSystem.out.println(\"class A\");\n\t\t}\n\t}\n\n\tpublic class B extends A{\n\t\tpublic B(){\n\t\t\tSystem.out.println(\"class B\");\n\t\t}\n\t\tpublic static void main(String[] args){\n\t\t\tB instance = new B();\t\t\t\n\t\t}\n\t}\n\n上面的知识点如果理解的很清楚的话，这个结果立马就能写出来\n\n所以输出如下\n\t\n\tstatic A\n\tclass A\n\tclass B\n\n**2.问题是如果main函数中的代码如下呢？就是B这个类new了2次**\n\t\n\tpublic static void main(String[] args){\n\t\t\tB instance1 = new B();\n\t\t\tB instance2 = new B();\t\t\t\n\t\t}\n\n万变不离其宗，输出如下\n\t\n\tstatic A\n\tclass A\n\tclass B\n\tclass A\n\tclass B\n\n因为静态成员变量和静态代码块只会在类被载入内存时加载一次。\n\n\n**本文链接：[面试官：说一下构造函数，静态代码块，构造代码块的加载顺序](http://www.ergzcode.com/2019/01/25/java-interview-0002.html)\n欢迎转载，请注明出处！**","slug":"java-interview-0002","published":1,"updated":"2019-12-26T14:45:19.409Z","_id":"ck4m59o3a0000efd2aq738cg9","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><strong>构造函数，静态代码块，构造代码块的执行顺序</strong></p>\n<pre><code>class Test{\n    //静态代码块1\n    static{\n        System.out.println(&quot;我的静态代码块1&quot;);        \n    }\n    //构造代码块1\n    {\n        System.out.println(&quot;我的构造代码块1&quot;);\n    }\n    //构造函数1\n    public Test(){\n        System.out.println(&quot;我是无参数构造函数&quot;);            \n    }\n    //构造函数2\n    public Test(int t){\n        System.out.println(&quot;我是带参数构造函数，&quot;+&quot;参数是&quot;+t);            \n    }\n\n    //静态代码块2\n    static{\n        System.out.println(&quot;我的静态代码块2&quot;);        \n    }\n    //构造代码块2\n    {\n        System.out.println(&quot;我的构造代码块2&quot;);\n    }\n} </code></pre><a id=\"more\"></a>\n<p>来New一个Test类看看会输出什么？</p>\n<pre><code>public class TestShow{\n    public static void main(String[] args){\n        /*创建第一个对象\n         我是静态代码块1\n         我的静态代码块2\n         我的构造代码块1\n         我的构造代码块2\n         我是无参数构造函数\n        */\n        System.out.println(&quot;创建第一个对象：&quot;);\n        Test test1 = new Test();\n\n        /*创建第二个对象\n          我的构造代码块1\n          我的构造代码块2\n          我是带参数构造函数，参数是5\n        */\n        System.out.println(&quot;创建第二个对象：&quot;);\n        Test test2 = new Test(5);\n    }    \n\n}</code></pre><p>从输出我们可以总结处如下结论：</p>\n<p>执行时间：<strong>静态代码块 &gt; 构造代码块 &gt; 构造函数，静态代码块只会在类被加载入内存时加载一次，构造代码块和构造函数都是在对象创建的时候执行，有几个对象就会执行几次</strong>，所以一般将加载配置文件的过程写在静态代码块中。</p>\n<p><strong>没有继承的加载顺序</strong></p>\n<p>先定义一个类作为成员变量，方便看打印输出</p>\n<pre><code>public class Parameter {\n    public Parameter(String str){\n        System.out.println(str);\n    }    \n}</code></pre><p>写一个测试类</p>\n<pre><code>public Test1{\n    public static Prarmeter parameter1 =  new Parameter(&quot;静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;非静态成员变量&quot;);    \n    public Test1(){\n        System.out.println(&quot;构造函数&quot;);        \n    }\n    //静态代码块\n    static{\n        System.out.println(&quot;静态代码块&quot;);        \n    }\n    //构造代码块a\n    {\n        System.out.println(&quot;构造代码块a&quot;);\n    }\n    //构造代码块b\n    {\n        System.out.println(&quot;构造代码块b&quot;);\n    }\n}</code></pre><p>输出如下</p>\n<pre><code>public class ForShow{\n    public static void main(String[] args){\n        /*静态成员变量\n          静态代码块\n          非静态成员变量\n          构造代码块a    \n          构造代码块b\n          构造函数\n        */\n        new Test1();\n        /*非静态成员变量\n          构造代码块a    \n          构造代码块b\n          构造函数\n        */\n        new Test1();\n    }    \n\n}</code></pre><p><strong>可以看出静态成员变量和静态代码块一样，只会在类被加载到内存时加载唯一的一次</strong></p>\n<p>改变一下Test类中定义的顺序，看看有什么变化。</p>\n<pre><code>public Test2{\n\n    //静态代码块\n    static{\n        System.out.println(&quot;静态代码块&quot;);        \n    }\n    //构造函数\n    public Test2(){\n        System.out.println(&quot;构造函数&quot;);        \n    }\n    //构造代码块b\n    {\n        System.out.println(&quot;构造代码块b&quot;);\n    }\n    //构造代码块a\n    {\n        System.out.println(&quot;构造代码块a&quot;);\n    }\n    public static Prarmeter parameter1 =  new Parameter(&quot;静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;非静态成员变量&quot;);    \n}</code></pre><p>输出如下</p>\n<pre><code>public class ForShow{\n    public static void main(String[] args){\n\n        /*静态代码块\n          静态成员变量\n          构造代码块b    \n          构造代码块a\n          非静态成员变量\n          构造函数\n        */\n        new Test2();\n    }    \n\n}</code></pre><p><strong>没有继承情况的执行顺序</strong></p>\n<ul>\n<li>静态代码块和静态成员变量，加载的顺序由编写的顺序决定</li>\n<li>构造代码块和非静态成员变量，加载顺序由编写顺序决定</li>\n<li>构造函数</li>\n</ul>\n<p><strong>有继承情况的执行顺序</strong></p>\n<p>定义父类</p>\n<pre><code>public class Father{\n    public static Prarmeter parameter1 =  new Parameter(&quot;父类静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;父类非静态成员变量&quot;);    \n\n    public Father(){\n        System.out.println(&quot;父类构造函数&quot;);        \n    }\n}</code></pre><p>定义子类</p>\n<pre><code>public class Son extends Father{\n    public static Prarmeter parameter1 =  new Parameter(&quot;子类静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;子类非静态成员变量&quot;);    \n\n    public Son(){\n        System.out.println(&quot;子类构造函数&quot;);        \n    }\n}</code></pre><p><strong>有继承情况的执行顺序</strong></p>\n<ul>\n<li>父类的静态（静态代码块，静态成员变量），子类的静态（静态代码块，静态成员变量）</li>\n<li>父类的非静态（构造代码块，非静态成员变量），父类的构造函数</li>\n<li>子类的非静态（构造代码块，非静态成员变量），子类的构造函数</li>\n</ul>\n<p>记住这几条规则足以应付这一类型的所有面试题</p>\n<h3 id=\"常见的面试题\"><a href=\"#常见的面试题\" class=\"headerlink\" title=\"常见的面试题\"></a>常见的面试题</h3><p><strong>1.Java类定义如下，写出main函数执行后的输出结果</strong></p>\n<pre><code>public class A{\n    static {\n        System.out.println(&quot;static A&quot;);\n    }    \n    public A(){\n        System.out.println(&quot;class A&quot;);\n    }\n}\n\npublic class B extends A{\n    public B(){\n        System.out.println(&quot;class B&quot;);\n    }\n    public static void main(String[] args){\n        B instance = new B();            \n    }\n}</code></pre><p>上面的知识点如果理解的很清楚的话，这个结果立马就能写出来</p>\n<p>所以输出如下</p>\n<pre><code>static A\nclass A\nclass B</code></pre><p><strong>2.问题是如果main函数中的代码如下呢？就是B这个类new了2次</strong></p>\n<pre><code>public static void main(String[] args){\n        B instance1 = new B();\n        B instance2 = new B();            \n    }</code></pre><p>万变不离其宗，输出如下</p>\n<pre><code>static A\nclass A\nclass B\nclass A\nclass B</code></pre><p>因为静态成员变量和静态代码块只会在类被载入内存时加载一次。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/01/25/java-interview-0002.html\">面试官：说一下构造函数，静态代码块，构造代码块的加载顺序</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><strong>构造函数，静态代码块，构造代码块的执行顺序</strong></p>\n<pre><code>class Test{\n    //静态代码块1\n    static{\n        System.out.println(&quot;我的静态代码块1&quot;);        \n    }\n    //构造代码块1\n    {\n        System.out.println(&quot;我的构造代码块1&quot;);\n    }\n    //构造函数1\n    public Test(){\n        System.out.println(&quot;我是无参数构造函数&quot;);            \n    }\n    //构造函数2\n    public Test(int t){\n        System.out.println(&quot;我是带参数构造函数，&quot;+&quot;参数是&quot;+t);            \n    }\n\n    //静态代码块2\n    static{\n        System.out.println(&quot;我的静态代码块2&quot;);        \n    }\n    //构造代码块2\n    {\n        System.out.println(&quot;我的构造代码块2&quot;);\n    }\n} </code></pre>","more":"<p>来New一个Test类看看会输出什么？</p>\n<pre><code>public class TestShow{\n    public static void main(String[] args){\n        /*创建第一个对象\n         我是静态代码块1\n         我的静态代码块2\n         我的构造代码块1\n         我的构造代码块2\n         我是无参数构造函数\n        */\n        System.out.println(&quot;创建第一个对象：&quot;);\n        Test test1 = new Test();\n\n        /*创建第二个对象\n          我的构造代码块1\n          我的构造代码块2\n          我是带参数构造函数，参数是5\n        */\n        System.out.println(&quot;创建第二个对象：&quot;);\n        Test test2 = new Test(5);\n    }    \n\n}</code></pre><p>从输出我们可以总结处如下结论：</p>\n<p>执行时间：<strong>静态代码块 &gt; 构造代码块 &gt; 构造函数，静态代码块只会在类被加载入内存时加载一次，构造代码块和构造函数都是在对象创建的时候执行，有几个对象就会执行几次</strong>，所以一般将加载配置文件的过程写在静态代码块中。</p>\n<p><strong>没有继承的加载顺序</strong></p>\n<p>先定义一个类作为成员变量，方便看打印输出</p>\n<pre><code>public class Parameter {\n    public Parameter(String str){\n        System.out.println(str);\n    }    \n}</code></pre><p>写一个测试类</p>\n<pre><code>public Test1{\n    public static Prarmeter parameter1 =  new Parameter(&quot;静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;非静态成员变量&quot;);    \n    public Test1(){\n        System.out.println(&quot;构造函数&quot;);        \n    }\n    //静态代码块\n    static{\n        System.out.println(&quot;静态代码块&quot;);        \n    }\n    //构造代码块a\n    {\n        System.out.println(&quot;构造代码块a&quot;);\n    }\n    //构造代码块b\n    {\n        System.out.println(&quot;构造代码块b&quot;);\n    }\n}</code></pre><p>输出如下</p>\n<pre><code>public class ForShow{\n    public static void main(String[] args){\n        /*静态成员变量\n          静态代码块\n          非静态成员变量\n          构造代码块a    \n          构造代码块b\n          构造函数\n        */\n        new Test1();\n        /*非静态成员变量\n          构造代码块a    \n          构造代码块b\n          构造函数\n        */\n        new Test1();\n    }    \n\n}</code></pre><p><strong>可以看出静态成员变量和静态代码块一样，只会在类被加载到内存时加载唯一的一次</strong></p>\n<p>改变一下Test类中定义的顺序，看看有什么变化。</p>\n<pre><code>public Test2{\n\n    //静态代码块\n    static{\n        System.out.println(&quot;静态代码块&quot;);        \n    }\n    //构造函数\n    public Test2(){\n        System.out.println(&quot;构造函数&quot;);        \n    }\n    //构造代码块b\n    {\n        System.out.println(&quot;构造代码块b&quot;);\n    }\n    //构造代码块a\n    {\n        System.out.println(&quot;构造代码块a&quot;);\n    }\n    public static Prarmeter parameter1 =  new Parameter(&quot;静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;非静态成员变量&quot;);    \n}</code></pre><p>输出如下</p>\n<pre><code>public class ForShow{\n    public static void main(String[] args){\n\n        /*静态代码块\n          静态成员变量\n          构造代码块b    \n          构造代码块a\n          非静态成员变量\n          构造函数\n        */\n        new Test2();\n    }    \n\n}</code></pre><p><strong>没有继承情况的执行顺序</strong></p>\n<ul>\n<li>静态代码块和静态成员变量，加载的顺序由编写的顺序决定</li>\n<li>构造代码块和非静态成员变量，加载顺序由编写顺序决定</li>\n<li>构造函数</li>\n</ul>\n<p><strong>有继承情况的执行顺序</strong></p>\n<p>定义父类</p>\n<pre><code>public class Father{\n    public static Prarmeter parameter1 =  new Parameter(&quot;父类静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;父类非静态成员变量&quot;);    \n\n    public Father(){\n        System.out.println(&quot;父类构造函数&quot;);        \n    }\n}</code></pre><p>定义子类</p>\n<pre><code>public class Son extends Father{\n    public static Prarmeter parameter1 =  new Parameter(&quot;子类静态成员变量&quot;);\n    public Prarmeter parameter2 =  new Parameter(&quot;子类非静态成员变量&quot;);    \n\n    public Son(){\n        System.out.println(&quot;子类构造函数&quot;);        \n    }\n}</code></pre><p><strong>有继承情况的执行顺序</strong></p>\n<ul>\n<li>父类的静态（静态代码块，静态成员变量），子类的静态（静态代码块，静态成员变量）</li>\n<li>父类的非静态（构造代码块，非静态成员变量），父类的构造函数</li>\n<li>子类的非静态（构造代码块，非静态成员变量），子类的构造函数</li>\n</ul>\n<p>记住这几条规则足以应付这一类型的所有面试题</p>\n<h3 id=\"常见的面试题\"><a href=\"#常见的面试题\" class=\"headerlink\" title=\"常见的面试题\"></a>常见的面试题</h3><p><strong>1.Java类定义如下，写出main函数执行后的输出结果</strong></p>\n<pre><code>public class A{\n    static {\n        System.out.println(&quot;static A&quot;);\n    }    \n    public A(){\n        System.out.println(&quot;class A&quot;);\n    }\n}\n\npublic class B extends A{\n    public B(){\n        System.out.println(&quot;class B&quot;);\n    }\n    public static void main(String[] args){\n        B instance = new B();            \n    }\n}</code></pre><p>上面的知识点如果理解的很清楚的话，这个结果立马就能写出来</p>\n<p>所以输出如下</p>\n<pre><code>static A\nclass A\nclass B</code></pre><p><strong>2.问题是如果main函数中的代码如下呢？就是B这个类new了2次</strong></p>\n<pre><code>public static void main(String[] args){\n        B instance1 = new B();\n        B instance2 = new B();            \n    }</code></pre><p>万变不离其宗，输出如下</p>\n<pre><code>static A\nclass A\nclass B\nclass A\nclass B</code></pre><p>因为静态成员变量和静态代码块只会在类被载入内存时加载一次。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/01/25/java-interview-0002.html\">面试官：说一下构造函数，静态代码块，构造代码块的加载顺序</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"面试官：说一下Spring StringBuffer StringBuilder的区别","author":"ergz","date":"2019-01-26T14:23:00.000Z","_content":"### 介绍\n\n先来看String类的实现\n\n\tpublic final class String implements  \tjava.io.serializable,Comparable<String>,CharSequence{\n\t\t/** The value is used for character storage **/\n\n\t\tprivate final char value[];\n\t}\n\n先来说说final关键字的作用\n \n - final修饰类时，表明这个类不能被继承\n - final修饰方法时，表明方法不能被重写\n - final修饰变量时，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象\n \n<!--more-->\n\n可以看到String类和保存变量的value数组都被final修饰，表明String类是不可变的。\n\nStringBuffer和StringBuilder都继承自AbstractStringBuilder类，看一下AbstractStringBuilder类的定义\n\t\n\tabstract class AbstractStringBuilder implements Appendable,CharSequence{\n\t\t/**\n\t\t *The value is userd for character storage\n\t\t */\n\t\tchar[] value;\n\t\t}\n\n看到区别了吗？ value数组没有用private和final修饰，说明了StringBuffer和StringBuilder是可变的。\n\n而StringBuilder和StringBuffer的方法是差不多的，只不过StringBuffer在方法上添加了`synchronized`关键字，所以在多线程环境下用StringBuffer来获得更高的效率。\n\n看2个类中同一个方法的定义\n\nStringBUffer类\n\n\t//StringBuffer append方法\n\t@Override\n\tpublic synchronized StringBuffer append(char[] str){\n\t\ttoStringCache = null;\n\t\tsuper.append(str);\t\n\t\treturn this;\n\t}\n\nStringBuilder类\n\n\t//StringBuilder append方法\n\t@Override\n\tpublic StringBuilder append(char[] str){\n\t\tsuper.append(str);\n\t\treturn this;\n\t}\n\n因为StringBuffer和StringBulider的实现类似，所以性能比较就落在String和StringBuilder之间了。\n\n1.String是不可变对象，每次操作都会生成新的String对象，然后指针指向新的对象。\n\n2.抽象类AbstractStringBuilder内部提供了一个自动扩容机制，当发现长度不够的时候，会自动进行扩容工作（具体扩容可以看源码，很容易理解），会创建一个新的数组，并将原来数组的数据复制到新的数组，不会创建新的对象，所以拼接字符串的效率高。\n\n用源码证实一下\n\nString类\n\t\n\tpublic String substring(int beginIndex) {\n        if (beginIndex < 0) {\n            throw new StringIndexOutOfBoundsException(beginIndex);\n        }\n        int subLen = value.length - beginIndex;\n        if (subLen < 0) {\n            throw new StringIndexOutOfBoundsException(subLen);\n        }\n        return (beginIndex == 0) ? this : new String(value, beginIndex, subLen);\n    }\n\nStringBuilder类\n\n\tpublic StringBuilder append(String str) {\n        super.append(str);\n        return this;\n    }\n\n介绍完毕，所以你应该知道这道题应该怎么答了\n\n### 常见面试题\n\n**1. 说一下String StringBuffer StringBuilder的区别**\n\n- 都是final类，不能被继承\n- String长度是不可变的，StringBuffer和StringBuilder长度是可变的\n- StringBuffer是线程安全的，StringBuilder不是线程安全的。但他们的方法很相似，StringBuffer在方法上添加了`synchronized`关键字修饰，保证了线程安全\n- StringBuilder比StringBuffer拥有更好的性能\n- 如果一个String类型的字符串，在编译时可以确定是一个字符串常量，则编译完成后，字符串会自动拼接成一个常量，此时String比StringBuffer和StringBuilder的性能好的多\n\n我用例子解释一下第五条\n\n\tString a = \"a\";\n\tString b = \"b\";\n\tString c = a+b;\n\tString d = \"a\"+\"b\"+\"c\";\n\n反编译class的文件是这样的\n\t\n\tString a = \"a\";\n\tString b = \"b\";\n\t(new StringBuilder()).append(a).append(b).toString();\n\tString d = \"abc\";\n\n看到String d,理解了吗？\n\n同时看c的拼接过程，先生成一个StringBuilder对象，再调用2次append方法，最后再返回一个String对象，知道StringBuilder比String慢的愿意了吧。\n\n**本文链接：[面试官：说一下Spring StringBuffer StringBuilder的区别](http://www.ergzcode.com/2019/01/26/java-interview-0003.html)\n欢迎转载，请注明出处！**","source":"_posts/java-interview-0003.md","raw":"title: 面试官：说一下Spring StringBuffer StringBuilder的区别\nauthor: ergz\ntags:\n  - Java\n  - 面试题\ncategories:\n  - 搞定Java面试题\ndate: 2019-01-26 22:23:00\n---\n### 介绍\n\n先来看String类的实现\n\n\tpublic final class String implements  \tjava.io.serializable,Comparable<String>,CharSequence{\n\t\t/** The value is used for character storage **/\n\n\t\tprivate final char value[];\n\t}\n\n先来说说final关键字的作用\n \n - final修饰类时，表明这个类不能被继承\n - final修饰方法时，表明方法不能被重写\n - final修饰变量时，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象\n \n<!--more-->\n\n可以看到String类和保存变量的value数组都被final修饰，表明String类是不可变的。\n\nStringBuffer和StringBuilder都继承自AbstractStringBuilder类，看一下AbstractStringBuilder类的定义\n\t\n\tabstract class AbstractStringBuilder implements Appendable,CharSequence{\n\t\t/**\n\t\t *The value is userd for character storage\n\t\t */\n\t\tchar[] value;\n\t\t}\n\n看到区别了吗？ value数组没有用private和final修饰，说明了StringBuffer和StringBuilder是可变的。\n\n而StringBuilder和StringBuffer的方法是差不多的，只不过StringBuffer在方法上添加了`synchronized`关键字，所以在多线程环境下用StringBuffer来获得更高的效率。\n\n看2个类中同一个方法的定义\n\nStringBUffer类\n\n\t//StringBuffer append方法\n\t@Override\n\tpublic synchronized StringBuffer append(char[] str){\n\t\ttoStringCache = null;\n\t\tsuper.append(str);\t\n\t\treturn this;\n\t}\n\nStringBuilder类\n\n\t//StringBuilder append方法\n\t@Override\n\tpublic StringBuilder append(char[] str){\n\t\tsuper.append(str);\n\t\treturn this;\n\t}\n\n因为StringBuffer和StringBulider的实现类似，所以性能比较就落在String和StringBuilder之间了。\n\n1.String是不可变对象，每次操作都会生成新的String对象，然后指针指向新的对象。\n\n2.抽象类AbstractStringBuilder内部提供了一个自动扩容机制，当发现长度不够的时候，会自动进行扩容工作（具体扩容可以看源码，很容易理解），会创建一个新的数组，并将原来数组的数据复制到新的数组，不会创建新的对象，所以拼接字符串的效率高。\n\n用源码证实一下\n\nString类\n\t\n\tpublic String substring(int beginIndex) {\n        if (beginIndex < 0) {\n            throw new StringIndexOutOfBoundsException(beginIndex);\n        }\n        int subLen = value.length - beginIndex;\n        if (subLen < 0) {\n            throw new StringIndexOutOfBoundsException(subLen);\n        }\n        return (beginIndex == 0) ? this : new String(value, beginIndex, subLen);\n    }\n\nStringBuilder类\n\n\tpublic StringBuilder append(String str) {\n        super.append(str);\n        return this;\n    }\n\n介绍完毕，所以你应该知道这道题应该怎么答了\n\n### 常见面试题\n\n**1. 说一下String StringBuffer StringBuilder的区别**\n\n- 都是final类，不能被继承\n- String长度是不可变的，StringBuffer和StringBuilder长度是可变的\n- StringBuffer是线程安全的，StringBuilder不是线程安全的。但他们的方法很相似，StringBuffer在方法上添加了`synchronized`关键字修饰，保证了线程安全\n- StringBuilder比StringBuffer拥有更好的性能\n- 如果一个String类型的字符串，在编译时可以确定是一个字符串常量，则编译完成后，字符串会自动拼接成一个常量，此时String比StringBuffer和StringBuilder的性能好的多\n\n我用例子解释一下第五条\n\n\tString a = \"a\";\n\tString b = \"b\";\n\tString c = a+b;\n\tString d = \"a\"+\"b\"+\"c\";\n\n反编译class的文件是这样的\n\t\n\tString a = \"a\";\n\tString b = \"b\";\n\t(new StringBuilder()).append(a).append(b).toString();\n\tString d = \"abc\";\n\n看到String d,理解了吗？\n\n同时看c的拼接过程，先生成一个StringBuilder对象，再调用2次append方法，最后再返回一个String对象，知道StringBuilder比String慢的愿意了吧。\n\n**本文链接：[面试官：说一下Spring StringBuffer StringBuilder的区别](http://www.ergzcode.com/2019/01/26/java-interview-0003.html)\n欢迎转载，请注明出处！**","slug":"java-interview-0003","published":1,"updated":"2019-12-26T14:32:29.581Z","_id":"ck4mtnuaj0000iad2b8753r7w","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>先来看String类的实现</p>\n<pre><code>public final class String implements      java.io.serializable,Comparable&lt;String&gt;,CharSequence{\n    /** The value is used for character storage **/\n\n    private final char value[];\n}</code></pre><p>先来说说final关键字的作用</p>\n<ul>\n<li>final修饰类时，表明这个类不能被继承</li>\n<li>final修饰方法时，表明方法不能被重写</li>\n<li>final修饰变量时，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象</li>\n</ul>\n<a id=\"more\"></a>\n\n<p>可以看到String类和保存变量的value数组都被final修饰，表明String类是不可变的。</p>\n<p>StringBuffer和StringBuilder都继承自AbstractStringBuilder类，看一下AbstractStringBuilder类的定义</p>\n<pre><code>abstract class AbstractStringBuilder implements Appendable,CharSequence{\n    /**\n     *The value is userd for character storage\n     */\n    char[] value;\n    }</code></pre><p>看到区别了吗？ value数组没有用private和final修饰，说明了StringBuffer和StringBuilder是可变的。</p>\n<p>而StringBuilder和StringBuffer的方法是差不多的，只不过StringBuffer在方法上添加了<code>synchronized</code>关键字，所以在多线程环境下用StringBuffer来获得更高的效率。</p>\n<p>看2个类中同一个方法的定义</p>\n<p>StringBUffer类</p>\n<pre><code>//StringBuffer append方法\n@Override\npublic synchronized StringBuffer append(char[] str){\n    toStringCache = null;\n    super.append(str);    \n    return this;\n}</code></pre><p>StringBuilder类</p>\n<pre><code>//StringBuilder append方法\n@Override\npublic StringBuilder append(char[] str){\n    super.append(str);\n    return this;\n}</code></pre><p>因为StringBuffer和StringBulider的实现类似，所以性能比较就落在String和StringBuilder之间了。</p>\n<p>1.String是不可变对象，每次操作都会生成新的String对象，然后指针指向新的对象。</p>\n<p>2.抽象类AbstractStringBuilder内部提供了一个自动扩容机制，当发现长度不够的时候，会自动进行扩容工作（具体扩容可以看源码，很容易理解），会创建一个新的数组，并将原来数组的数据复制到新的数组，不会创建新的对象，所以拼接字符串的效率高。</p>\n<p>用源码证实一下</p>\n<p>String类</p>\n<pre><code>public String substring(int beginIndex) {\n    if (beginIndex &lt; 0) {\n        throw new StringIndexOutOfBoundsException(beginIndex);\n    }\n    int subLen = value.length - beginIndex;\n    if (subLen &lt; 0) {\n        throw new StringIndexOutOfBoundsException(subLen);\n    }\n    return (beginIndex == 0) ? this : new String(value, beginIndex, subLen);\n}</code></pre><p>StringBuilder类</p>\n<pre><code>public StringBuilder append(String str) {\n    super.append(str);\n    return this;\n}</code></pre><p>介绍完毕，所以你应该知道这道题应该怎么答了</p>\n<h3 id=\"常见面试题\"><a href=\"#常见面试题\" class=\"headerlink\" title=\"常见面试题\"></a>常见面试题</h3><p><strong>1. 说一下String StringBuffer StringBuilder的区别</strong></p>\n<ul>\n<li>都是final类，不能被继承</li>\n<li>String长度是不可变的，StringBuffer和StringBuilder长度是可变的</li>\n<li>StringBuffer是线程安全的，StringBuilder不是线程安全的。但他们的方法很相似，StringBuffer在方法上添加了<code>synchronized</code>关键字修饰，保证了线程安全</li>\n<li>StringBuilder比StringBuffer拥有更好的性能</li>\n<li>如果一个String类型的字符串，在编译时可以确定是一个字符串常量，则编译完成后，字符串会自动拼接成一个常量，此时String比StringBuffer和StringBuilder的性能好的多</li>\n</ul>\n<p>我用例子解释一下第五条</p>\n<pre><code>String a = &quot;a&quot;;\nString b = &quot;b&quot;;\nString c = a+b;\nString d = &quot;a&quot;+&quot;b&quot;+&quot;c&quot;;</code></pre><p>反编译class的文件是这样的</p>\n<pre><code>String a = &quot;a&quot;;\nString b = &quot;b&quot;;\n(new StringBuilder()).append(a).append(b).toString();\nString d = &quot;abc&quot;;</code></pre><p>看到String d,理解了吗？</p>\n<p>同时看c的拼接过程，先生成一个StringBuilder对象，再调用2次append方法，最后再返回一个String对象，知道StringBuilder比String慢的愿意了吧。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/01/26/java-interview-0003.html\">面试官：说一下Spring StringBuffer StringBuilder的区别</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p>先来看String类的实现</p>\n<pre><code>public final class String implements      java.io.serializable,Comparable&lt;String&gt;,CharSequence{\n    /** The value is used for character storage **/\n\n    private final char value[];\n}</code></pre><p>先来说说final关键字的作用</p>\n<ul>\n<li>final修饰类时，表明这个类不能被继承</li>\n<li>final修饰方法时，表明方法不能被重写</li>\n<li>final修饰变量时，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象</li>\n</ul>","more":"<p>可以看到String类和保存变量的value数组都被final修饰，表明String类是不可变的。</p>\n<p>StringBuffer和StringBuilder都继承自AbstractStringBuilder类，看一下AbstractStringBuilder类的定义</p>\n<pre><code>abstract class AbstractStringBuilder implements Appendable,CharSequence{\n    /**\n     *The value is userd for character storage\n     */\n    char[] value;\n    }</code></pre><p>看到区别了吗？ value数组没有用private和final修饰，说明了StringBuffer和StringBuilder是可变的。</p>\n<p>而StringBuilder和StringBuffer的方法是差不多的，只不过StringBuffer在方法上添加了<code>synchronized</code>关键字，所以在多线程环境下用StringBuffer来获得更高的效率。</p>\n<p>看2个类中同一个方法的定义</p>\n<p>StringBUffer类</p>\n<pre><code>//StringBuffer append方法\n@Override\npublic synchronized StringBuffer append(char[] str){\n    toStringCache = null;\n    super.append(str);    \n    return this;\n}</code></pre><p>StringBuilder类</p>\n<pre><code>//StringBuilder append方法\n@Override\npublic StringBuilder append(char[] str){\n    super.append(str);\n    return this;\n}</code></pre><p>因为StringBuffer和StringBulider的实现类似，所以性能比较就落在String和StringBuilder之间了。</p>\n<p>1.String是不可变对象，每次操作都会生成新的String对象，然后指针指向新的对象。</p>\n<p>2.抽象类AbstractStringBuilder内部提供了一个自动扩容机制，当发现长度不够的时候，会自动进行扩容工作（具体扩容可以看源码，很容易理解），会创建一个新的数组，并将原来数组的数据复制到新的数组，不会创建新的对象，所以拼接字符串的效率高。</p>\n<p>用源码证实一下</p>\n<p>String类</p>\n<pre><code>public String substring(int beginIndex) {\n    if (beginIndex &lt; 0) {\n        throw new StringIndexOutOfBoundsException(beginIndex);\n    }\n    int subLen = value.length - beginIndex;\n    if (subLen &lt; 0) {\n        throw new StringIndexOutOfBoundsException(subLen);\n    }\n    return (beginIndex == 0) ? this : new String(value, beginIndex, subLen);\n}</code></pre><p>StringBuilder类</p>\n<pre><code>public StringBuilder append(String str) {\n    super.append(str);\n    return this;\n}</code></pre><p>介绍完毕，所以你应该知道这道题应该怎么答了</p>\n<h3 id=\"常见面试题\"><a href=\"#常见面试题\" class=\"headerlink\" title=\"常见面试题\"></a>常见面试题</h3><p><strong>1. 说一下String StringBuffer StringBuilder的区别</strong></p>\n<ul>\n<li>都是final类，不能被继承</li>\n<li>String长度是不可变的，StringBuffer和StringBuilder长度是可变的</li>\n<li>StringBuffer是线程安全的，StringBuilder不是线程安全的。但他们的方法很相似，StringBuffer在方法上添加了<code>synchronized</code>关键字修饰，保证了线程安全</li>\n<li>StringBuilder比StringBuffer拥有更好的性能</li>\n<li>如果一个String类型的字符串，在编译时可以确定是一个字符串常量，则编译完成后，字符串会自动拼接成一个常量，此时String比StringBuffer和StringBuilder的性能好的多</li>\n</ul>\n<p>我用例子解释一下第五条</p>\n<pre><code>String a = &quot;a&quot;;\nString b = &quot;b&quot;;\nString c = a+b;\nString d = &quot;a&quot;+&quot;b&quot;+&quot;c&quot;;</code></pre><p>反编译class的文件是这样的</p>\n<pre><code>String a = &quot;a&quot;;\nString b = &quot;b&quot;;\n(new StringBuilder()).append(a).append(b).toString();\nString d = &quot;abc&quot;;</code></pre><p>看到String d,理解了吗？</p>\n<p>同时看c的拼接过程，先生成一个StringBuilder对象，再调用2次append方法，最后再返回一个String对象，知道StringBuilder比String慢的愿意了吧。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/01/26/java-interview-0003.html\">面试官：说一下Spring StringBuffer StringBuilder的区别</a><br>欢迎转载，请注明出处！</strong></p>"},{"title":"面试官：说一下八种基本数据类型及其包装类吧","author":"ergz","date":"2019-01-24T14:40:00.000Z","_content":"### 介绍\n**Java基本数据类型分为4大类：**\n\n- 整数型：byte,short,int,long\n- 浮点型：flost,double\n- 逻辑型：boolean\n- 字符型：char\n\n原始类型 | 原始类型所占字节数 |  包装类  \n-|-|-\nbyte | 1个字节 | Byte |\nshort | 2个字节 | Short |\nint | 4个字节 | Integer |\nlong | 8个字节 | Long |\nfloat | 4个字节 | Float |\ndouble | 8个字节 | Double |\nboolean | 1个字节 | Boolean |\nchar | 2个字节 | Character |\n\n<!--more-->\n### 常见面试题\n要注意的是基本数据的包装类很多都实现了享元模式。享元模式就是运用共享技术有效地支持大量细粒度对象的复用。用一个常见的面试题来解释\n\n**1.判断如下代码的输出，并说出原因**\n\n    Integer a1 = 40;\n\tInteger a2 = 40;\n\tSystem.out.println(a1==a2);\n\t\n\tInteger a3 = 200;\n\tInteger a4 = 200;\n\tSystem.out.println(a3 == a4);\n\n由自动装箱和拆箱可以知道这2种写法是等价的\n\t\n\tInteger a1 = 40;\n\tInteger a1 = Integer.valueOf(40);\n看一下Integer.valueOf(int i)的方法\n\t\n\t//...valueOf(int):Integer\n    public static Integer valueOf(int i) {\n        assert IntegerCache.high >= 127;\n        if (i >= IntegerCache.low && i <= IntegerCache.high)\n            return IntegerCache.cache[i + (-IntegerCache.low)];\n        return new Integer(i);\n    }\n\n\t//...IntegerCache\n\tprivate static class IntegerCache {\n        static final int low = -128;\n        static final int high;\n        static final Integer cache[];\n\n        static {\n            // high value may be configured by property\n            int h = 127;\n            String integerCacheHighPropValue =\n                sun.misc.VM.getSavedProperty(\"java.lang.Integer.IntegerCache.high\");\n            if (integerCacheHighPropValue != null) {\n                int i = parseInt(integerCacheHighPropValue);\n                i = Math.max(i, 127);\n                // Maximum array size is Integer.MAX_VALUE\n                h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n            }\n            high = h;\n\n            cache = new Integer[(high - low) + 1];\n            int j = low;\n            for(int k = 0; k < cache.length; k++)\n                cache[k] = new Integer(j++);\n        }\n\n        private IntegerCache() {}\n    }\nIntegerCache是Integer的静态内部类，默认创建了[-128,127]的对象，并放到IntegerCache内部的一个cache数组中，在[-128,127]这个范围内的整数对象，不用创建。直接从IntegerCache中的cache数组中根据下标拿就可以了,超出这个范围的每次去创建新的对象。其他几种包装类型的常量池和Integer的思路差不多，源码都很相似。\n所以答案如下：\n\t\n\tInteger a1 = 40;\n\tInteger a2 = 40;\n\tSystem.out.println(a1 == a2);//true\n\t\n\tInteger a3 = 200;\n\tInteger a4 = 200;\n\tSystem.out.println(a3 == a4);//false\n\n包装类缓存数据范围如下：\n\n包装类 | 缓存范围\n-|-\nByte | -128~127 \nShort | -128~127 \nInteger | -128~127\nLong | -128~127\nCharacter | 0~127\n\n**2.Java一个char类型可以存储中文吗？**\n\n可以，因为Java中使用了Unicode字符，不论是中文还是英文固定占用2个字节。\n\n\tchar a = '中'；\n\t// 中\n\tSystem.out.println(a);\t\n\n**3.什么是自动装箱，自动拆箱**\n\n自动装箱就是Java自动将原始类型转换为对应的对象，比如将int的变量转换为Integer对象，这个过程就是装箱，反之将Integer对象转换为int类型的值，这个过程就是拆箱。因为这里的装箱和拆箱是自动进行的非人为转换的，所以就称作自动装箱和自动拆箱。\n\n自动装箱时编译器调用ValueOf将原始类型值转换为对象，同时自动拆箱时，编译器通过调用类似intValue(),doubleValue()这类的方法将对象转换为原始类型值\n\t\n\t//jdk1.5之前的写法\n\tInteger tempNum1 = Integer.valueOf(5);\n\tint num1 = tempNum1.intValue();\n\t\n\t//jdk1.5之后的写法，自动装箱和拆箱\n\tInteger tempNum2= 5;\n\tint num1 = tempNum2;\n\n**4.为什么要需要基本数据类型的包装类**\n\n（1）Java是面向对象的语言，很多地方是需要使用的是对象而不是基本数据类型。例如，List,Map等容器类中基本数据类型是放不进去的。\n（2）包装类在原先的基本数据类型上，新增加了很多方法，比如Integer.valueOf(String s)等\n\t\n**5.既然包装类能完成所有的功能，为啥还需要基本数据类型**\n\n基本数据类型基于数值，对象类型基于引用。基本数据类型存储在栈的局部变量表中。\n\n而对象类型的变量则是存储堆中引用，实例放在堆中，因此对象类型的变量需要占用更多的内存空间，基本数据类型因为占用更少内存被保留下来。\n\n**6.写出如下代码的输出**\n\n\tInteger i1 = 40;\n\tInteger i2 = 40;\n\tInteger i3 = 0;\n\tInteger i4 = new Integer(40);\n\tInteger i5 = new Integer(40);\n\tInteger i6 = new Integer(0);\n\t\n\tSystem.out.println(i1 == i2);\n\tSystem.out.println(i1 == i2 + i3);\n\tSystem.out.println(i1 == i4);\n\tSystem.out.println(i4 == i5);\n\tSystem.out.println(i4 == i5 + i6);\n\tSystem.out.println(40 == i5 + i6);\n\n\n输出及解释如下\n\t\n\tInteger i1 = 40;\n\tInteger i2 = 40;\n\tInteger i3 = 0;\n\tInteger i4 = new Integer(40);\n\tInteger i5 = new Integer(40);\n\tInteger i6 = new Integer(0);\n\t\n\tSystem.out.println(i1 == i2);//true\n\t//Integer.valueOf()用了常量池，看上面的源码\n\t//比较是内存地址\n\n\tSystem.out.println(i1 == i2 + i3);//true\n\t// + 操作会导致左右两边都转换为基本数据类型\n\t//比较是值\n\n\tSystem.out.println(i1 == i4);//false\n\t//Integer.valueOf()使用常量池中的对象\n\t//new Integer每次都会创建新对象\n\t//比较是内存地址\n\n\tSystem.out.println(i4 == i5);//false\n\t//new关键字会创建新的实例所以这是2个不同的对象\n\t//比较是内存地址\n\n\tSystem.out.println(i4 == i5 + i6);//true\n\t//解释在下面，比较的是值\n\n\n\tSystem.out.println(40 == i5 + i6);//true\n\t//解释在下面，比较的是值\n\n语句i4 = i5 + i6,因为这个 + 操作符不适用于Integer对象，首先i5和i6进行了自动拆箱的操作，进行数值相加，即i4 == 40。然后Integer对象无法与数值进行直接比较，所以i4自动拆箱转为int数据类型，值为40，最终这条语句转为40 == 40进行数值的比较。\n\n\n**本文链接：[面试官：说一下八种基本数据类型及其包装类吧](http://www.ergzcode.com/2019/01/24/java-interview-0001.html)\n欢迎转载，请注明出处！**\n\n","source":"_posts/java-interview-0001.md","raw":"title: 面试官：说一下八种基本数据类型及其包装类吧\nauthor: ergz\ntags:\n  - Java\n  - 面试题\ncategories:\n  - 搞定Java面试题\ndate: 2019-01-24 22:40:00\n---\n### 介绍\n**Java基本数据类型分为4大类：**\n\n- 整数型：byte,short,int,long\n- 浮点型：flost,double\n- 逻辑型：boolean\n- 字符型：char\n\n原始类型 | 原始类型所占字节数 |  包装类  \n-|-|-\nbyte | 1个字节 | Byte |\nshort | 2个字节 | Short |\nint | 4个字节 | Integer |\nlong | 8个字节 | Long |\nfloat | 4个字节 | Float |\ndouble | 8个字节 | Double |\nboolean | 1个字节 | Boolean |\nchar | 2个字节 | Character |\n\n<!--more-->\n### 常见面试题\n要注意的是基本数据的包装类很多都实现了享元模式。享元模式就是运用共享技术有效地支持大量细粒度对象的复用。用一个常见的面试题来解释\n\n**1.判断如下代码的输出，并说出原因**\n\n    Integer a1 = 40;\n\tInteger a2 = 40;\n\tSystem.out.println(a1==a2);\n\t\n\tInteger a3 = 200;\n\tInteger a4 = 200;\n\tSystem.out.println(a3 == a4);\n\n由自动装箱和拆箱可以知道这2种写法是等价的\n\t\n\tInteger a1 = 40;\n\tInteger a1 = Integer.valueOf(40);\n看一下Integer.valueOf(int i)的方法\n\t\n\t//...valueOf(int):Integer\n    public static Integer valueOf(int i) {\n        assert IntegerCache.high >= 127;\n        if (i >= IntegerCache.low && i <= IntegerCache.high)\n            return IntegerCache.cache[i + (-IntegerCache.low)];\n        return new Integer(i);\n    }\n\n\t//...IntegerCache\n\tprivate static class IntegerCache {\n        static final int low = -128;\n        static final int high;\n        static final Integer cache[];\n\n        static {\n            // high value may be configured by property\n            int h = 127;\n            String integerCacheHighPropValue =\n                sun.misc.VM.getSavedProperty(\"java.lang.Integer.IntegerCache.high\");\n            if (integerCacheHighPropValue != null) {\n                int i = parseInt(integerCacheHighPropValue);\n                i = Math.max(i, 127);\n                // Maximum array size is Integer.MAX_VALUE\n                h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n            }\n            high = h;\n\n            cache = new Integer[(high - low) + 1];\n            int j = low;\n            for(int k = 0; k < cache.length; k++)\n                cache[k] = new Integer(j++);\n        }\n\n        private IntegerCache() {}\n    }\nIntegerCache是Integer的静态内部类，默认创建了[-128,127]的对象，并放到IntegerCache内部的一个cache数组中，在[-128,127]这个范围内的整数对象，不用创建。直接从IntegerCache中的cache数组中根据下标拿就可以了,超出这个范围的每次去创建新的对象。其他几种包装类型的常量池和Integer的思路差不多，源码都很相似。\n所以答案如下：\n\t\n\tInteger a1 = 40;\n\tInteger a2 = 40;\n\tSystem.out.println(a1 == a2);//true\n\t\n\tInteger a3 = 200;\n\tInteger a4 = 200;\n\tSystem.out.println(a3 == a4);//false\n\n包装类缓存数据范围如下：\n\n包装类 | 缓存范围\n-|-\nByte | -128~127 \nShort | -128~127 \nInteger | -128~127\nLong | -128~127\nCharacter | 0~127\n\n**2.Java一个char类型可以存储中文吗？**\n\n可以，因为Java中使用了Unicode字符，不论是中文还是英文固定占用2个字节。\n\n\tchar a = '中'；\n\t// 中\n\tSystem.out.println(a);\t\n\n**3.什么是自动装箱，自动拆箱**\n\n自动装箱就是Java自动将原始类型转换为对应的对象，比如将int的变量转换为Integer对象，这个过程就是装箱，反之将Integer对象转换为int类型的值，这个过程就是拆箱。因为这里的装箱和拆箱是自动进行的非人为转换的，所以就称作自动装箱和自动拆箱。\n\n自动装箱时编译器调用ValueOf将原始类型值转换为对象，同时自动拆箱时，编译器通过调用类似intValue(),doubleValue()这类的方法将对象转换为原始类型值\n\t\n\t//jdk1.5之前的写法\n\tInteger tempNum1 = Integer.valueOf(5);\n\tint num1 = tempNum1.intValue();\n\t\n\t//jdk1.5之后的写法，自动装箱和拆箱\n\tInteger tempNum2= 5;\n\tint num1 = tempNum2;\n\n**4.为什么要需要基本数据类型的包装类**\n\n（1）Java是面向对象的语言，很多地方是需要使用的是对象而不是基本数据类型。例如，List,Map等容器类中基本数据类型是放不进去的。\n（2）包装类在原先的基本数据类型上，新增加了很多方法，比如Integer.valueOf(String s)等\n\t\n**5.既然包装类能完成所有的功能，为啥还需要基本数据类型**\n\n基本数据类型基于数值，对象类型基于引用。基本数据类型存储在栈的局部变量表中。\n\n而对象类型的变量则是存储堆中引用，实例放在堆中，因此对象类型的变量需要占用更多的内存空间，基本数据类型因为占用更少内存被保留下来。\n\n**6.写出如下代码的输出**\n\n\tInteger i1 = 40;\n\tInteger i2 = 40;\n\tInteger i3 = 0;\n\tInteger i4 = new Integer(40);\n\tInteger i5 = new Integer(40);\n\tInteger i6 = new Integer(0);\n\t\n\tSystem.out.println(i1 == i2);\n\tSystem.out.println(i1 == i2 + i3);\n\tSystem.out.println(i1 == i4);\n\tSystem.out.println(i4 == i5);\n\tSystem.out.println(i4 == i5 + i6);\n\tSystem.out.println(40 == i5 + i6);\n\n\n输出及解释如下\n\t\n\tInteger i1 = 40;\n\tInteger i2 = 40;\n\tInteger i3 = 0;\n\tInteger i4 = new Integer(40);\n\tInteger i5 = new Integer(40);\n\tInteger i6 = new Integer(0);\n\t\n\tSystem.out.println(i1 == i2);//true\n\t//Integer.valueOf()用了常量池，看上面的源码\n\t//比较是内存地址\n\n\tSystem.out.println(i1 == i2 + i3);//true\n\t// + 操作会导致左右两边都转换为基本数据类型\n\t//比较是值\n\n\tSystem.out.println(i1 == i4);//false\n\t//Integer.valueOf()使用常量池中的对象\n\t//new Integer每次都会创建新对象\n\t//比较是内存地址\n\n\tSystem.out.println(i4 == i5);//false\n\t//new关键字会创建新的实例所以这是2个不同的对象\n\t//比较是内存地址\n\n\tSystem.out.println(i4 == i5 + i6);//true\n\t//解释在下面，比较的是值\n\n\n\tSystem.out.println(40 == i5 + i6);//true\n\t//解释在下面，比较的是值\n\n语句i4 = i5 + i6,因为这个 + 操作符不适用于Integer对象，首先i5和i6进行了自动拆箱的操作，进行数值相加，即i4 == 40。然后Integer对象无法与数值进行直接比较，所以i4自动拆箱转为int数据类型，值为40，最终这条语句转为40 == 40进行数值的比较。\n\n\n**本文链接：[面试官：说一下八种基本数据类型及其包装类吧](http://www.ergzcode.com/2019/01/24/java-interview-0001.html)\n欢迎转载，请注明出处！**\n\n","slug":"java-interview-0001","published":1,"updated":"2019-12-26T14:42:37.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4mu6l3z0000n2d21j9kedhw","content":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><strong>Java基本数据类型分为4大类：</strong></p>\n<ul>\n<li>整数型：byte,short,int,long</li>\n<li>浮点型：flost,double</li>\n<li>逻辑型：boolean</li>\n<li>字符型：char</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>原始类型</th>\n<th>原始类型所占字节数</th>\n<th>包装类</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>byte</td>\n<td>1个字节</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2个字节</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>int</td>\n<td>4个字节</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>long</td>\n<td>8个字节</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>4个字节</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>8个字节</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>1个字节</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>char</td>\n<td>2个字节</td>\n<td>Character</td>\n</tr>\n</tbody></table>\n<a id=\"more\"></a>\n<h3 id=\"常见面试题\"><a href=\"#常见面试题\" class=\"headerlink\" title=\"常见面试题\"></a>常见面试题</h3><p>要注意的是基本数据的包装类很多都实现了享元模式。享元模式就是运用共享技术有效地支持大量细粒度对象的复用。用一个常见的面试题来解释</p>\n<p><strong>1.判断如下代码的输出，并说出原因</strong></p>\n<pre><code>Integer a1 = 40;\nInteger a2 = 40;\nSystem.out.println(a1==a2);\n\nInteger a3 = 200;\nInteger a4 = 200;\nSystem.out.println(a3 == a4);</code></pre><p>由自动装箱和拆箱可以知道这2种写法是等价的</p>\n<pre><code>Integer a1 = 40;\nInteger a1 = Integer.valueOf(40);</code></pre><p>看一下Integer.valueOf(int i)的方法</p>\n<pre><code>//...valueOf(int):Integer\npublic static Integer valueOf(int i) {\n    assert IntegerCache.high &gt;= 127;\n    if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)\n        return IntegerCache.cache[i + (-IntegerCache.low)];\n    return new Integer(i);\n}\n\n//...IntegerCache\nprivate static class IntegerCache {\n    static final int low = -128;\n    static final int high;\n    static final Integer cache[];\n\n    static {\n        // high value may be configured by property\n        int h = 127;\n        String integerCacheHighPropValue =\n            sun.misc.VM.getSavedProperty(&quot;java.lang.Integer.IntegerCache.high&quot;);\n        if (integerCacheHighPropValue != null) {\n            int i = parseInt(integerCacheHighPropValue);\n            i = Math.max(i, 127);\n            // Maximum array size is Integer.MAX_VALUE\n            h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n        }\n        high = h;\n\n        cache = new Integer[(high - low) + 1];\n        int j = low;\n        for(int k = 0; k &lt; cache.length; k++)\n            cache[k] = new Integer(j++);\n    }\n\n    private IntegerCache() {}\n}</code></pre><p>IntegerCache是Integer的静态内部类，默认创建了[-128,127]的对象，并放到IntegerCache内部的一个cache数组中，在[-128,127]这个范围内的整数对象，不用创建。直接从IntegerCache中的cache数组中根据下标拿就可以了,超出这个范围的每次去创建新的对象。其他几种包装类型的常量池和Integer的思路差不多，源码都很相似。<br>所以答案如下：</p>\n<pre><code>Integer a1 = 40;\nInteger a2 = 40;\nSystem.out.println(a1 == a2);//true\n\nInteger a3 = 200;\nInteger a4 = 200;\nSystem.out.println(a3 == a4);//false</code></pre><p>包装类缓存数据范围如下：</p>\n<table>\n<thead>\n<tr>\n<th>包装类</th>\n<th>缓存范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Byte</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Short</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Integer</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Long</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Character</td>\n<td>0~127</td>\n</tr>\n</tbody></table>\n<p><strong>2.Java一个char类型可以存储中文吗？</strong></p>\n<p>可以，因为Java中使用了Unicode字符，不论是中文还是英文固定占用2个字节。</p>\n<pre><code>char a = &apos;中&apos;；\n// 中\nSystem.out.println(a);    </code></pre><p><strong>3.什么是自动装箱，自动拆箱</strong></p>\n<p>自动装箱就是Java自动将原始类型转换为对应的对象，比如将int的变量转换为Integer对象，这个过程就是装箱，反之将Integer对象转换为int类型的值，这个过程就是拆箱。因为这里的装箱和拆箱是自动进行的非人为转换的，所以就称作自动装箱和自动拆箱。</p>\n<p>自动装箱时编译器调用ValueOf将原始类型值转换为对象，同时自动拆箱时，编译器通过调用类似intValue(),doubleValue()这类的方法将对象转换为原始类型值</p>\n<pre><code>//jdk1.5之前的写法\nInteger tempNum1 = Integer.valueOf(5);\nint num1 = tempNum1.intValue();\n\n//jdk1.5之后的写法，自动装箱和拆箱\nInteger tempNum2= 5;\nint num1 = tempNum2;</code></pre><p><strong>4.为什么要需要基本数据类型的包装类</strong></p>\n<p>（1）Java是面向对象的语言，很多地方是需要使用的是对象而不是基本数据类型。例如，List,Map等容器类中基本数据类型是放不进去的。<br>（2）包装类在原先的基本数据类型上，新增加了很多方法，比如Integer.valueOf(String s)等</p>\n<p><strong>5.既然包装类能完成所有的功能，为啥还需要基本数据类型</strong></p>\n<p>基本数据类型基于数值，对象类型基于引用。基本数据类型存储在栈的局部变量表中。</p>\n<p>而对象类型的变量则是存储堆中引用，实例放在堆中，因此对象类型的变量需要占用更多的内存空间，基本数据类型因为占用更少内存被保留下来。</p>\n<p><strong>6.写出如下代码的输出</strong></p>\n<pre><code>Integer i1 = 40;\nInteger i2 = 40;\nInteger i3 = 0;\nInteger i4 = new Integer(40);\nInteger i5 = new Integer(40);\nInteger i6 = new Integer(0);\n\nSystem.out.println(i1 == i2);\nSystem.out.println(i1 == i2 + i3);\nSystem.out.println(i1 == i4);\nSystem.out.println(i4 == i5);\nSystem.out.println(i4 == i5 + i6);\nSystem.out.println(40 == i5 + i6);</code></pre><p>输出及解释如下</p>\n<pre><code>Integer i1 = 40;\nInteger i2 = 40;\nInteger i3 = 0;\nInteger i4 = new Integer(40);\nInteger i5 = new Integer(40);\nInteger i6 = new Integer(0);\n\nSystem.out.println(i1 == i2);//true\n//Integer.valueOf()用了常量池，看上面的源码\n//比较是内存地址\n\nSystem.out.println(i1 == i2 + i3);//true\n// + 操作会导致左右两边都转换为基本数据类型\n//比较是值\n\nSystem.out.println(i1 == i4);//false\n//Integer.valueOf()使用常量池中的对象\n//new Integer每次都会创建新对象\n//比较是内存地址\n\nSystem.out.println(i4 == i5);//false\n//new关键字会创建新的实例所以这是2个不同的对象\n//比较是内存地址\n\nSystem.out.println(i4 == i5 + i6);//true\n//解释在下面，比较的是值\n\n\nSystem.out.println(40 == i5 + i6);//true\n//解释在下面，比较的是值</code></pre><p>语句i4 = i5 + i6,因为这个 + 操作符不适用于Integer对象，首先i5和i6进行了自动拆箱的操作，进行数值相加，即i4 == 40。然后Integer对象无法与数值进行直接比较，所以i4自动拆箱转为int数据类型，值为40，最终这条语句转为40 == 40进行数值的比较。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/01/24/java-interview-0001.html\">面试官：说一下八种基本数据类型及其包装类吧</a><br>欢迎转载，请注明出处！</strong></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h3><p><strong>Java基本数据类型分为4大类：</strong></p>\n<ul>\n<li>整数型：byte,short,int,long</li>\n<li>浮点型：flost,double</li>\n<li>逻辑型：boolean</li>\n<li>字符型：char</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>原始类型</th>\n<th>原始类型所占字节数</th>\n<th>包装类</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>byte</td>\n<td>1个字节</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>2个字节</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>int</td>\n<td>4个字节</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>long</td>\n<td>8个字节</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>4个字节</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>8个字节</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>1个字节</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>char</td>\n<td>2个字节</td>\n<td>Character</td>\n</tr>\n</tbody></table>","more":"<h3 id=\"常见面试题\"><a href=\"#常见面试题\" class=\"headerlink\" title=\"常见面试题\"></a>常见面试题</h3><p>要注意的是基本数据的包装类很多都实现了享元模式。享元模式就是运用共享技术有效地支持大量细粒度对象的复用。用一个常见的面试题来解释</p>\n<p><strong>1.判断如下代码的输出，并说出原因</strong></p>\n<pre><code>Integer a1 = 40;\nInteger a2 = 40;\nSystem.out.println(a1==a2);\n\nInteger a3 = 200;\nInteger a4 = 200;\nSystem.out.println(a3 == a4);</code></pre><p>由自动装箱和拆箱可以知道这2种写法是等价的</p>\n<pre><code>Integer a1 = 40;\nInteger a1 = Integer.valueOf(40);</code></pre><p>看一下Integer.valueOf(int i)的方法</p>\n<pre><code>//...valueOf(int):Integer\npublic static Integer valueOf(int i) {\n    assert IntegerCache.high &gt;= 127;\n    if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)\n        return IntegerCache.cache[i + (-IntegerCache.low)];\n    return new Integer(i);\n}\n\n//...IntegerCache\nprivate static class IntegerCache {\n    static final int low = -128;\n    static final int high;\n    static final Integer cache[];\n\n    static {\n        // high value may be configured by property\n        int h = 127;\n        String integerCacheHighPropValue =\n            sun.misc.VM.getSavedProperty(&quot;java.lang.Integer.IntegerCache.high&quot;);\n        if (integerCacheHighPropValue != null) {\n            int i = parseInt(integerCacheHighPropValue);\n            i = Math.max(i, 127);\n            // Maximum array size is Integer.MAX_VALUE\n            h = Math.min(i, Integer.MAX_VALUE - (-low) -1);\n        }\n        high = h;\n\n        cache = new Integer[(high - low) + 1];\n        int j = low;\n        for(int k = 0; k &lt; cache.length; k++)\n            cache[k] = new Integer(j++);\n    }\n\n    private IntegerCache() {}\n}</code></pre><p>IntegerCache是Integer的静态内部类，默认创建了[-128,127]的对象，并放到IntegerCache内部的一个cache数组中，在[-128,127]这个范围内的整数对象，不用创建。直接从IntegerCache中的cache数组中根据下标拿就可以了,超出这个范围的每次去创建新的对象。其他几种包装类型的常量池和Integer的思路差不多，源码都很相似。<br>所以答案如下：</p>\n<pre><code>Integer a1 = 40;\nInteger a2 = 40;\nSystem.out.println(a1 == a2);//true\n\nInteger a3 = 200;\nInteger a4 = 200;\nSystem.out.println(a3 == a4);//false</code></pre><p>包装类缓存数据范围如下：</p>\n<table>\n<thead>\n<tr>\n<th>包装类</th>\n<th>缓存范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Byte</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Short</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Integer</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Long</td>\n<td>-128~127</td>\n</tr>\n<tr>\n<td>Character</td>\n<td>0~127</td>\n</tr>\n</tbody></table>\n<p><strong>2.Java一个char类型可以存储中文吗？</strong></p>\n<p>可以，因为Java中使用了Unicode字符，不论是中文还是英文固定占用2个字节。</p>\n<pre><code>char a = &apos;中&apos;；\n// 中\nSystem.out.println(a);    </code></pre><p><strong>3.什么是自动装箱，自动拆箱</strong></p>\n<p>自动装箱就是Java自动将原始类型转换为对应的对象，比如将int的变量转换为Integer对象，这个过程就是装箱，反之将Integer对象转换为int类型的值，这个过程就是拆箱。因为这里的装箱和拆箱是自动进行的非人为转换的，所以就称作自动装箱和自动拆箱。</p>\n<p>自动装箱时编译器调用ValueOf将原始类型值转换为对象，同时自动拆箱时，编译器通过调用类似intValue(),doubleValue()这类的方法将对象转换为原始类型值</p>\n<pre><code>//jdk1.5之前的写法\nInteger tempNum1 = Integer.valueOf(5);\nint num1 = tempNum1.intValue();\n\n//jdk1.5之后的写法，自动装箱和拆箱\nInteger tempNum2= 5;\nint num1 = tempNum2;</code></pre><p><strong>4.为什么要需要基本数据类型的包装类</strong></p>\n<p>（1）Java是面向对象的语言，很多地方是需要使用的是对象而不是基本数据类型。例如，List,Map等容器类中基本数据类型是放不进去的。<br>（2）包装类在原先的基本数据类型上，新增加了很多方法，比如Integer.valueOf(String s)等</p>\n<p><strong>5.既然包装类能完成所有的功能，为啥还需要基本数据类型</strong></p>\n<p>基本数据类型基于数值，对象类型基于引用。基本数据类型存储在栈的局部变量表中。</p>\n<p>而对象类型的变量则是存储堆中引用，实例放在堆中，因此对象类型的变量需要占用更多的内存空间，基本数据类型因为占用更少内存被保留下来。</p>\n<p><strong>6.写出如下代码的输出</strong></p>\n<pre><code>Integer i1 = 40;\nInteger i2 = 40;\nInteger i3 = 0;\nInteger i4 = new Integer(40);\nInteger i5 = new Integer(40);\nInteger i6 = new Integer(0);\n\nSystem.out.println(i1 == i2);\nSystem.out.println(i1 == i2 + i3);\nSystem.out.println(i1 == i4);\nSystem.out.println(i4 == i5);\nSystem.out.println(i4 == i5 + i6);\nSystem.out.println(40 == i5 + i6);</code></pre><p>输出及解释如下</p>\n<pre><code>Integer i1 = 40;\nInteger i2 = 40;\nInteger i3 = 0;\nInteger i4 = new Integer(40);\nInteger i5 = new Integer(40);\nInteger i6 = new Integer(0);\n\nSystem.out.println(i1 == i2);//true\n//Integer.valueOf()用了常量池，看上面的源码\n//比较是内存地址\n\nSystem.out.println(i1 == i2 + i3);//true\n// + 操作会导致左右两边都转换为基本数据类型\n//比较是值\n\nSystem.out.println(i1 == i4);//false\n//Integer.valueOf()使用常量池中的对象\n//new Integer每次都会创建新对象\n//比较是内存地址\n\nSystem.out.println(i4 == i5);//false\n//new关键字会创建新的实例所以这是2个不同的对象\n//比较是内存地址\n\nSystem.out.println(i4 == i5 + i6);//true\n//解释在下面，比较的是值\n\n\nSystem.out.println(40 == i5 + i6);//true\n//解释在下面，比较的是值</code></pre><p>语句i4 = i5 + i6,因为这个 + 操作符不适用于Integer对象，首先i5和i6进行了自动拆箱的操作，进行数值相加，即i4 == 40。然后Integer对象无法与数值进行直接比较，所以i4自动拆箱转为int数据类型，值为40，最终这条语句转为40 == 40进行数值的比较。</p>\n<p><strong>本文链接：<a href=\"http://www.ergzcode.com/2019/01/24/java-interview-0001.html\">面试官：说一下八种基本数据类型及其包装类吧</a><br>欢迎转载，请注明出处！</strong></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck3z8h59600002hd2f2uuhb5l","category_id":"ck3z8h59f00012hd25tvveij3","_id":"ck3z8h59p00042hd231es7so4"},{"post_id":"ck3zcrkwb0001p0d2c0tv2hc1","category_id":"ck3zcrkwh0003p0d26n7o9ua8","_id":"ck3zcrkws0006p0d239j742rv"},{"post_id":"ck3zcrkvz0000p0d2dqf0h55r","category_id":"ck3zfj5ts0000p7d2f8nvcarp","_id":"ck3zfj5tz0003p7d20n0c14h6"},{"post_id":"ck418h06i0000hnd21bdgdch7","category_id":"ck418h06s0001hnd2ee5egxj1","_id":"ck418h0700004hnd25ps9a2a5"},{"post_id":"ck45dfwof0000d0d21y672pzb","category_id":"ck3zcrkwh0003p0d26n7o9ua8","_id":"ck45dfwpc0002d0d26ftehozb"},{"post_id":"ck45fyi070000fdd28yl73i40","category_id":"ck3zcrkwh0003p0d26n7o9ua8","_id":"ck45fyi0m0002fdd2564sbh0l"},{"post_id":"ck4bf2ex50000knd2bwjc3853","category_id":"ck4bf5na40000m3d2bnk52pjt","_id":"ck4bf5na70001m3d21xcjggkm"},{"post_id":"ck4bgfyjw000004d250p6fxlv","category_id":"ck4bgfyk2000104d2d7814jcj","_id":"ck4bgfyk7000404d20fjx69qa"},{"post_id":"ck42fq5lv0000m9d2268vbs31","category_id":"ck4bgfyk2000104d2d7814jcj","_id":"ck4bgofv5000039d26l2m3k13"},{"post_id":"ck4l0e08w0000ljd25y1eg0ka","category_id":"ck418h06s0001hnd2ee5egxj1","_id":"ck4l0e0990002ljd2g2cp17ke"},{"post_id":"ck4la4i5a000087d25bcq68v5","category_id":"ck418h06s0001hnd2ee5egxj1","_id":"ck4la4i6d000287d28ghp1f63"},{"post_id":"ck4m59o3a0000efd2aq738cg9","category_id":"ck4l7gzwi0001qod2cx438i62","_id":"ck4m59o3f0003efd26gmreaaq"},{"post_id":"ck4mtnuaj0000iad2b8753r7w","category_id":"ck4l7gzwi0001qod2cx438i62","_id":"ck4mtnuat0003iad21ao076x8"},{"post_id":"ck4mu6l3z0000n2d21j9kedhw","category_id":"ck4l7gzwi0001qod2cx438i62","_id":"ck4mu6l470003n2d2bnyber9q"}],"PostTag":[{"post_id":"ck3z8h59600002hd2f2uuhb5l","tag_id":"ck3z8h59l00022hd2d9s645it","_id":"ck3z8h59q00052hd2cvjy18ru"},{"post_id":"ck3z8h59600002hd2f2uuhb5l","tag_id":"ck3z8h59o00032hd2c0zo559e","_id":"ck3z8h59q00062hd23it318on"},{"post_id":"ck3zcrkwb0001p0d2c0tv2hc1","tag_id":"ck3z8h59l00022hd2d9s645it","_id":"ck3zcrkwr0005p0d21vun05fe"},{"post_id":"ck3zcrkvz0000p0d2dqf0h55r","tag_id":"ck3zfj5tw0001p7d2gk33awla","_id":"ck3zfj5ty0002p7d262641tpv"},{"post_id":"ck418h06i0000hnd21bdgdch7","tag_id":"ck418h06x0002hnd21dglhnl4","_id":"ck418h06z0003hnd26ct27v01"},{"post_id":"ck42fq5lv0000m9d2268vbs31","tag_id":"ck42fq5mg0002m9d2061zc5qa","_id":"ck42fq5mj0003m9d20g0tbxfq"},{"post_id":"ck45dfwof0000d0d21y672pzb","tag_id":"ck45dfwp20001d0d29llg4k39","_id":"ck45dfwpd0003d0d2eld7hssz"},{"post_id":"ck45fyi070000fdd28yl73i40","tag_id":"ck45dfwp20001d0d29llg4k39","_id":"ck45fyi0m0001fdd2dha7586h"},{"post_id":"ck4bf2ex50000knd2bwjc3853","tag_id":"ck4bf2exe0001knd2hxag8q85","_id":"ck4bf2exl0002knd27vfzdq63"},{"post_id":"ck4bgfyjw000004d250p6fxlv","tag_id":"ck4bgfyk5000204d225q97ep2","_id":"ck4bgfyk7000304d218vg5hiz"},{"post_id":"ck4l0e08w0000ljd25y1eg0ka","tag_id":"ck4kzxo100001h0d2hunybskw","_id":"ck4l0e0980001ljd2dw4e8stv"},{"post_id":"ck4la4i5a000087d25bcq68v5","tag_id":"ck4la4i5x000187d26m6j51la","_id":"ck4la4i6e000387d2cb9vauxf"},{"post_id":"ck4m59o3a0000efd2aq738cg9","tag_id":"ck4l7gzwt0002qod2fmmm9hrr","_id":"ck4m59o3e0001efd22dgyfzme"},{"post_id":"ck4m59o3a0000efd2aq738cg9","tag_id":"ck4l7gzwv0003qod2a3k2dfu2","_id":"ck4m59o3f0002efd2atzt21qd"},{"post_id":"ck4mtnuaj0000iad2b8753r7w","tag_id":"ck4l7gzwt0002qod2fmmm9hrr","_id":"ck4mtnuas0001iad2h2mm4uq4"},{"post_id":"ck4mtnuaj0000iad2b8753r7w","tag_id":"ck4l7gzwv0003qod2a3k2dfu2","_id":"ck4mtnuat0002iad2cxn53f8b"},{"post_id":"ck4mu6l3z0000n2d21j9kedhw","tag_id":"ck4l7gzwt0002qod2fmmm9hrr","_id":"ck4mu6l470001n2d2bbxm1pqz"},{"post_id":"ck4mu6l3z0000n2d21j9kedhw","tag_id":"ck4l7gzwv0003qod2a3k2dfu2","_id":"ck4mu6l470002n2d22592aqlz"}],"Tag":[{"name":"java","_id":"ck3wh0tfu00046kd28xpq9pj2"},{"name":"python","_id":"ck3wh0tg200056kd22ote3bxy"},{"name":"pm2","_id":"ck3z8h59l00022hd2d9s645it"},{"name":"hexo","_id":"ck3z8h59o00032hd2c0zo559e"},{"name":"git","_id":"ck3zfj5tw0001p7d2gk33awla"},{"name":"API","_id":"ck418h06x0002hnd21dglhnl4"},{"name":"sql","_id":"ck42fq5mg0002m9d2061zc5qa"},{"name":"Nginx","_id":"ck45dfwp20001d0d29llg4k39"},{"name":"tomcat","_id":"ck4bf2exe0001knd2hxag8q85"},{"name":"Mysql","_id":"ck4bgfyk5000204d225q97ep2"},{"name":"markdown","_id":"ck4kzxo100001h0d2hunybskw"},{"name":"Java","_id":"ck4l7gzwt0002qod2fmmm9hrr"},{"name":"面试题","_id":"ck4l7gzwv0003qod2a3k2dfu2"},{"name":"IDEA","_id":"ck4la4i5x000187d26m6j51la"}]}}